{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/HTT.jpg","path":"HTT.jpg","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/yui.jpg","path":"yui.jpg","modified":1,"renderable":0},{"_id":"source/imgs/hexo.jpg","path":"imgs/hexo.jpg","modified":1,"renderable":0},{"_id":"source/imgs/pam.jpg","path":"imgs/pam.jpg","modified":1,"renderable":0},{"_id":"source/imgs/tree.png","path":"imgs/tree.png","modified":1,"renderable":0},{"_id":"node_modules/hexo-theme-melody/source/melody-favicon.ico","path":"melody-favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/css/404.styl","path":"css/404.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/copy.js","path":"js/copy.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/fireworks.js","path":"js/fireworks.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/head.js","path":"js/head.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/hexo-theme-melody.js","path":"js/hexo-theme-melody.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/katex.js","path":"js/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/scroll.js","path":"js/scroll.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/transition.js","path":"js/transition.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/anime.min.js","path":"js/third-party/anime.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/jquery.fancybox.min.js","path":"js/third-party/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/jquery.min.js","path":"js/third-party/jquery.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/velocity.min.js","path":"js/third-party/velocity.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/velocity.ui.min.js","path":"js/third-party/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/reveal/head.min.js","path":"js/third-party/reveal/head.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/HTT.jpg","hash":"4a02bad42cfe40822bd1dd738b02227dc3af28a3","modified":1635494197340},{"_id":"source/favicon.ico","hash":"4a02bad42cfe40822bd1dd738b02227dc3af28a3","modified":1635494197340},{"_id":"source/about/index.md","hash":"e58084f42e004d37fe678ab62e7fe88e12b9c693","modified":1635670463820},{"_id":"source/_posts/A.md","hash":"699940102e5b4f9b692a5d151f3fca2c03723374","modified":1641921410241},{"_id":"source/_posts/Q.md","hash":"104d571e2ff4fc346d865d361c8bd9235880a8ea","modified":1641922293217},{"_id":"source/categories/index.md","hash":"35cdf894cf21251003d780cc907dbac8a4357e6f","modified":1635505606569},{"_id":"source/imgs/hexo.jpg","hash":"bd25231c9aea9d8baf1277bf5c8319426fd61cc5","modified":1636276485902},{"_id":"source/imgs/pam.jpg","hash":"b5ca2fcd821f75ea6319212f0eb92277fce604c6","modified":1647959853436},{"_id":"source/imgs/tree.png","hash":"e4f03e7014b89ce915b536ac84328b4848db441e","modified":1647958770107},{"_id":"source/tags/index.md","hash":"809888a085672f9f36a232f3679b9d4e64dd29ed","modified":1635505576405},{"_id":"source/links/index.md","hash":"86e9663b1023020271dcccaaeb1e800f78fa876a","modified":1697903602781},{"_id":"source/_posts/01或许是算法/sam.md","hash":"b87e55b1e5eee3a7f157464c0b7ee04892d63d0e","modified":1641214794281},{"_id":"source/_posts/01或许是算法/sam相关题目.md","hash":"3d088a5d5b5f614f94a5576d94c41cff1adfa969","modified":1637932197826},{"_id":"source/_posts/01或许是算法/单调队列优化dp.md","hash":"55c8aeb7e70f013535be2ddcf246080ca09cc068","modified":1636187895508},{"_id":"source/_posts/01或许是算法/回文树.md","hash":"cc6733b7dd11632b862d8b6b06ac2ef3314ebfd6","modified":1647962342083},{"_id":"source/_posts/01或许是算法/对顶栈.md","hash":"e5f2a03baaa3af5c85c8b0fb9a3ebf2c9f756556","modified":1659717104699},{"_id":"source/_posts/01或许是算法/维护区间众数.md","hash":"16a235224faf8250620a3f403679942cb3f7a8bf","modified":1637076874532},{"_id":"source/_posts/01或许是算法/类&拓展欧几里得.md","hash":"d2fd52238d0ca1c242024fef60fc2be60589c7e9","modified":1635784456267},{"_id":"source/_posts/03久远时光以前的补题记录/2021-11-5.md","hash":"04537645d8de56b716dc0d323181ca2580a1c86f","modified":1636077991797},{"_id":"source/_posts/03久远时光以前的补题记录/寒假补题1-H.md","hash":"4a2f0aa26c6d2826fcb364475a225a62851bfa05","modified":1641983572631},{"_id":"source/_posts/03久远时光以前的补题记录/2021-01-6.md","hash":"aa2ab05afc434c5b9894e93d8d4983c8a966481e","modified":1641489190130},{"_id":"source/_posts/04学习/Gumbel Softmax.md","hash":"c934019f7eadf906a558e64e2fab29d563b21d85","modified":1698592174069},{"_id":"source/_posts/05杂项/hexo博客搭建.md","hash":"ae3f24153db7508340473c998e8c603408cc1f36","modified":1636380353281},{"_id":"source/_posts/04学习/JAVA快速入门(1).md","hash":"2aed2092e3af816f2e35342b16e10d74a7c8e115","modified":1655322693157},{"_id":"source/_posts/04学习/cpp(1).md","hash":"a595c01478c64195c24b1bdd50f594a875adc31e","modified":1655380659855},{"_id":"source/_posts/04学习/cql.md","hash":"9b2c4e286b3118c42c3fed037ba026f1b580f55c","modified":1697903487269},{"_id":"source/_posts/04学习/价值学习.md","hash":"fb06f4d7152a4793c5eece59f9875e83f86f5668","modified":1697903495463},{"_id":"source/_posts/04学习/信息论.md","hash":"bb62a39391a2ef0cb71a37468a8bf279111d5f08","modified":1635914151115},{"_id":"source/_posts/04学习/通信原理.md","hash":"5e4fa038b4a9d4e97d79508a560c12f6183d9911","modified":1635914155156},{"_id":"source/_posts/04学习/速通形式语言与自动机.md","hash":"f22fde2d445789e4e3f0d9f2d9b2c03b3d70e00d","modified":1653790919660},{"_id":"source/_posts/04学习/鸽巢原理.md","hash":"cb444c578c890a1ffacba589988a1dca4ed6dab0","modified":1680803685515},{"_id":"source/_posts/胡言乱语们/0X00.md","hash":"fac7364d4b2e69a1721dbb9a73abd74c99788252","modified":1641919924174},{"_id":"source/_posts/胡言乱语们/0X01.md","hash":"ed47b8a600ddd369a0c707f36998e9e541cf9346","modified":1641217288552},{"_id":"source/_posts/01或许是算法/imgs/hexo.jpg","hash":"bd25231c9aea9d8baf1277bf5c8319426fd61cc5","modified":1636276485902},{"_id":"source/_posts/01或许是算法/回文树/pam.jpg","hash":"b5ca2fcd821f75ea6319212f0eb92277fce604c6","modified":1647959853436},{"_id":"source/_posts/01或许是算法/回文树/tree.png","hash":"e4f03e7014b89ce915b536ac84328b4848db441e","modified":1647958770107},{"_id":"node_modules/hexo-theme-melody/scripts/hexo-plugins.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653789700786},{"_id":"node_modules/hexo-theme-melody/source/js/hexo-theme-melody.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653789700699},{"_id":"node_modules/hexo-theme-melody/layout/includes/gallery/script.pug","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653789700760},{"_id":"node_modules/hexo-theme-melody/.travis.demo.yml","hash":"4482d40a58a035ef96888dfc4ed96c861b8f78a5","modified":1653789700787},{"_id":"node_modules/hexo-theme-melody/CHANGELOG.md","hash":"74651f2362b7beb79f502d0c352827b8b29193f4","modified":1653789700720},{"_id":"node_modules/hexo-theme-melody/FAQ.md","hash":"5984dd5335f8ead64f14d3885de5cc5ef09dfff8","modified":1653789700721},{"_id":"node_modules/hexo-theme-melody/LICENSE","hash":"dbbc2e6e42affa5ac962826f01bffa8c7aecd6b8","modified":1653789700674},{"_id":"node_modules/hexo-theme-melody/README.md","hash":"9239744d3bcd86c2082809278d562c7de1595eff","modified":1653789700722},{"_id":"node_modules/hexo-theme-melody/package.json","hash":"5ff7c37cd7f80cd86cb526afd87b63ee19b3f00e","modified":1654693313841},{"_id":"node_modules/hexo-theme-melody/_config.yml","hash":"a63149d645bb130b7102996980594dde8cde39b2","modified":1653789700786},{"_id":"node_modules/hexo-theme-melody/languages/en.yml","hash":"bc3e99b6471ebae5f7f7ecf6554862eebc95b757","modified":1654693603089},{"_id":"node_modules/hexo-theme-melody/languages/default.yml","hash":"bc3e99b6471ebae5f7f7ecf6554862eebc95b757","modified":1654693582892},{"_id":"node_modules/hexo-theme-melody/layout/404.pug","hash":"0ad5d251ba70edad5c04a45d13ca6a8db3bf7b42","modified":1653789700726},{"_id":"node_modules/hexo-theme-melody/languages/zh-Hans.yml","hash":"2843e35e1e460aaf79234a9f501ff0498eebcd06","modified":1654693596631},{"_id":"node_modules/hexo-theme-melody/layout/category.pug","hash":"ea5f82d69e586f293f428f3b237c17bf873b4f03","modified":1653789700737},{"_id":"node_modules/hexo-theme-melody/layout/archive.pug","hash":"2133e9f369dac19b9f843fc956521f864ace7567","modified":1653789700731},{"_id":"node_modules/hexo-theme-melody/layout/gallery.pug","hash":"c083a7bbf5f46305daed74632aef3403b7d94dc7","modified":1653789700741},{"_id":"node_modules/hexo-theme-melody/layout/index.pug","hash":"5e969c09fa5902829ad0b14c0af8d432bd4c7078","modified":1653789700746},{"_id":"node_modules/hexo-theme-melody/layout/page.pug","hash":"09c1c7c4ffff114c886b097ec82e046399ab79e1","modified":1653789700756},{"_id":"node_modules/hexo-theme-melody/layout/slides.pug","hash":"1e84a92d5b854dd233e0b511d59c1cd7c8d647a1","modified":1653789700766},{"_id":"node_modules/hexo-theme-melody/layout/post.pug","hash":"436bb1b7d14e29cba8010d3ea14df19681fbb5fe","modified":1653789700759},{"_id":"node_modules/hexo-theme-melody/source/melody-favicon.ico","hash":"e33c804e570eb238fe095ed28346dd1b3a0666ae","modified":1653789700683},{"_id":"node_modules/hexo-theme-melody/layout/tag.pug","hash":"ca333911bc97bc9d3eba6e1bc05e96b209ecedfb","modified":1653789700766},{"_id":"node_modules/hexo-theme-melody/scripts/gallery-tag.js","hash":"74e2e95f8daec619578f4b7dd1ed77cd5907f37e","modified":1653789700695},{"_id":"node_modules/hexo-theme-melody/scripts/replace-config.js","hash":"a8e9a18b2798d3c694a3efa8036f82046c3eb037","modified":1653789700708},{"_id":"node_modules/hexo-theme-melody/layout/includes/additional-js.pug","hash":"c4ca62466684758d5a26e5866f9ed87b5c9401b8","modified":1653789700729},{"_id":"node_modules/hexo-theme-melody/layout/includes/config.pug","hash":"66e384b1cfe58a57b80f7dff0388bf00bb8bfdf8","modified":1653789700738},{"_id":"node_modules/hexo-theme-melody/layout/includes/footer.pug","hash":"0d8003991007ad4ae977ea3745780dac867e3b67","modified":1653790724683},{"_id":"node_modules/hexo-theme-melody/layout/includes/header.pug","hash":"f440a9741eeacfa62f0a0e7ef470a104f1cb510c","modified":1653789700743},{"_id":"node_modules/hexo-theme-melody/layout/includes/head.pug","hash":"cdabb5841dc42a58b6e06df9bc4f5acf90bc8419","modified":1653789700743},{"_id":"node_modules/hexo-theme-melody/layout/includes/layout.pug","hash":"58856b5048fb64e7dab75a6ae32cc2a0ad94de4f","modified":1653789700751},{"_id":"node_modules/hexo-theme-melody/layout/includes/nav.pug","hash":"3f1fe059784df45f923587b81cc972659ed22e01","modified":1653789700755},{"_id":"node_modules/hexo-theme-melody/layout/includes/pagination.pug","hash":"fe33a94d90836b767c42654ccc4c4de7d7f227fc","modified":1653789700757},{"_id":"node_modules/hexo-theme-melody/layout/includes/sidebar.pug","hash":"211b8ecfdb7b5dd836c87436def410a52dfa5ecd","modified":1653789700764},{"_id":"node_modules/hexo-theme-melody/layout/includes/recent-posts.pug","hash":"128c448f5bab71f59912516edff9d476ff6b8afe","modified":1653789700759},{"_id":"node_modules/hexo-theme-melody/source/css/index.styl","hash":"2053ba56db707e7a03796ba59f77103765b02353","modified":1653789700778},{"_id":"node_modules/hexo-theme-melody/source/css/var.styl","hash":"30517cf0f76c722038f193086cb9d412acfcceaf","modified":1654693903158},{"_id":"node_modules/hexo-theme-melody/source/js/fancybox.js","hash":"2d3eaa654b2524c41dc5aba1d5e2e7cc9aaefd26","modified":1653789700693},{"_id":"node_modules/hexo-theme-melody/source/js/copy.js","hash":"ce7f8601c7c75ced79e2e9851beec37299d49fd1","modified":1653789700692},{"_id":"node_modules/hexo-theme-melody/source/js/head.js","hash":"555e9caa046d5a174af8d20c75e9e89c25aabb6c","modified":1653789700696},{"_id":"node_modules/hexo-theme-melody/source/js/fireworks.js","hash":"17d5770d46d9b531b675b129835561146290af83","modified":1653789700694},{"_id":"node_modules/hexo-theme-melody/source/css/404.styl","hash":"b7a0f8b23cb137b1a6c4fa0f9a35e06e93065b2c","modified":1653789700769},{"_id":"node_modules/hexo-theme-melody/source/js/katex.js","hash":"a5a999b357c0fd9aeacae721bf121f30d40d6726","modified":1653789700706},{"_id":"node_modules/hexo-theme-melody/source/js/scroll.js","hash":"fcc20d10c936d49c3f0cd2a97030ecaf64d213c8","modified":1653789700709},{"_id":"node_modules/hexo-theme-melody/source/js/sidebar.js","hash":"a42109c5a69dedc87e1aaf8cb2383fd43069677e","modified":1653789700710},{"_id":"node_modules/hexo-theme-melody/source/js/transition.js","hash":"11c3b82a5e9ef2bf7bd712b6c211d86426f9a23e","modified":1653789700713},{"_id":"node_modules/hexo-theme-melody/source/js/utils.js","hash":"f514662ad80803e1bb5f6bc653c4b9ad06ea4932","modified":1653789700714},{"_id":"node_modules/hexo-theme-melody/source/img/avatar.png","hash":"a44601fac9a81dd7e392d05ea5ddc65c96b051df","modified":1653789700724},{"_id":"node_modules/hexo-theme-melody/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1653789700785},{"_id":"node_modules/hexo-theme-melody/layout/includes/404/404-nav.pug","hash":"4cd894857bb90fe44b55e852864692ed06588b8e","modified":1653789700725},{"_id":"node_modules/hexo-theme-melody/layout/includes/404/layout.pug","hash":"9c7cdf16a9b9b4aa251dba9378a0f00d985101de","modified":1653789700749},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/gitalk.pug","hash":"86bdbc4a52024c3573bea27817394dd118b70a26","modified":1653789700741},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/disqus.pug","hash":"e62b73df92566806bfb170f204295cffd7074215","modified":1653789700739},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/gitment.pug","hash":"0b7cd8b0b114876238ca022abda4c1fcdfaee12f","modified":1653789700742},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/index.pug","hash":"74f283727ad2096bd7ad8eb8c6f47b07f7e59b84","modified":1653789700744},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/laibili.pug","hash":"97de1d1fb0459e7a2394ac2f5e449adf9b6986cb","modified":1653789700749},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/valine.pug","hash":"bc58746ed5c8cc001ad47f1db30e3bdb1aab5fa9","modified":1653789700767},{"_id":"node_modules/hexo-theme-melody/layout/includes/comments/vssue.pug","hash":"4ee6cea08286cbac2648a6032f73e5f8d2b88380","modified":1653789700768},{"_id":"node_modules/hexo-theme-melody/layout/includes/count/busuanzi.pug","hash":"4df5e63ab0113efb93f05ef781b2a7e3f34ba753","modified":1653789700735},{"_id":"node_modules/hexo-theme-melody/layout/includes/mixins/article-sort.pug","hash":"297b098dc6bba73b76bac4cf6bcd0c29d5dcb2ed","modified":1653789700732},{"_id":"node_modules/hexo-theme-melody/layout/includes/gallery/layout.pug","hash":"8ff96c4f9afb416c5fc586c9585ae51cb6129529","modified":1653789700750},{"_id":"node_modules/hexo-theme-melody/layout/includes/search/algolia.pug","hash":"44d5a061df53a276d22b3855652645d90117d0b6","modified":1653789700730},{"_id":"node_modules/hexo-theme-melody/layout/includes/mixins/slide.pug","hash":"91975f700b20131ab4df4d2ea3e1acc8bf2d3eef","modified":1653789700765},{"_id":"node_modules/hexo-theme-melody/layout/includes/share/add-this.pug","hash":"17a11c1c36c9078639c2a82628ce5fc6584daffb","modified":1653789700727},{"_id":"node_modules/hexo-theme-melody/layout/includes/search/index.pug","hash":"b01828b37d789797aeb5433f1705cff3c540a4d5","modified":1653789700745},{"_id":"node_modules/hexo-theme-melody/layout/includes/search/local-search.pug","hash":"f88070a84379bc06fb385e1193448fae6a8a54e1","modified":1653789700754},{"_id":"node_modules/hexo-theme-melody/layout/includes/share/index.pug","hash":"a2ec6da33cf5fa0ba6c8c38ec3841a0b0003ce98","modified":1653789700745},{"_id":"node_modules/hexo-theme-melody/layout/includes/slide/layout.pug","hash":"e6963fb20340f60fe9bd2c9dbfff50decee159b3","modified":1653789700753},{"_id":"node_modules/hexo-theme-melody/layout/includes/share/share-js.pug","hash":"e612725ba48711fc119f91c6196287ad13f5a2ba","modified":1653789700762},{"_id":"node_modules/hexo-theme-melody/layout/includes/slide/script.pug","hash":"7ef8aa16e2b3321eb175b7f64434c2fa44eff138","modified":1653789700761},{"_id":"node_modules/hexo-theme-melody/layout/includes/third-party/canvas-ribbon.pug","hash":"39a03f188ac415642766b062a80b1b710f3ea609","modified":1653789700737},{"_id":"node_modules/hexo-theme-melody/layout/includes/third-party/mathjax.pug","hash":"33b350f9826795cd59d9e277a24accc8a9bc9076","modified":1653789700754},{"_id":"node_modules/hexo-theme-melody/layout/includes/third-party/katex.pug","hash":"79b2336ad8d921907a5b1badc10ba1651c92843b","modified":1653789700746},{"_id":"node_modules/hexo-theme-melody/source/css/_global/index.styl","hash":"74a3ab7ecf9e692c1dd978bc518af582bfad7cd0","modified":1654693744454},{"_id":"node_modules/hexo-theme-melody/source/css/_highlight/highlight.styl","hash":"3c6697cdd08591588dd56371376dc1f7a2744fca","modified":1655125837754},{"_id":"node_modules/hexo-theme-melody/source/css/_highlight/diff.styl","hash":"ffdfbf088da7bf33899557395abcac0d2bffd67d","modified":1653789700773},{"_id":"node_modules/hexo-theme-melody/source/css/_highlight/theme.styl","hash":"7d85860927afa1d93b4a39febff3d95a73de4c36","modified":1653789700783},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/footer.styl","hash":"ca8c816bdb144503bec7e755344fb0e4e370a7bf","modified":1653789700773},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/page.styl","hash":"d2f6050bf6ef80523ed9a5a0f058fa5dbaf72ea8","modified":1653789700780},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/head.styl","hash":"73488de3f36369c29ecd5e0be9661bb2b508548c","modified":1653789700774},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/post.styl","hash":"dd194654f3b67040a23f692af3aca17d7c9b1cf3","modified":1654693989109},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/comments.styl","hash":"e58602aad6792f1a5dbda0677ecb04d21ac10e97","modified":1653789700771},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/pagination.styl","hash":"a3f52d1f7ff1eaead8df016b2a4def6f7b4e9559","modified":1653789700780},{"_id":"node_modules/hexo-theme-melody/source/css/_search/algolia.styl","hash":"534e5641e3efe2452db95cc25ec8da0111ceadcf","modified":1653789700770},{"_id":"node_modules/hexo-theme-melody/source/css/_layout/sidebar.styl","hash":"e8315401a6c791d00617c031be01f45df70fe7fd","modified":1653789700782},{"_id":"node_modules/hexo-theme-melody/source/css/_search/local-search.styl","hash":"d7970b385265fef782cdcaaf4fe68a2217625467","modified":1653789700779},{"_id":"node_modules/hexo-theme-melody/source/css/_search/index.styl","hash":"63cae4465ac54b71361c1795206534c7f2e6e5b1","modified":1653789700777},{"_id":"node_modules/hexo-theme-melody/source/css/_third-party/normalize.min.css","hash":"e12eef6d6811c132f4f2fcf6c936be384191bcaf","modified":1653789700680},{"_id":"node_modules/hexo-theme-melody/source/js/search/algolia.js","hash":"8d2cc7ac4a015563344a3981c3040d308489935c","modified":1653789700685},{"_id":"node_modules/hexo-theme-melody/source/css/_third-party/jquery.fancybox.min.css","hash":"f9c94ec04062a1bfe1ef894c49e6ec33fa121778","modified":1653789700678},{"_id":"node_modules/hexo-theme-melody/source/js/search/local-search.js","hash":"b7e77c27097d9d3ced13618912069d1ddf1cd64a","modified":1653789700707},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/anime.min.js","hash":"3c46c9597c721644a515c1c54ab13f46406657f7","modified":1653789700689},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/jquery.fancybox.min.js","hash":"2ec3ef6c31b971ba5e58eb4a0c5ede902bbdd4af","modified":1653789700701},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/canvas-ribbon.js","hash":"8fd084e962fb2028be9f748b5cb5f53d030d1d03","modified":1653789700690},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1653789700717},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/velocity.min.js","hash":"69c85b9d6a931a7d3a5b0657e60112c31fb3b286","modified":1653789700716},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/reveal/head.min.js","hash":"8c9495c76d5aa00d3dfb88653c362fba9f10cbb2","modified":1653789700698},{"_id":"source/yui.jpg","hash":"bd8498a3f5889a680be666789353d8f9cf520101","modified":1635568776442},{"_id":"node_modules/hexo-theme-melody/source/js/third-party/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1653789700705}],"Category":[{"name":"算法","_id":"clobly6cq0006zowbcmgq4fcc"},{"name":"DP","parent":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d0000hzowbbq7gc0w3"},{"name":"字符串","parent":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d3000nzowbb9jf11xp"},{"name":"数学","parent":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6db0016zowb3r46fkco"},{"name":"补题","_id":"clobly6df001ezowb11wqgi15"},{"name":"杂项","_id":"clobly6do001yzowbfati1ol8"},{"name":"DRL","_id":"clobly6dp0023zowbbwxc3l7o"},{"name":"c++","_id":"clobly6dp0027zowb9u9sa5c6"},{"name":"JAVA","_id":"clobly6dq002bzowbgicldfrm"},{"name":"课内","_id":"clobly6dt002mzowbe2i3c5hc"},{"name":"课外","_id":"clobly6du002uzowbdvba9uiw"},{"name":"胡言乱语","_id":"clobly6dx002zzowb1atd934k"},{"name":"组合数学","_id":"clobly6dy0033zowbgr9gg144"}],"Data":[],"Page":[{"title":"Pophirasawa","date":"2021-10-29T09:21:07.000Z","_content":"不知道浪费了多少时间，又下定决心好好学习了？\n在此之前，有没有考虑过再看一遍轻音少女呢。","source":"about/index.md","raw":"---\ntitle: Pophirasawa\ndate: 2021-10-29 17:21:07\n---\n不知道浪费了多少时间，又下定决心好好学习了？\n在此之前，有没有考虑过再看一遍轻音少女呢。","updated":"2021-10-31T08:54:23.820Z","path":"about/index.html","comments":1,"layout":"page","_id":"clobly6cg0000zowbfqa35pz4","content":"<p>不知道浪费了多少时间，又下定决心好好学习了？<br />\n在此之前，有没有考虑过再看一遍轻音少女呢。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>不知道浪费了多少时间，又下定决心好好学习了？<br />\n在此之前，有没有考虑过再看一遍轻音少女呢。</p>\n"},{"title":"categories","date":"2021-10-29T10:05:49.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-10-29 18:05:49\ntype: \"categories\"\n---\n","updated":"2021-10-29T11:06:46.569Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clobly6cm0002zowbhi2p9iaa","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-10-29T10:04:25.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-10-29 18:04:25\ntype: \"tags\"\n---\n","updated":"2021-10-29T11:06:16.405Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clobly6co0004zowb53a28jeh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"My Friends' Blogs","date":"2021-11-04T05:52:29.000Z","_content":"\n> 有没有一种可能，以下的都是超人捏\n\n# 确实\n\n**Jnnnnn：**[POPCHICKEN's Blog](https://jnn.icu/)\n**蘑菇：**[Mushroom323's Blog](https://mushroom323.github.io/)\n**Heye：**[Heyewuyue1's Blog](https://heyewuyue1.github.io/)\n**F0：**[Ibukifalling's Blog](https://ibukifalling.github.io/)\n**伞哥：**[Fohunbrella's Blog](https://fohunbrella.github.io/)\n**Bangg：**[Banned's Blog](https://blog.banned.top/)\n**TonyZhao：**[TonyZhao's Blog](https://blog.tonyzhao.xyz/)\n**WA_Automaton:**[WA_Automaton's Blog](https://wa-automaton.github.io/)\n**孙老师**：[香芋派Taro's Blog](https://taropie0224.github.io/)\n**山荷叶:** [0x39.me](https://0xe9.me/)\n**山阳子瑜:** [鱼籽](https://sherroe.github.io/) \n**mhy:** [mhy](https://kafudolly.github.io/) \n**石上:** [ 石上](https://lanweifrj.github.io/) \n**RuaYiii:** [Rua宝](https://ruayiii.github.io/) \n**Poria:** [Poria](https://poriahcorvus.github.io/) \n**晓羽:** [晓羽](https://xylog.cn/) \n**天泽龟:** [天泽龟](https://turleing.github.io/)\n**Jungle's Blog:** [Jungle](https://jungle430.github.io/)\n**anda:** [anda](https://junpickle.github.io)\n**泽村睿:**[泽村睿](https://scientificw.github.io/)","source":"links/index.md","raw":"---\ntitle: My Friends' Blogs\ndate: 2021-11-04 13:52:29\n---\n\n> 有没有一种可能，以下的都是超人捏\n\n# 确实\n\n**Jnnnnn：**[POPCHICKEN's Blog](https://jnn.icu/)\n**蘑菇：**[Mushroom323's Blog](https://mushroom323.github.io/)\n**Heye：**[Heyewuyue1's Blog](https://heyewuyue1.github.io/)\n**F0：**[Ibukifalling's Blog](https://ibukifalling.github.io/)\n**伞哥：**[Fohunbrella's Blog](https://fohunbrella.github.io/)\n**Bangg：**[Banned's Blog](https://blog.banned.top/)\n**TonyZhao：**[TonyZhao's Blog](https://blog.tonyzhao.xyz/)\n**WA_Automaton:**[WA_Automaton's Blog](https://wa-automaton.github.io/)\n**孙老师**：[香芋派Taro's Blog](https://taropie0224.github.io/)\n**山荷叶:** [0x39.me](https://0xe9.me/)\n**山阳子瑜:** [鱼籽](https://sherroe.github.io/) \n**mhy:** [mhy](https://kafudolly.github.io/) \n**石上:** [ 石上](https://lanweifrj.github.io/) \n**RuaYiii:** [Rua宝](https://ruayiii.github.io/) \n**Poria:** [Poria](https://poriahcorvus.github.io/) \n**晓羽:** [晓羽](https://xylog.cn/) \n**天泽龟:** [天泽龟](https://turleing.github.io/)\n**Jungle's Blog:** [Jungle](https://jungle430.github.io/)\n**anda:** [anda](https://junpickle.github.io)\n**泽村睿:**[泽村睿](https://scientificw.github.io/)","updated":"2023-10-21T15:53:22.781Z","path":"links/index.html","comments":1,"layout":"page","_id":"clobly6ct0008zowbbidd1z1r","content":"<blockquote>\n<p>有没有一种可能，以下的都是超人捏</p>\n</blockquote>\n<h1 id=\"确实\"><a class=\"markdownIt-Anchor\" href=\"#确实\"></a> 确实</h1>\n<p><strong>Jnnnnn：</strong><a href=\"https://jnn.icu/\">POPCHICKEN’s Blog</a><br />\n<strong>蘑菇：</strong><a href=\"https://mushroom323.github.io/\">Mushroom323’s Blog</a><br />\n<strong>Heye：</strong><a href=\"https://heyewuyue1.github.io/\">Heyewuyue1’s Blog</a><br />\n<strong>F0：</strong><a href=\"https://ibukifalling.github.io/\">Ibukifalling’s Blog</a><br />\n<strong>伞哥：</strong><a href=\"https://fohunbrella.github.io/\">Fohunbrella’s Blog</a><br />\n<strong>Bangg：</strong><a href=\"https://blog.banned.top/\">Banned’s Blog</a><br />\n<strong>TonyZhao：</strong><a href=\"https://blog.tonyzhao.xyz/\">TonyZhao’s Blog</a><br />\n<strong>WA_Automaton:</strong><a href=\"https://wa-automaton.github.io/\">WA_Automaton’s Blog</a><br />\n<strong>孙老师</strong>：<a href=\"https://taropie0224.github.io/\">香芋派Taro’s Blog</a><br />\n<strong>山荷叶:</strong> <a href=\"https://0xe9.me/\">0x39.me</a><br />\n<strong>山阳子瑜:</strong> <a href=\"https://sherroe.github.io/\">鱼籽</a><br />\n<strong>mhy:</strong> <a href=\"https://kafudolly.github.io/\">mhy</a><br />\n<strong>石上:</strong> <a href=\"https://lanweifrj.github.io/\"> 石上</a><br />\n<strong>RuaYiii:</strong> <a href=\"https://ruayiii.github.io/\">Rua宝</a><br />\n<strong>Poria:</strong> <a href=\"https://poriahcorvus.github.io/\">Poria</a><br />\n<strong>晓羽:</strong> <a href=\"https://xylog.cn/\">晓羽</a><br />\n<strong>天泽龟:</strong> <a href=\"https://turleing.github.io/\">天泽龟</a><br />\n<strong>Jungle’s Blog:</strong> <a href=\"https://jungle430.github.io/\">Jungle</a><br />\n<strong>anda:</strong> <a href=\"https://junpickle.github.io\">anda</a><br />\n<strong>泽村睿:</strong><a href=\"https://scientificw.github.io/\">泽村睿</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>有没有一种可能，以下的都是超人捏</p>\n</blockquote>\n<h1 id=\"确实\"><a class=\"markdownIt-Anchor\" href=\"#确实\"></a> 确实</h1>\n<p><strong>Jnnnnn：</strong><a href=\"https://jnn.icu/\">POPCHICKEN’s Blog</a><br />\n<strong>蘑菇：</strong><a href=\"https://mushroom323.github.io/\">Mushroom323’s Blog</a><br />\n<strong>Heye：</strong><a href=\"https://heyewuyue1.github.io/\">Heyewuyue1’s Blog</a><br />\n<strong>F0：</strong><a href=\"https://ibukifalling.github.io/\">Ibukifalling’s Blog</a><br />\n<strong>伞哥：</strong><a href=\"https://fohunbrella.github.io/\">Fohunbrella’s Blog</a><br />\n<strong>Bangg：</strong><a href=\"https://blog.banned.top/\">Banned’s Blog</a><br />\n<strong>TonyZhao：</strong><a href=\"https://blog.tonyzhao.xyz/\">TonyZhao’s Blog</a><br />\n<strong>WA_Automaton:</strong><a href=\"https://wa-automaton.github.io/\">WA_Automaton’s Blog</a><br />\n<strong>孙老师</strong>：<a href=\"https://taropie0224.github.io/\">香芋派Taro’s Blog</a><br />\n<strong>山荷叶:</strong> <a href=\"https://0xe9.me/\">0x39.me</a><br />\n<strong>山阳子瑜:</strong> <a href=\"https://sherroe.github.io/\">鱼籽</a><br />\n<strong>mhy:</strong> <a href=\"https://kafudolly.github.io/\">mhy</a><br />\n<strong>石上:</strong> <a href=\"https://lanweifrj.github.io/\"> 石上</a><br />\n<strong>RuaYiii:</strong> <a href=\"https://ruayiii.github.io/\">Rua宝</a><br />\n<strong>Poria:</strong> <a href=\"https://poriahcorvus.github.io/\">Poria</a><br />\n<strong>晓羽:</strong> <a href=\"https://xylog.cn/\">晓羽</a><br />\n<strong>天泽龟:</strong> <a href=\"https://turleing.github.io/\">天泽龟</a><br />\n<strong>Jungle’s Blog:</strong> <a href=\"https://jungle430.github.io/\">Jungle</a><br />\n<strong>anda:</strong> <a href=\"https://junpickle.github.io\">anda</a><br />\n<strong>泽村睿:</strong><a href=\"https://scientificw.github.io/\">泽村睿</a></p>\n"}],"Post":[{"title":"Super Star Spectacle","date":"2022-01-11T17:09:00.000Z","top":1,"_content":"> **列车一定会去往下一站，而舞台少女，将会前往下个舞台。**","source":"_posts/A.md","raw":"---\ntitle: Super Star Spectacle\ndate: 2022-01-12 01:09:00\ntags:\ntop: 1\n---\n> **列车一定会去往下一站，而舞台少女，将会前往下个舞台。**","slug":"A","published":1,"updated":"2022-01-11T17:16:50.241Z","_id":"clobly6cj0001zowb8icg8fle","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><strong>列车一定会去往下一站，而舞台少女，将会前往下个舞台。</strong></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><strong>列车一定会去往下一站，而舞台少女，将会前往下个舞台。</strong></p>\n</blockquote>\n"},{"title":"后缀自动机","date":"2021-11-19T18:08:36.000Z","_content":"\n> 这玩意就是SAM的原理以及基本板子了，大概，说不定再来一点套路总结吧\n\n总的来说，这玩意拖的也太久了，一直说要学，然后狂摸不止，我 **有罪**！\n\n欸嘿\n\n<!-- more -->\n\n# 介绍\n\n首先后缀自动机\n\n- 可以包括给定字符串的所有子串\n- O(n)\n- **是自动机**\n\n\n\n## 一些定义\n\n**endpos**\n\n> 字符串s的一个子串t，endpos(t)为s中t的`所有`结束位置构成的集合\n\n**SAM是一个最小的DFA**\n\n> - 有向无环图\n> - 节点是状态，边是转移\n> - 转移是一些字母\n> - 从源点出发到终止状态所有转移连起来的字符串t是字符串s的一个后缀\n> - SAM的节点最小\n\n那么如果endpos(t1)=endpos(t2)，那么他们就在一个`等价类`中\n\n## 一堆引理\n\n- 两个非空子串u，w  (|u|<=|w|)  endpos相同，只有u在s中每次出现都是以w的后缀出现的\n- 那么就可以推出来： 考虑u，w  (|u|<=|w|) 只有2种可能\n    - endpos(u),endpos(w)不相交\n    -   endpos(w)是endpos(u)的**子集**\n- 一个endpos等价类里边，所有子串长度不同，而且差值为1，正好覆盖区间\n\n**然后就有我们的后缀link**\n\n> 对于一个不是源点的状态v，然后考虑这个endpos等价类中最长的字符串w，其他的就是w后缀了捏\n>\n> 然后我们有\n>\n> - w开始，有一个连续区间长度的后缀也都是这个等价类里边的玩意，定义最长的一个不是等价类里边的后缀为t，把v的后缀link到t上\n\n显然最后是link到源点的\n\n最后这玩意就构成了一个**树**\n\n然后我们就可以开始算法本身了捏\n\n---\n\n# 算法实现\n\n> 哥们看不懂捏\n\n首先说重点\n\n**后缀link树和后缀自动机共同相同的节点，不同的只是转移的边不同**\n\n## 大概步骤\n\n首先，这个是在线算法，我们每次往自动机里加入一个字符，然后维护SAM\n\n**首先定义初始状态**\n\n这个点编号0，len=0，fa=0\n\n然后我们就能挨个加入字符c了\n\n有以下流程\n\n> 首先我们加入了一个新字符，那么新串对应的的endpos是新的长度，以前不存在，因此我们新建一个状态**np**，之前整个旧串对应的状态记为**p**，很显然len(q)=len(p)+1\n\n然后对于新加入的字符c，我们进行以下操作\n\n> 如果**p**没有一个字符c的出边(这里是自动机的边)，就在`link树`上到他的父节点，也就是后缀link的点，一直循环直到**p**到达**初始状态**的节点或者有一个字符c的出边\n\n这个操作其实是压缩遍历旧串的所有后缀x，然后看是否存在一个x+c在旧串种就存在了，因为引理中已经提到，每个状态link到的节点都是当前状态的后缀，所有我们从**p**上来肯定是旧串的后缀了捏\n\n途中我们把经过每个没有c出边的**p**都连一个c到**np**\n\n然后我们就有3种情况\n\n### Case 1\n\n> **p**到初始状态都没有c的出边\n\n**np**状态直接link到初始状态\n\n### Case 2\n\n> 找到了一个**p**，有c的出边，到达一个新状态**q**，且**len( q )=len( p )+1**\n\n首先我们知道**p**是旧串后缀，**q**是**p**的字符串+c，因此**q**是新串的后缀，那么我们理所当然把**np** link 到**q**上就行了\n\n### Case 3\n\n> 和case2差不多，但是找到的**p**出边到达的**q**没有**len( q )=len( p )+1**\n>\n> 或者说，**len( q )>len( q )+1**\n\n这时候我们要把q拆成两个点，是新串后缀的和不是的，然后link就行\n\n具体来说，定义一个新点**nq**，len=len(p)+1,出边转移和**q**相同，link 到**p**上，然后**np**和**q**都link到**nq**上\n\n最后稍微更新下转移边，**p**往上走，把所有**p** link 到**q**的转移 link 到**nq**上就行了\n\n---\n\n最后稍微提一下如何计算每个状态的endpos大小\n\n设想一下，我们每次加入一个字符c，肯定会出现一个新的endpos，而且他能够对往上走到源点经过的所有节点都产生影响，也就是说我们使用一个数组f[i]来统计endpos，加入新字符时让f[np]=1,最后跑一下dfs，**f[i]=f[i]+sum(f[i所有的儿子])** 即可捏\n\n或者把sam的点按len排序(可以用桶排) 从大到小更新 **f[sam[i].fa]+=f[i]**也行\n\n---\n\n# code\n\n先贴一手毛的板子\n\n```c++\nstruct NODE\n{\n    int ch[26];\n    int len,fa;\n    NODE(){memset(ch,0,sizeof(ch));len=0;}\n}sam[MAXN<<1];\nint lst=1,tot=1;\nvoid add(int c)\n{\n    int p=lst;int np=lst=++tot;\n    sam[np].len=sam[p].len+1;\n    for(;p&&!sam[p].ch[c];p=sam[p].fa)sam[p].ch[c]=np;\n    if(!p)sam[np].fa=1;//以上为case 1\n    else\n    {\n        int q=sam[p].ch[c];\n        if(sam[q].len==sam[p].len+1)sam[np].fa=q;//以上为case 2\n        else\n        {\n            int nq=++tot;sam[nq]=sam[q];\n            sam[nq].len=sam[p].len+1;\n            sam[q].fa=sam[np].fa=nq; \n            for(;p&&sam[p].ch[c]==q;p=sam[p].fa)sam[p].ch[c]=nq;//以上为case 3\n        }\n    }\n}\n```\n\n---\n\n暂时先写这么多，乏了，早上写一手题以及用法吧\n","source":"_posts/01或许是算法/sam.md","raw":"---\ntitle: 后缀自动机\ndate: 2021-11-20 02:08:36\ntags: \n- SAM\ncategory: \n- 算法\n- 字符串\n---\n\n> 这玩意就是SAM的原理以及基本板子了，大概，说不定再来一点套路总结吧\n\n总的来说，这玩意拖的也太久了，一直说要学，然后狂摸不止，我 **有罪**！\n\n欸嘿\n\n<!-- more -->\n\n# 介绍\n\n首先后缀自动机\n\n- 可以包括给定字符串的所有子串\n- O(n)\n- **是自动机**\n\n\n\n## 一些定义\n\n**endpos**\n\n> 字符串s的一个子串t，endpos(t)为s中t的`所有`结束位置构成的集合\n\n**SAM是一个最小的DFA**\n\n> - 有向无环图\n> - 节点是状态，边是转移\n> - 转移是一些字母\n> - 从源点出发到终止状态所有转移连起来的字符串t是字符串s的一个后缀\n> - SAM的节点最小\n\n那么如果endpos(t1)=endpos(t2)，那么他们就在一个`等价类`中\n\n## 一堆引理\n\n- 两个非空子串u，w  (|u|<=|w|)  endpos相同，只有u在s中每次出现都是以w的后缀出现的\n- 那么就可以推出来： 考虑u，w  (|u|<=|w|) 只有2种可能\n    - endpos(u),endpos(w)不相交\n    -   endpos(w)是endpos(u)的**子集**\n- 一个endpos等价类里边，所有子串长度不同，而且差值为1，正好覆盖区间\n\n**然后就有我们的后缀link**\n\n> 对于一个不是源点的状态v，然后考虑这个endpos等价类中最长的字符串w，其他的就是w后缀了捏\n>\n> 然后我们有\n>\n> - w开始，有一个连续区间长度的后缀也都是这个等价类里边的玩意，定义最长的一个不是等价类里边的后缀为t，把v的后缀link到t上\n\n显然最后是link到源点的\n\n最后这玩意就构成了一个**树**\n\n然后我们就可以开始算法本身了捏\n\n---\n\n# 算法实现\n\n> 哥们看不懂捏\n\n首先说重点\n\n**后缀link树和后缀自动机共同相同的节点，不同的只是转移的边不同**\n\n## 大概步骤\n\n首先，这个是在线算法，我们每次往自动机里加入一个字符，然后维护SAM\n\n**首先定义初始状态**\n\n这个点编号0，len=0，fa=0\n\n然后我们就能挨个加入字符c了\n\n有以下流程\n\n> 首先我们加入了一个新字符，那么新串对应的的endpos是新的长度，以前不存在，因此我们新建一个状态**np**，之前整个旧串对应的状态记为**p**，很显然len(q)=len(p)+1\n\n然后对于新加入的字符c，我们进行以下操作\n\n> 如果**p**没有一个字符c的出边(这里是自动机的边)，就在`link树`上到他的父节点，也就是后缀link的点，一直循环直到**p**到达**初始状态**的节点或者有一个字符c的出边\n\n这个操作其实是压缩遍历旧串的所有后缀x，然后看是否存在一个x+c在旧串种就存在了，因为引理中已经提到，每个状态link到的节点都是当前状态的后缀，所有我们从**p**上来肯定是旧串的后缀了捏\n\n途中我们把经过每个没有c出边的**p**都连一个c到**np**\n\n然后我们就有3种情况\n\n### Case 1\n\n> **p**到初始状态都没有c的出边\n\n**np**状态直接link到初始状态\n\n### Case 2\n\n> 找到了一个**p**，有c的出边，到达一个新状态**q**，且**len( q )=len( p )+1**\n\n首先我们知道**p**是旧串后缀，**q**是**p**的字符串+c，因此**q**是新串的后缀，那么我们理所当然把**np** link 到**q**上就行了\n\n### Case 3\n\n> 和case2差不多，但是找到的**p**出边到达的**q**没有**len( q )=len( p )+1**\n>\n> 或者说，**len( q )>len( q )+1**\n\n这时候我们要把q拆成两个点，是新串后缀的和不是的，然后link就行\n\n具体来说，定义一个新点**nq**，len=len(p)+1,出边转移和**q**相同，link 到**p**上，然后**np**和**q**都link到**nq**上\n\n最后稍微更新下转移边，**p**往上走，把所有**p** link 到**q**的转移 link 到**nq**上就行了\n\n---\n\n最后稍微提一下如何计算每个状态的endpos大小\n\n设想一下，我们每次加入一个字符c，肯定会出现一个新的endpos，而且他能够对往上走到源点经过的所有节点都产生影响，也就是说我们使用一个数组f[i]来统计endpos，加入新字符时让f[np]=1,最后跑一下dfs，**f[i]=f[i]+sum(f[i所有的儿子])** 即可捏\n\n或者把sam的点按len排序(可以用桶排) 从大到小更新 **f[sam[i].fa]+=f[i]**也行\n\n---\n\n# code\n\n先贴一手毛的板子\n\n```c++\nstruct NODE\n{\n    int ch[26];\n    int len,fa;\n    NODE(){memset(ch,0,sizeof(ch));len=0;}\n}sam[MAXN<<1];\nint lst=1,tot=1;\nvoid add(int c)\n{\n    int p=lst;int np=lst=++tot;\n    sam[np].len=sam[p].len+1;\n    for(;p&&!sam[p].ch[c];p=sam[p].fa)sam[p].ch[c]=np;\n    if(!p)sam[np].fa=1;//以上为case 1\n    else\n    {\n        int q=sam[p].ch[c];\n        if(sam[q].len==sam[p].len+1)sam[np].fa=q;//以上为case 2\n        else\n        {\n            int nq=++tot;sam[nq]=sam[q];\n            sam[nq].len=sam[p].len+1;\n            sam[q].fa=sam[np].fa=nq; \n            for(;p&&sam[p].ch[c]==q;p=sam[p].fa)sam[p].ch[c]=nq;//以上为case 3\n        }\n    }\n}\n```\n\n---\n\n暂时先写这么多，乏了，早上写一手题以及用法吧\n","slug":"01或许是算法/sam","published":1,"updated":"2022-01-03T12:59:54.281Z","_id":"clobly6cn0003zowbc5klas2o","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>这玩意就是SAM的原理以及基本板子了，大概，说不定再来一点套路总结吧</p>\n</blockquote>\n<p>总的来说，这玩意拖的也太久了，一直说要学，然后狂摸不止，我 <strong>有罪</strong>！</p>\n<p>欸嘿</p>\n<span id=\"more\"></span>\n<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h1>\n<p>首先后缀自动机</p>\n<ul>\n<li>可以包括给定字符串的所有子串</li>\n<li>O(n)</li>\n<li><strong>是自动机</strong></li>\n</ul>\n<h2 id=\"一些定义\"><a class=\"markdownIt-Anchor\" href=\"#一些定义\"></a> 一些定义</h2>\n<p><strong>endpos</strong></p>\n<blockquote>\n<p>字符串s的一个子串t，endpos(t)为s中t的<code>所有</code>结束位置构成的集合</p>\n</blockquote>\n<p><strong>SAM是一个最小的DFA</strong></p>\n<blockquote>\n<ul>\n<li>有向无环图</li>\n<li>节点是状态，边是转移</li>\n<li>转移是一些字母</li>\n<li>从源点出发到终止状态所有转移连起来的字符串t是字符串s的一个后缀</li>\n<li>SAM的节点最小</li>\n</ul>\n</blockquote>\n<p>那么如果endpos(t1)=endpos(t2)，那么他们就在一个<code>等价类</code>中</p>\n<h2 id=\"一堆引理\"><a class=\"markdownIt-Anchor\" href=\"#一堆引理\"></a> 一堆引理</h2>\n<ul>\n<li>两个非空子串u，w  (|u|&lt;=|w|)  endpos相同，只有u在s中每次出现都是以w的后缀出现的</li>\n<li>那么就可以推出来： 考虑u，w  (|u|&lt;=|w|) 只有2种可能\n<ul>\n<li>endpos(u),endpos(w)不相交</li>\n<li>endpos(w)是endpos(u)的<strong>子集</strong></li>\n</ul>\n</li>\n<li>一个endpos等价类里边，所有子串长度不同，而且差值为1，正好覆盖区间</li>\n</ul>\n<p><strong>然后就有我们的后缀link</strong></p>\n<blockquote>\n<p>对于一个不是源点的状态v，然后考虑这个endpos等价类中最长的字符串w，其他的就是w后缀了捏</p>\n<p>然后我们有</p>\n<ul>\n<li>w开始，有一个连续区间长度的后缀也都是这个等价类里边的玩意，定义最长的一个不是等价类里边的后缀为t，把v的后缀link到t上</li>\n</ul>\n</blockquote>\n<p>显然最后是link到源点的</p>\n<p>最后这玩意就构成了一个<strong>树</strong></p>\n<p>然后我们就可以开始算法本身了捏</p>\n<hr />\n<h1 id=\"算法实现\"><a class=\"markdownIt-Anchor\" href=\"#算法实现\"></a> 算法实现</h1>\n<blockquote>\n<p>哥们看不懂捏</p>\n</blockquote>\n<p>首先说重点</p>\n<p><strong>后缀link树和后缀自动机共同相同的节点，不同的只是转移的边不同</strong></p>\n<h2 id=\"大概步骤\"><a class=\"markdownIt-Anchor\" href=\"#大概步骤\"></a> 大概步骤</h2>\n<p>首先，这个是在线算法，我们每次往自动机里加入一个字符，然后维护SAM</p>\n<p><strong>首先定义初始状态</strong></p>\n<p>这个点编号0，len=0，fa=0</p>\n<p>然后我们就能挨个加入字符c了</p>\n<p>有以下流程</p>\n<blockquote>\n<p>首先我们加入了一个新字符，那么新串对应的的endpos是新的长度，以前不存在，因此我们新建一个状态<strong>np</strong>，之前整个旧串对应的状态记为<strong>p</strong>，很显然len(q)=len§+1</p>\n</blockquote>\n<p>然后对于新加入的字符c，我们进行以下操作</p>\n<blockquote>\n<p>如果<strong>p</strong>没有一个字符c的出边(这里是自动机的边)，就在<code>link树</code>上到他的父节点，也就是后缀link的点，一直循环直到<strong>p</strong>到达<strong>初始状态</strong>的节点或者有一个字符c的出边</p>\n</blockquote>\n<p>这个操作其实是压缩遍历旧串的所有后缀x，然后看是否存在一个x+c在旧串种就存在了，因为引理中已经提到，每个状态link到的节点都是当前状态的后缀，所有我们从<strong>p</strong>上来肯定是旧串的后缀了捏</p>\n<p>途中我们把经过每个没有c出边的<strong>p</strong>都连一个c到<strong>np</strong></p>\n<p>然后我们就有3种情况</p>\n<h3 id=\"case-1\"><a class=\"markdownIt-Anchor\" href=\"#case-1\"></a> Case 1</h3>\n<blockquote>\n<p><strong>p</strong>到初始状态都没有c的出边</p>\n</blockquote>\n<p><strong>np</strong>状态直接link到初始状态</p>\n<h3 id=\"case-2\"><a class=\"markdownIt-Anchor\" href=\"#case-2\"></a> Case 2</h3>\n<blockquote>\n<p>找到了一个<strong>p</strong>，有c的出边，到达一个新状态<strong>q</strong>，且<strong>len( q )=len( p )+1</strong></p>\n</blockquote>\n<p>首先我们知道<strong>p</strong>是旧串后缀，<strong>q</strong>是<strong>p</strong>的字符串+c，因此<strong>q</strong>是新串的后缀，那么我们理所当然把<strong>np</strong> link 到<strong>q</strong>上就行了</p>\n<h3 id=\"case-3\"><a class=\"markdownIt-Anchor\" href=\"#case-3\"></a> Case 3</h3>\n<blockquote>\n<p>和case2差不多，但是找到的<strong>p</strong>出边到达的<strong>q</strong>没有<strong>len( q )=len( p )+1</strong></p>\n<p>或者说，<strong>len( q )&gt;len( q )+1</strong></p>\n</blockquote>\n<p>这时候我们要把q拆成两个点，是新串后缀的和不是的，然后link就行</p>\n<p>具体来说，定义一个新点<strong>nq</strong>，len=len§+1,出边转移和<strong>q</strong>相同，link 到<strong>p</strong>上，然后<strong>np</strong>和<strong>q</strong>都link到<strong>nq</strong>上</p>\n<p>最后稍微更新下转移边，<strong>p</strong>往上走，把所有<strong>p</strong> link 到<strong>q</strong>的转移 link 到<strong>nq</strong>上就行了</p>\n<hr />\n<p>最后稍微提一下如何计算每个状态的endpos大小</p>\n<p>设想一下，我们每次加入一个字符c，肯定会出现一个新的endpos，而且他能够对往上走到源点经过的所有节点都产生影响，也就是说我们使用一个数组f[i]来统计endpos，加入新字符时让f[np]=1,最后跑一下dfs，<strong>f[i]=f[i]+sum(f[i所有的儿子])</strong> 即可捏</p>\n<p>或者把sam的点按len排序(可以用桶排) 从大到小更新 **f[sam[i].fa]+=f[i]**也行</p>\n<hr />\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> code</h1>\n<p>先贴一手毛的板子</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len,fa;</span><br><span class=\"line\">    <span class=\"built_in\">NODE</span>()&#123;<span class=\"built_in\">memset</span>(ch,<span class=\"number\">0</span>,<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(ch));len=<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">&#125;sam[MAXN&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> lst=<span class=\"number\">1</span>,tot=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> p=lst;<span class=\"keyword\">int</span> np=lst=++tot;</span><br><span class=\"line\">    sam[np].len=sam[p].len+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;p&amp;&amp;!sam[p].ch[c];p=sam[p].fa)sam[p].ch[c]=np;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)sam[np].fa=<span class=\"number\">1</span>;<span class=\"comment\">//以上为case 1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> q=sam[p].ch[c];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[q].len==sam[p].len+<span class=\"number\">1</span>)sam[np].fa=q;<span class=\"comment\">//以上为case 2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nq=++tot;sam[nq]=sam[q];</span><br><span class=\"line\">            sam[nq].len=sam[p].len+<span class=\"number\">1</span>;</span><br><span class=\"line\">            sam[q].fa=sam[np].fa=nq; </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;p&amp;&amp;sam[p].ch[c]==q;p=sam[p].fa)sam[p].ch[c]=nq;<span class=\"comment\">//以上为case 3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<p>暂时先写这么多，乏了，早上写一手题以及用法吧</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>这玩意就是SAM的原理以及基本板子了，大概，说不定再来一点套路总结吧</p>\n</blockquote>\n<p>总的来说，这玩意拖的也太久了，一直说要学，然后狂摸不止，我 <strong>有罪</strong>！</p>\n<p>欸嘿</p>","more":"<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h1>\n<p>首先后缀自动机</p>\n<ul>\n<li>可以包括给定字符串的所有子串</li>\n<li>O(n)</li>\n<li><strong>是自动机</strong></li>\n</ul>\n<h2 id=\"一些定义\"><a class=\"markdownIt-Anchor\" href=\"#一些定义\"></a> 一些定义</h2>\n<p><strong>endpos</strong></p>\n<blockquote>\n<p>字符串s的一个子串t，endpos(t)为s中t的<code>所有</code>结束位置构成的集合</p>\n</blockquote>\n<p><strong>SAM是一个最小的DFA</strong></p>\n<blockquote>\n<ul>\n<li>有向无环图</li>\n<li>节点是状态，边是转移</li>\n<li>转移是一些字母</li>\n<li>从源点出发到终止状态所有转移连起来的字符串t是字符串s的一个后缀</li>\n<li>SAM的节点最小</li>\n</ul>\n</blockquote>\n<p>那么如果endpos(t1)=endpos(t2)，那么他们就在一个<code>等价类</code>中</p>\n<h2 id=\"一堆引理\"><a class=\"markdownIt-Anchor\" href=\"#一堆引理\"></a> 一堆引理</h2>\n<ul>\n<li>两个非空子串u，w  (|u|&lt;=|w|)  endpos相同，只有u在s中每次出现都是以w的后缀出现的</li>\n<li>那么就可以推出来： 考虑u，w  (|u|&lt;=|w|) 只有2种可能\n<ul>\n<li>endpos(u),endpos(w)不相交</li>\n<li>endpos(w)是endpos(u)的<strong>子集</strong></li>\n</ul>\n</li>\n<li>一个endpos等价类里边，所有子串长度不同，而且差值为1，正好覆盖区间</li>\n</ul>\n<p><strong>然后就有我们的后缀link</strong></p>\n<blockquote>\n<p>对于一个不是源点的状态v，然后考虑这个endpos等价类中最长的字符串w，其他的就是w后缀了捏</p>\n<p>然后我们有</p>\n<ul>\n<li>w开始，有一个连续区间长度的后缀也都是这个等价类里边的玩意，定义最长的一个不是等价类里边的后缀为t，把v的后缀link到t上</li>\n</ul>\n</blockquote>\n<p>显然最后是link到源点的</p>\n<p>最后这玩意就构成了一个<strong>树</strong></p>\n<p>然后我们就可以开始算法本身了捏</p>\n<hr />\n<h1 id=\"算法实现\"><a class=\"markdownIt-Anchor\" href=\"#算法实现\"></a> 算法实现</h1>\n<blockquote>\n<p>哥们看不懂捏</p>\n</blockquote>\n<p>首先说重点</p>\n<p><strong>后缀link树和后缀自动机共同相同的节点，不同的只是转移的边不同</strong></p>\n<h2 id=\"大概步骤\"><a class=\"markdownIt-Anchor\" href=\"#大概步骤\"></a> 大概步骤</h2>\n<p>首先，这个是在线算法，我们每次往自动机里加入一个字符，然后维护SAM</p>\n<p><strong>首先定义初始状态</strong></p>\n<p>这个点编号0，len=0，fa=0</p>\n<p>然后我们就能挨个加入字符c了</p>\n<p>有以下流程</p>\n<blockquote>\n<p>首先我们加入了一个新字符，那么新串对应的的endpos是新的长度，以前不存在，因此我们新建一个状态<strong>np</strong>，之前整个旧串对应的状态记为<strong>p</strong>，很显然len(q)=len§+1</p>\n</blockquote>\n<p>然后对于新加入的字符c，我们进行以下操作</p>\n<blockquote>\n<p>如果<strong>p</strong>没有一个字符c的出边(这里是自动机的边)，就在<code>link树</code>上到他的父节点，也就是后缀link的点，一直循环直到<strong>p</strong>到达<strong>初始状态</strong>的节点或者有一个字符c的出边</p>\n</blockquote>\n<p>这个操作其实是压缩遍历旧串的所有后缀x，然后看是否存在一个x+c在旧串种就存在了，因为引理中已经提到，每个状态link到的节点都是当前状态的后缀，所有我们从<strong>p</strong>上来肯定是旧串的后缀了捏</p>\n<p>途中我们把经过每个没有c出边的<strong>p</strong>都连一个c到<strong>np</strong></p>\n<p>然后我们就有3种情况</p>\n<h3 id=\"case-1\"><a class=\"markdownIt-Anchor\" href=\"#case-1\"></a> Case 1</h3>\n<blockquote>\n<p><strong>p</strong>到初始状态都没有c的出边</p>\n</blockquote>\n<p><strong>np</strong>状态直接link到初始状态</p>\n<h3 id=\"case-2\"><a class=\"markdownIt-Anchor\" href=\"#case-2\"></a> Case 2</h3>\n<blockquote>\n<p>找到了一个<strong>p</strong>，有c的出边，到达一个新状态<strong>q</strong>，且<strong>len( q )=len( p )+1</strong></p>\n</blockquote>\n<p>首先我们知道<strong>p</strong>是旧串后缀，<strong>q</strong>是<strong>p</strong>的字符串+c，因此<strong>q</strong>是新串的后缀，那么我们理所当然把<strong>np</strong> link 到<strong>q</strong>上就行了</p>\n<h3 id=\"case-3\"><a class=\"markdownIt-Anchor\" href=\"#case-3\"></a> Case 3</h3>\n<blockquote>\n<p>和case2差不多，但是找到的<strong>p</strong>出边到达的<strong>q</strong>没有<strong>len( q )=len( p )+1</strong></p>\n<p>或者说，<strong>len( q )&gt;len( q )+1</strong></p>\n</blockquote>\n<p>这时候我们要把q拆成两个点，是新串后缀的和不是的，然后link就行</p>\n<p>具体来说，定义一个新点<strong>nq</strong>，len=len§+1,出边转移和<strong>q</strong>相同，link 到<strong>p</strong>上，然后<strong>np</strong>和<strong>q</strong>都link到<strong>nq</strong>上</p>\n<p>最后稍微更新下转移边，<strong>p</strong>往上走，把所有<strong>p</strong> link 到<strong>q</strong>的转移 link 到<strong>nq</strong>上就行了</p>\n<hr />\n<p>最后稍微提一下如何计算每个状态的endpos大小</p>\n<p>设想一下，我们每次加入一个字符c，肯定会出现一个新的endpos，而且他能够对往上走到源点经过的所有节点都产生影响，也就是说我们使用一个数组f[i]来统计endpos，加入新字符时让f[np]=1,最后跑一下dfs，<strong>f[i]=f[i]+sum(f[i所有的儿子])</strong> 即可捏</p>\n<p>或者把sam的点按len排序(可以用桶排) 从大到小更新 **f[sam[i].fa]+=f[i]**也行</p>\n<hr />\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> code</h1>\n<p>先贴一手毛的板子</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len,fa;</span><br><span class=\"line\">    <span class=\"built_in\">NODE</span>()&#123;<span class=\"built_in\">memset</span>(ch,<span class=\"number\">0</span>,<span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(ch));len=<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">&#125;sam[MAXN&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> lst=<span class=\"number\">1</span>,tot=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> p=lst;<span class=\"keyword\">int</span> np=lst=++tot;</span><br><span class=\"line\">    sam[np].len=sam[p].len+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;p&amp;&amp;!sam[p].ch[c];p=sam[p].fa)sam[p].ch[c]=np;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)sam[np].fa=<span class=\"number\">1</span>;<span class=\"comment\">//以上为case 1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> q=sam[p].ch[c];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sam[q].len==sam[p].len+<span class=\"number\">1</span>)sam[np].fa=q;<span class=\"comment\">//以上为case 2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nq=++tot;sam[nq]=sam[q];</span><br><span class=\"line\">            sam[nq].len=sam[p].len+<span class=\"number\">1</span>;</span><br><span class=\"line\">            sam[q].fa=sam[np].fa=nq; </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;p&amp;&amp;sam[p].ch[c]==q;p=sam[p].fa)sam[p].ch[c]=nq;<span class=\"comment\">//以上为case 3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<p>暂时先写这么多，乏了，早上写一手题以及用法吧</p>"},{"title":"sam相关","date":"2021-11-24T18:43:31.000Z","_content":"\n> 学完了这阴间玩意肯定得知道这玩意怎么用吧\n\n**sam理论上可以**\n\n- 子串endpos大小\n- 子串endpod位置\n- 在后缀link上跑dp\n- 在自动机上跑dp\n- 统计有多少个子串经过一个点\n- 二分\n\n<!-- more -->\n\n然后就是题目呗\n\n\n\n## P3975 [TJOI2015]弦论\n\n> 给定字符串，求找到字典序第k大的子串\n> 有两种询问：相同子串就算1个和每个子串都算一个的\n\n首先把endpos大小跑出来\n\n如果相同子串只算1个，那么子串到每个状态的贡献只有1，不然就是endpos大小。endpos大小可以把状态按len排序然后从大到小更新就行。\n\n然后跑一下dfs，统计从点i开始的有多少个字符串\n\n最后按字典序从自动机上跑就行\n\n```c++\n#include<iostream>\n#include<map>\n#include<stdio.h>\n#include<cstring>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN =6e5 + 500;\nstring s;\nll k, t;\nstruct NODE {\n\tint ch[26] = {};\n\tll fa = 0, len = 0;\n\t//NODE() { memset(ch, 0, sizeof(ch)); fa = 0, len = 0; }\n}sam[MAXN << 1];\nll lst = 1, tot = 1;\nll f[MAXN << 1];\nbool vis[MAXN << 1];\nll sz[MAXN << 1];\nll A[MAXN << 1];\nvoid add(ll c) {\n\tll p = lst;\n\tll np = lst = ++tot;\n\tf[np] = 1;\n\tsam[np].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;\n\tif (!p)sam[np].fa = 1;\n\telse {\n\t\tll q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)sam[np].fa = q;\n\t\telse {\n\t\t\tll nq = ++tot; sam[nq] = sam[q];\n\t\t\tsam[nq].len = sam[p].len + 1;\n\t\t\tsam[q].fa = sam[np].fa = nq;\n\t\t\tfor (; p && sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;\n\t\t}\n\t}\n}\nll dfs(ll p) {\n\tif (vis[p])return sz[p];\n\tvis[p] = 1;\n\tll tmp = f[p];\n\tfor (int i = 0; i < 26; i++)\n\t\tif (sam[p].ch[i])\n\t\t\ttmp += dfs(sam[p].ch[i]);\n\treturn sz[p] = tmp;\n}\nvoid solve(ll p) {\n\tif (k > sz[p]) {\n\t\tprintf(\"%d\", -1);\n\t\treturn;\n\t}\n\tif (k <= f[p])return;\n\tk -= f[p];\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (!sam[p].ch[i])continue;\n\t\tif (sz[sam[p].ch[i]] < k)k -= sz[sam[p].ch[i]];\n\t\telse {\n\t\t\tprintf(\"%c\", i + 'a');\n\t\t\tsolve(sam[p].ch[i]);\n\t\t\treturn;\n\t\t}\n\t}\n\n}\nbool cmp(ll &a, ll &b) {\n\treturn sam[a].len < sam[b].len;\n}\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tadd(ll(s[i]) - 'a');\n\t}\n\tscanf(\"%lld %lld\", &t, &k);\n\tif (t == 0)\n\t\tfor (int i = 2; i <= tot; i++)f[i] = 1;\n\telse {\n\t\tfor (int i = 0; i <= tot; i++)A[i] = i;\n\t\tsort(A + 1, A + tot + 1, cmp);\n\t\tfor (int i = tot; i > 0; i--)f[sam[A[i]].fa] += f[A[i]];\n\t}\n\tf[1]=f[0] = 0;\n\tdfs(1);\n\tsolve(1);\n}\n```\n\n\n\n## SPOJ1811\n\n> 求两个字符串里最长公共子串长度\n\n把s建成后缀自动机\n\n然后把t的前缀挨个加进去，其实就是看t的前缀的后缀能在s里最长是多少\n\n假设当前t加入的字符是c，当前状态是v，若v有c的出边，ans直接++\n\n如果没有，就一直找v的后缀link到有c的出边为止，ans=len+1了\n\n如果这玩意到了0状态，就把他设回源点状态，ans=0\n\n```c++\n#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n#include<math.h>\n#include<string>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN = 5e5 + 5;\nstruct NODE{\n\tint ch[26] = {};\n\tint len, fa;\n}sam[MAXN << 1];\nll lst = 1, tot = 1;\nstring s1, s2;\nvoid add(ll c) {\n\tll p = lst; ll np = lst = ++tot;\n\tsam[np].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;\n\tif (!p)sam[np].fa = 1;\n\telse {\n\t\tll q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)sam[np].fa = q;\n\t\telse {\n\t\t\tll nq = ++tot; sam[nq] = sam[q];\n\t\t\tsam[nq].len = sam[p].len + 1;\n\t\t\tsam[q].fa = sam[np].fa = nq;\n\t\t\tfor (; p && sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;\n\t\t}\n\t}\n}\nint main() {\n\tcin >> s1 >> s2;\n\tll ans = 0;\n\tfor (int i = 0; i < s1.length(); i++)add(s1[i] - 'a');\n\tll v = 1, l = 0;;\n\tfor (int i = 0; i < s2.length(); i++) {\n\t\tll tmp = s2[i] - 'a';\n\t\tif (sam[v].ch[tmp]) {\n\t\t\tv = sam[v].ch[tmp];\n\t\t\tl++;\n\t\t}\n\t\telse {\n\t\t\tfor (; v && !sam[v].ch[tmp]; v = sam[v].fa);\n\t\t\tif (v == 0) {\n\t\t\t\tl = 0, v = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl = sam[v].len + 1;\n\t\t\t\tv = sam[v].ch[tmp];\n\t\t\t}\n\t\t}\n\t\tans = max(ans, l);\n\t}\n\tcout << ans;\n}\n```\n\n\n\n","source":"_posts/01或许是算法/sam相关题目.md","raw":"---\ntitle: sam相关\ndate: 2021-11-25 02:43:31\ntags: \n- SAM\ncategory: \n- 算法\n- 字符串\n---\n\n> 学完了这阴间玩意肯定得知道这玩意怎么用吧\n\n**sam理论上可以**\n\n- 子串endpos大小\n- 子串endpod位置\n- 在后缀link上跑dp\n- 在自动机上跑dp\n- 统计有多少个子串经过一个点\n- 二分\n\n<!-- more -->\n\n然后就是题目呗\n\n\n\n## P3975 [TJOI2015]弦论\n\n> 给定字符串，求找到字典序第k大的子串\n> 有两种询问：相同子串就算1个和每个子串都算一个的\n\n首先把endpos大小跑出来\n\n如果相同子串只算1个，那么子串到每个状态的贡献只有1，不然就是endpos大小。endpos大小可以把状态按len排序然后从大到小更新就行。\n\n然后跑一下dfs，统计从点i开始的有多少个字符串\n\n最后按字典序从自动机上跑就行\n\n```c++\n#include<iostream>\n#include<map>\n#include<stdio.h>\n#include<cstring>\n#include<string>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN =6e5 + 500;\nstring s;\nll k, t;\nstruct NODE {\n\tint ch[26] = {};\n\tll fa = 0, len = 0;\n\t//NODE() { memset(ch, 0, sizeof(ch)); fa = 0, len = 0; }\n}sam[MAXN << 1];\nll lst = 1, tot = 1;\nll f[MAXN << 1];\nbool vis[MAXN << 1];\nll sz[MAXN << 1];\nll A[MAXN << 1];\nvoid add(ll c) {\n\tll p = lst;\n\tll np = lst = ++tot;\n\tf[np] = 1;\n\tsam[np].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;\n\tif (!p)sam[np].fa = 1;\n\telse {\n\t\tll q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)sam[np].fa = q;\n\t\telse {\n\t\t\tll nq = ++tot; sam[nq] = sam[q];\n\t\t\tsam[nq].len = sam[p].len + 1;\n\t\t\tsam[q].fa = sam[np].fa = nq;\n\t\t\tfor (; p && sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;\n\t\t}\n\t}\n}\nll dfs(ll p) {\n\tif (vis[p])return sz[p];\n\tvis[p] = 1;\n\tll tmp = f[p];\n\tfor (int i = 0; i < 26; i++)\n\t\tif (sam[p].ch[i])\n\t\t\ttmp += dfs(sam[p].ch[i]);\n\treturn sz[p] = tmp;\n}\nvoid solve(ll p) {\n\tif (k > sz[p]) {\n\t\tprintf(\"%d\", -1);\n\t\treturn;\n\t}\n\tif (k <= f[p])return;\n\tk -= f[p];\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (!sam[p].ch[i])continue;\n\t\tif (sz[sam[p].ch[i]] < k)k -= sz[sam[p].ch[i]];\n\t\telse {\n\t\t\tprintf(\"%c\", i + 'a');\n\t\t\tsolve(sam[p].ch[i]);\n\t\t\treturn;\n\t\t}\n\t}\n\n}\nbool cmp(ll &a, ll &b) {\n\treturn sam[a].len < sam[b].len;\n}\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tadd(ll(s[i]) - 'a');\n\t}\n\tscanf(\"%lld %lld\", &t, &k);\n\tif (t == 0)\n\t\tfor (int i = 2; i <= tot; i++)f[i] = 1;\n\telse {\n\t\tfor (int i = 0; i <= tot; i++)A[i] = i;\n\t\tsort(A + 1, A + tot + 1, cmp);\n\t\tfor (int i = tot; i > 0; i--)f[sam[A[i]].fa] += f[A[i]];\n\t}\n\tf[1]=f[0] = 0;\n\tdfs(1);\n\tsolve(1);\n}\n```\n\n\n\n## SPOJ1811\n\n> 求两个字符串里最长公共子串长度\n\n把s建成后缀自动机\n\n然后把t的前缀挨个加进去，其实就是看t的前缀的后缀能在s里最长是多少\n\n假设当前t加入的字符是c，当前状态是v，若v有c的出边，ans直接++\n\n如果没有，就一直找v的后缀link到有c的出边为止，ans=len+1了\n\n如果这玩意到了0状态，就把他设回源点状态，ans=0\n\n```c++\n#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n#include<math.h>\n#include<string>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN = 5e5 + 5;\nstruct NODE{\n\tint ch[26] = {};\n\tint len, fa;\n}sam[MAXN << 1];\nll lst = 1, tot = 1;\nstring s1, s2;\nvoid add(ll c) {\n\tll p = lst; ll np = lst = ++tot;\n\tsam[np].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;\n\tif (!p)sam[np].fa = 1;\n\telse {\n\t\tll q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)sam[np].fa = q;\n\t\telse {\n\t\t\tll nq = ++tot; sam[nq] = sam[q];\n\t\t\tsam[nq].len = sam[p].len + 1;\n\t\t\tsam[q].fa = sam[np].fa = nq;\n\t\t\tfor (; p && sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;\n\t\t}\n\t}\n}\nint main() {\n\tcin >> s1 >> s2;\n\tll ans = 0;\n\tfor (int i = 0; i < s1.length(); i++)add(s1[i] - 'a');\n\tll v = 1, l = 0;;\n\tfor (int i = 0; i < s2.length(); i++) {\n\t\tll tmp = s2[i] - 'a';\n\t\tif (sam[v].ch[tmp]) {\n\t\t\tv = sam[v].ch[tmp];\n\t\t\tl++;\n\t\t}\n\t\telse {\n\t\t\tfor (; v && !sam[v].ch[tmp]; v = sam[v].fa);\n\t\t\tif (v == 0) {\n\t\t\t\tl = 0, v = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl = sam[v].len + 1;\n\t\t\t\tv = sam[v].ch[tmp];\n\t\t\t}\n\t\t}\n\t\tans = max(ans, l);\n\t}\n\tcout << ans;\n}\n```\n\n\n\n","slug":"01或许是算法/sam相关题目","published":1,"updated":"2021-11-26T13:09:57.826Z","_id":"clobly6cp0005zowb15381aoc","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>学完了这阴间玩意肯定得知道这玩意怎么用吧</p>\n</blockquote>\n<p><strong>sam理论上可以</strong></p>\n<ul>\n<li>子串endpos大小</li>\n<li>子串endpod位置</li>\n<li>在后缀link上跑dp</li>\n<li>在自动机上跑dp</li>\n<li>统计有多少个子串经过一个点</li>\n<li>二分</li>\n</ul>\n<span id=\"more\"></span>\n<p>然后就是题目呗</p>\n<h2 id=\"p3975-tjoi2015弦论\"><a class=\"markdownIt-Anchor\" href=\"#p3975-tjoi2015弦论\"></a> P3975 [TJOI2015]弦论</h2>\n<blockquote>\n<p>给定字符串，求找到字典序第k大的子串<br />\n有两种询问：相同子串就算1个和每个子串都算一个的</p>\n</blockquote>\n<p>首先把endpos大小跑出来</p>\n<p>如果相同子串只算1个，那么子串到每个状态的贡献只有1，不然就是endpos大小。endpos大小可以把状态按len排序然后从大到小更新就行。</p>\n<p>然后跑一下dfs，统计从点i开始的有多少个字符串</p>\n<p>最后按字典序从自动机上跑就行</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll MAXN =<span class=\"number\">6e5</span> + <span class=\"number\">500</span>;</span><br><span class=\"line\">string s;</span><br><span class=\"line\">ll k, t;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>] = &#123;&#125;;</span><br><span class=\"line\">\tll fa = <span class=\"number\">0</span>, len = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//NODE() &#123; memset(ch, 0, sizeof(ch)); fa = 0, len = 0; &#125;</span></span><br><span class=\"line\">&#125;sam[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll lst = <span class=\"number\">1</span>, tot = <span class=\"number\">1</span>;</span><br><span class=\"line\">ll f[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll sz[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll A[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll c)</span> </span>&#123;</span><br><span class=\"line\">\tll p = lst;</span><br><span class=\"line\">\tll np = lst = ++tot;</span><br><span class=\"line\">\tf[np] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tsam[np].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; p &amp;&amp; !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p)sam[np].fa = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tll q = sam[p].ch[c];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[q].len == sam[p].len + <span class=\"number\">1</span>)sam[np].fa = q;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll nq = ++tot; sam[nq] = sam[q];</span><br><span class=\"line\">\t\t\tsam[nq].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tsam[q].fa = sam[np].fa = nq;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; p &amp;&amp; sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">dfs</span><span class=\"params\">(ll p)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (vis[p])<span class=\"keyword\">return</span> sz[p];</span><br><span class=\"line\">\tvis[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tll tmp = f[p];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[p].ch[i])</span><br><span class=\"line\">\t\t\ttmp += <span class=\"built_in\">dfs</span>(sam[p].ch[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sz[p] = tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(ll p)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (k &gt; sz[p]) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, <span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (k &lt;= f[p])<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\tk -= f[p];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!sam[p].ch[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sz[sam[p].ch[i]] &lt; k)k -= sz[sam[p].ch[i]];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, i + <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">solve</span>(sam[p].ch[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(ll &amp;a, ll &amp;b)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sam[a].len &lt; sam[b].len;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; s;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(<span class=\"built_in\">ll</span>(s[i]) - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld %lld&quot;</span>, &amp;t, &amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= tot; i++)f[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= tot; i++)A[i] = i;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(A + <span class=\"number\">1</span>, A + tot + <span class=\"number\">1</span>, cmp);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = tot; i &gt; <span class=\"number\">0</span>; i--)f[sam[A[i]].fa] += f[A[i]];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tf[<span class=\"number\">1</span>]=f[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">solve</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"spoj1811\"><a class=\"markdownIt-Anchor\" href=\"#spoj1811\"></a> SPOJ1811</h2>\n<blockquote>\n<p>求两个字符串里最长公共子串长度</p>\n</blockquote>\n<p>把s建成后缀自动机</p>\n<p>然后把t的前缀挨个加进去，其实就是看t的前缀的后缀能在s里最长是多少</p>\n<p>假设当前t加入的字符是c，当前状态是v，若v有c的出边，ans直接++</p>\n<p>如果没有，就一直找v的后缀link到有c的出边为止，ans=len+1了</p>\n<p>如果这玩意到了0状态，就把他设回源点状态，ans=0</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll MAXN = <span class=\"number\">5e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>] = &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len, fa;</span><br><span class=\"line\">&#125;sam[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll lst = <span class=\"number\">1</span>, tot = <span class=\"number\">1</span>;</span><br><span class=\"line\">string s1, s2;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll c)</span> </span>&#123;</span><br><span class=\"line\">\tll p = lst; ll np = lst = ++tot;</span><br><span class=\"line\">\tsam[np].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; p &amp;&amp; !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p)sam[np].fa = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tll q = sam[p].ch[c];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[q].len == sam[p].len + <span class=\"number\">1</span>)sam[np].fa = q;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll nq = ++tot; sam[nq] = sam[q];</span><br><span class=\"line\">\t\t\tsam[nq].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tsam[q].fa = sam[np].fa = nq;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; p &amp;&amp; sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s1.<span class=\"built_in\">length</span>(); i++)<span class=\"built_in\">add</span>(s1[i] - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\tll v = <span class=\"number\">1</span>, l = <span class=\"number\">0</span>;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s2.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">\t\tll tmp = s2[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[v].ch[tmp]) &#123;</span><br><span class=\"line\">\t\t\tv = sam[v].ch[tmp];</span><br><span class=\"line\">\t\t\tl++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; v &amp;&amp; !sam[v].ch[tmp]; v = sam[v].fa);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (v == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tl = <span class=\"number\">0</span>, v = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tl = sam[v].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tv = sam[v].ch[tmp];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans = <span class=\"built_in\">max</span>(ans, l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>学完了这阴间玩意肯定得知道这玩意怎么用吧</p>\n</blockquote>\n<p><strong>sam理论上可以</strong></p>\n<ul>\n<li>子串endpos大小</li>\n<li>子串endpod位置</li>\n<li>在后缀link上跑dp</li>\n<li>在自动机上跑dp</li>\n<li>统计有多少个子串经过一个点</li>\n<li>二分</li>\n</ul>","more":"<p>然后就是题目呗</p>\n<h2 id=\"p3975-tjoi2015弦论\"><a class=\"markdownIt-Anchor\" href=\"#p3975-tjoi2015弦论\"></a> P3975 [TJOI2015]弦论</h2>\n<blockquote>\n<p>给定字符串，求找到字典序第k大的子串<br />\n有两种询问：相同子串就算1个和每个子串都算一个的</p>\n</blockquote>\n<p>首先把endpos大小跑出来</p>\n<p>如果相同子串只算1个，那么子串到每个状态的贡献只有1，不然就是endpos大小。endpos大小可以把状态按len排序然后从大到小更新就行。</p>\n<p>然后跑一下dfs，统计从点i开始的有多少个字符串</p>\n<p>最后按字典序从自动机上跑就行</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll MAXN =<span class=\"number\">6e5</span> + <span class=\"number\">500</span>;</span><br><span class=\"line\">string s;</span><br><span class=\"line\">ll k, t;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>] = &#123;&#125;;</span><br><span class=\"line\">\tll fa = <span class=\"number\">0</span>, len = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//NODE() &#123; memset(ch, 0, sizeof(ch)); fa = 0, len = 0; &#125;</span></span><br><span class=\"line\">&#125;sam[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll lst = <span class=\"number\">1</span>, tot = <span class=\"number\">1</span>;</span><br><span class=\"line\">ll f[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll sz[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll A[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll c)</span> </span>&#123;</span><br><span class=\"line\">\tll p = lst;</span><br><span class=\"line\">\tll np = lst = ++tot;</span><br><span class=\"line\">\tf[np] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tsam[np].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; p &amp;&amp; !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p)sam[np].fa = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tll q = sam[p].ch[c];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[q].len == sam[p].len + <span class=\"number\">1</span>)sam[np].fa = q;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll nq = ++tot; sam[nq] = sam[q];</span><br><span class=\"line\">\t\t\tsam[nq].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tsam[q].fa = sam[np].fa = nq;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; p &amp;&amp; sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">dfs</span><span class=\"params\">(ll p)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (vis[p])<span class=\"keyword\">return</span> sz[p];</span><br><span class=\"line\">\tvis[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tll tmp = f[p];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[p].ch[i])</span><br><span class=\"line\">\t\t\ttmp += <span class=\"built_in\">dfs</span>(sam[p].ch[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sz[p] = tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(ll p)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (k &gt; sz[p]) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, <span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (k &lt;= f[p])<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\tk -= f[p];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!sam[p].ch[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sz[sam[p].ch[i]] &lt; k)k -= sz[sam[p].ch[i]];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, i + <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">solve</span>(sam[p].ch[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(ll &amp;a, ll &amp;b)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sam[a].len &lt; sam[b].len;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; s;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(<span class=\"built_in\">ll</span>(s[i]) - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld %lld&quot;</span>, &amp;t, &amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (t == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= tot; i++)f[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= tot; i++)A[i] = i;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(A + <span class=\"number\">1</span>, A + tot + <span class=\"number\">1</span>, cmp);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = tot; i &gt; <span class=\"number\">0</span>; i--)f[sam[A[i]].fa] += f[A[i]];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tf[<span class=\"number\">1</span>]=f[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">solve</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"spoj1811\"><a class=\"markdownIt-Anchor\" href=\"#spoj1811\"></a> SPOJ1811</h2>\n<blockquote>\n<p>求两个字符串里最长公共子串长度</p>\n</blockquote>\n<p>把s建成后缀自动机</p>\n<p>然后把t的前缀挨个加进去，其实就是看t的前缀的后缀能在s里最长是多少</p>\n<p>假设当前t加入的字符是c，当前状态是v，若v有c的出边，ans直接++</p>\n<p>如果没有，就一直找v的后缀link到有c的出边为止，ans=len+1了</p>\n<p>如果这玩意到了0状态，就把他设回源点状态，ans=0</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll MAXN = <span class=\"number\">5e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">NODE</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch[<span class=\"number\">26</span>] = &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len, fa;</span><br><span class=\"line\">&#125;sam[MAXN &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\">ll lst = <span class=\"number\">1</span>, tot = <span class=\"number\">1</span>;</span><br><span class=\"line\">string s1, s2;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll c)</span> </span>&#123;</span><br><span class=\"line\">\tll p = lst; ll np = lst = ++tot;</span><br><span class=\"line\">\tsam[np].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; p &amp;&amp; !sam[p].ch[c]; p = sam[p].fa)sam[p].ch[c] = np;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!p)sam[np].fa = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tll q = sam[p].ch[c];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[q].len == sam[p].len + <span class=\"number\">1</span>)sam[np].fa = q;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll nq = ++tot; sam[nq] = sam[q];</span><br><span class=\"line\">\t\t\tsam[nq].len = sam[p].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tsam[q].fa = sam[np].fa = nq;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; p &amp;&amp; sam[p].ch[c] == q; p = sam[p].fa)sam[p].ch[c] = nq;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s1.<span class=\"built_in\">length</span>(); i++)<span class=\"built_in\">add</span>(s1[i] - <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\tll v = <span class=\"number\">1</span>, l = <span class=\"number\">0</span>;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s2.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">\t\tll tmp = s2[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sam[v].ch[tmp]) &#123;</span><br><span class=\"line\">\t\t\tv = sam[v].ch[tmp];</span><br><span class=\"line\">\t\t\tl++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (; v &amp;&amp; !sam[v].ch[tmp]; v = sam[v].fa);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (v == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tl = <span class=\"number\">0</span>, v = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tl = sam[v].len + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tv = sam[v].ch[tmp];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans = <span class=\"built_in\">max</span>(ans, l);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"wi(l)d-screen baroque","date":"2022-01-11T16:52:30.000Z","top":2,"_content":"\n> **列车一定会去往下一站。那么舞台呢？我们呢？**\n","source":"_posts/Q.md","raw":"---\ntitle: wi(l)d-screen baroque\ndate: 2022-01-12 00:52:30\ntags:\ntop: 2\n---\n\n> **列车一定会去往下一站。那么舞台呢？我们呢？**\n","slug":"Q","published":1,"updated":"2022-01-11T17:31:33.217Z","_id":"clobly6ct0009zowba75a1vw9","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><strong>列车一定会去往下一站。那么舞台呢？我们呢？</strong></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><strong>列车一定会去往下一站。那么舞台呢？我们呢？</strong></p>\n</blockquote>\n"},{"title":"单调队列优化多重背包","date":"2021-11-05T03:13:57.000Z","_content":"\n\n\n> 补题补到了个树上背包，然后发现孩子不会。这次就打算把一些该学的背包都学一手？大概。\n- 我们知道，对于多重背包，有一个二进制拆分优化，可以在$O(vlog(\\sum{n[i]}))$级别的复杂度解决问题\n- 然后单调队列优化可以跑到$O(nv)$\n\n\n\n<!-- more -->\n\n# 思路\n\n- 首先我们考虑一下朴素的多重背包写法：\n\n> 对于当前物品i，枚举选的个数n[i]，用于更新dp数组\n\n然后我们能够发现这样一个神必规律：\n\ndp[i]用于维护代价为i的最大价值，且当前考虑选的物品代价为v\n\n则dp[i]只能够从dp[j]，当且仅当j mod v == i mod v 且选的个数不超过要求的点转移过来\n\n也就是\n\n- 当前在选第i个物品时\n\n\n$$\ndp[j+nv]=max(dp[j+(n-1)v+w,dp[j+(n-2)v+2w,....)\n$$\n\n- 改变一下形式\n\n$$\ndp[j+nv]=max(dp[j],dp[j+v]-w,dp[j+2v]-2w,...)+nw\n$$\n\n\n\n当然，因为有个数的限制，他选定的是一定区间里边的最大值，这个就给我们跑单调区间留下了伏笔捏\n\n# CODE\n\n```c++\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\n#include<vector>\n#include<math.h>\n#include<algorithm>\n#include <stdio.h>\n#include <queue>\n#include<bitset>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nll N, V;\nll f[20000 + 5];\nll g[20000 + 5];\nll q[20000 + 5];\nint main() {\n\tcin >> N >> V;\n\tfor (int i = 0; i < N; i++) {\n\t\tll v, w, s;\n\t\tcin >> v >> w >> s;\n\t\tmemcpy(g, f, sizeof(f));\n\t\tfor (int j = 0; j < v; j++) {\n\t\t\tll l = 0, r = -1;\n\t\t\tfor (int k = j; k <= V; k += v) {\n\t\t\t\twhile (r >= l && (k - q[l]) > s * v)l++;// 判断区间长度是否超过\n\t\t\t\twhile (r >= l && (g[q[r]] - (q[r] - j) / v * w) < (g[k] - (k - j) / v * w))r--;\n\t\t\t\tq[++r] = k;\n\t\t\t\tf[k] = max(g[k], g[q[l]] + (k - q[l]) / v * w);\n\t\t\t}\n\t\t}\n\t}\n\tll ans = 0;\n\tfor (int i = 0; i <= V; i++)ans = max(f[i], ans);\n\tcout << ans;\n}\n```\n\n","source":"_posts/01或许是算法/单调队列优化dp.md","raw":"---\ntitle: 单调队列优化多重背包\ndate: 2021-11-05 11:13:57\ntags: DP\ncategory: \n- 算法\n- DP\n\n---\n\n\n\n> 补题补到了个树上背包，然后发现孩子不会。这次就打算把一些该学的背包都学一手？大概。\n- 我们知道，对于多重背包，有一个二进制拆分优化，可以在$O(vlog(\\sum{n[i]}))$级别的复杂度解决问题\n- 然后单调队列优化可以跑到$O(nv)$\n\n\n\n<!-- more -->\n\n# 思路\n\n- 首先我们考虑一下朴素的多重背包写法：\n\n> 对于当前物品i，枚举选的个数n[i]，用于更新dp数组\n\n然后我们能够发现这样一个神必规律：\n\ndp[i]用于维护代价为i的最大价值，且当前考虑选的物品代价为v\n\n则dp[i]只能够从dp[j]，当且仅当j mod v == i mod v 且选的个数不超过要求的点转移过来\n\n也就是\n\n- 当前在选第i个物品时\n\n\n$$\ndp[j+nv]=max(dp[j+(n-1)v+w,dp[j+(n-2)v+2w,....)\n$$\n\n- 改变一下形式\n\n$$\ndp[j+nv]=max(dp[j],dp[j+v]-w,dp[j+2v]-2w,...)+nw\n$$\n\n\n\n当然，因为有个数的限制，他选定的是一定区间里边的最大值，这个就给我们跑单调区间留下了伏笔捏\n\n# CODE\n\n```c++\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\n#include<vector>\n#include<math.h>\n#include<algorithm>\n#include <stdio.h>\n#include <queue>\n#include<bitset>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nll N, V;\nll f[20000 + 5];\nll g[20000 + 5];\nll q[20000 + 5];\nint main() {\n\tcin >> N >> V;\n\tfor (int i = 0; i < N; i++) {\n\t\tll v, w, s;\n\t\tcin >> v >> w >> s;\n\t\tmemcpy(g, f, sizeof(f));\n\t\tfor (int j = 0; j < v; j++) {\n\t\t\tll l = 0, r = -1;\n\t\t\tfor (int k = j; k <= V; k += v) {\n\t\t\t\twhile (r >= l && (k - q[l]) > s * v)l++;// 判断区间长度是否超过\n\t\t\t\twhile (r >= l && (g[q[r]] - (q[r] - j) / v * w) < (g[k] - (k - j) / v * w))r--;\n\t\t\t\tq[++r] = k;\n\t\t\t\tf[k] = max(g[k], g[q[l]] + (k - q[l]) / v * w);\n\t\t\t}\n\t\t}\n\t}\n\tll ans = 0;\n\tfor (int i = 0; i <= V; i++)ans = max(f[i], ans);\n\tcout << ans;\n}\n```\n\n","slug":"01或许是算法/单调队列优化dp","published":1,"updated":"2021-11-06T08:38:15.508Z","_id":"clobly6cu000azowb33gff6lw","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>补题补到了个树上背包，然后发现孩子不会。这次就打算把一些该学的背包都学一手？大概。</p>\n</blockquote>\n<ul>\n<li>我们知道，对于多重背包，有一个二进制拆分优化，可以在<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mo>∑</mo><mrow><mi>n</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(vlog(\\sum{n[i]}))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">]</span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>级别的复杂度解决问题</li>\n<li>然后单调队列优化可以跑到<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nv)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<span id=\"more\"></span>\n<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h1>\n<ul>\n<li>首先我们考虑一下朴素的多重背包写法：</li>\n</ul>\n<blockquote>\n<p>对于当前物品i，枚举选的个数n[i]，用于更新dp数组</p>\n</blockquote>\n<p>然后我们能够发现这样一个神必规律：</p>\n<p>dp[i]用于维护代价为i的最大价值，且当前考虑选的物品代价为v</p>\n<p>则dp[i]只能够从dp[j]，当且仅当j mod v == i mod v 且选的个数不超过要求的点转移过来</p>\n<p>也就是</p>\n<ul>\n<li>当前在选第i个物品时</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>v</mi><mo>+</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi>v</mi><mo>+</mo><mn>2</mn><mi>w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp[j+nv]=max(dp[j+(n-1)v+w,dp[j+(n-2)v+2w,....)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>改变一下形式</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>v</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mn>2</mn><mi>v</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mn>2</mn><mi>w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>n</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">dp[j+nv]=max(dp[j],dp[j+v]-w,dp[j+2v]-2w,...)+nw\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></p>\n<p>当然，因为有个数的限制，他选定的是一定区间里边的最大值，这个就给我们跑单调区间留下了伏笔捏</p>\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> CODE</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\">ll N, V;</span><br><span class=\"line\">ll f[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll g[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll q[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; N &gt;&gt; V;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">\t\tll v, w, s;</span><br><span class=\"line\">\t\tcin &gt;&gt; v &gt;&gt; w &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(g, f, <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(f));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; v; j++) &#123;</span><br><span class=\"line\">\t\t\tll l = <span class=\"number\">0</span>, r = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= V; k += v) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (r &gt;= l &amp;&amp; (k - q[l]) &gt; s * v)l++;<span class=\"comment\">// 判断区间长度是否超过</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (r &gt;= l &amp;&amp; (g[q[r]] - (q[r] - j) / v * w) &lt; (g[k] - (k - j) / v * w))r--;</span><br><span class=\"line\">\t\t\t\tq[++r] = k;</span><br><span class=\"line\">\t\t\t\tf[k] = <span class=\"built_in\">max</span>(g[k], g[q[l]] + (k - q[l]) / v * w);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= V; i++)ans = <span class=\"built_in\">max</span>(f[i], ans);</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>补题补到了个树上背包，然后发现孩子不会。这次就打算把一些该学的背包都学一手？大概。</p>\n</blockquote>\n<ul>\n<li>我们知道，对于多重背包，有一个二进制拆分优化，可以在<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mo>∑</mo><mrow><mi>n</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(vlog(\\sum{n[i]}))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">]</span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>级别的复杂度解决问题</li>\n<li>然后单调队列优化可以跑到<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nv)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>","more":"<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h1>\n<ul>\n<li>首先我们考虑一下朴素的多重背包写法：</li>\n</ul>\n<blockquote>\n<p>对于当前物品i，枚举选的个数n[i]，用于更新dp数组</p>\n</blockquote>\n<p>然后我们能够发现这样一个神必规律：</p>\n<p>dp[i]用于维护代价为i的最大价值，且当前考虑选的物品代价为v</p>\n<p>则dp[i]只能够从dp[j]，当且仅当j mod v == i mod v 且选的个数不超过要求的点转移过来</p>\n<p>也就是</p>\n<ul>\n<li>当前在选第i个物品时</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>v</mi><mo>+</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi>v</mi><mo>+</mo><mn>2</mn><mi>w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp[j+nv]=max(dp[j+(n-1)v+w,dp[j+(n-2)v+2w,....)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>改变一下形式</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>n</mi><mi>v</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mi>v</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mn>2</mn><mi>v</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mn>2</mn><mi>w</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>n</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">dp[j+nv]=max(dp[j],dp[j+v]-w,dp[j+2v]-2w,...)+nw\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></p>\n<p>当然，因为有个数的限制，他选定的是一定区间里边的最大值，这个就给我们跑单调区间留下了伏笔捏</p>\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> CODE</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\">ll N, V;</span><br><span class=\"line\">ll f[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll g[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll q[<span class=\"number\">20000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; N &gt;&gt; V;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">\t\tll v, w, s;</span><br><span class=\"line\">\t\tcin &gt;&gt; v &gt;&gt; w &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(g, f, <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(f));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; v; j++) &#123;</span><br><span class=\"line\">\t\t\tll l = <span class=\"number\">0</span>, r = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt;= V; k += v) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (r &gt;= l &amp;&amp; (k - q[l]) &gt; s * v)l++;<span class=\"comment\">// 判断区间长度是否超过</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (r &gt;= l &amp;&amp; (g[q[r]] - (q[r] - j) / v * w) &lt; (g[k] - (k - j) / v * w))r--;</span><br><span class=\"line\">\t\t\t\tq[++r] = k;</span><br><span class=\"line\">\t\t\t\tf[k] = <span class=\"built_in\">max</span>(g[k], g[q[l]] + (k - q[l]) / v * w);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= V; i++)ans = <span class=\"built_in\">max</span>(f[i], ans);</span><br><span class=\"line\">\tcout &lt;&lt; ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"回文树","date":"2022-03-22T14:06:26.000Z","_content":"\n> 久违的学一点点东西得了。。。\n\n## 简而言之\n\n回文树是一种用来处理回文的自动机,可以处理一个字符串中的所有不同子串 \n\n指路论文：https://victorwonder.blog.uoj.ac/blog/146\n\n<!--more-->\n\n# 首先\n\n我们有这么一个结论：\n\n> 一个长为n字符串中最多存在n个本质不同的回文子串\n\n每次加入一个字符，假设生成了1个以上的本质不同回文子串\n\n考虑生成的最长的和最短的回文子串A、B，那么有两种可能\n\n- B的左端点在A的中点右边：由于B为回文串，则A中点左侧必定存在一个与B相同的回文串，矛盾\n- B的左端点在A的中点左边：由于A为回文串，则B截去超出中点的镜像部分在A中点左侧必定存在相同的串，矛盾\n\n因此每次加入一个字符生成本质不同回文子串最多一个\n\n---\n\n# 然后\n\n我们就可以开始构造这个回文树了\n\n![](回文树/tree.png)\n\n\n\n\n\n如果这个图没有挂的话，\n\n我们可以看出，这个玩意和sam啥的都很像，就是由转移边和fail指针（后缀link）组成的。\n\n两个起始状态奇根和偶根就是用来存长度为奇数的回文串和长度为偶数的回文串\n\n后缀link就是指向当前回文串的最长回文后缀。\n\n---\n\n# 具体\n\n和那些奇奇怪怪的自动机一样，我们每次都加入一个字符。\n\n假设已经处理了的串为s，我们要加入一个新的字符X，那么该怎么办呢？\n\n首先我们找到串s的最长后缀回文串t（这玩意已经提前维护好了）\n\n那么如果s的最后一段长成xtx这样，那么显然这玩意就是新串的最长回文后缀，然后我们还可以试图更新一下状态啥的\n那**如果不是呢**\n\n聪明的你一定想到了：肯定要用到后缀link呗， 不然哥们维护他干嘛\n\n确实，只要找t的后缀link到的各个节点，一个个试即可，最后大不了到奇根。变成长度为1的回文子串即可。\n\n\n\n### 一个小问题： 新出现的状态后缀link该往哪里连？\n\n很显然，新状态的最长回文后缀也是Xt'X的形式，从新出现的状态接着往下找一找就完事了\n\n这个理论上应该存在的图就很好的说明了整个流程\n\n![](回文树/pam.jpg)\n\n---\n\n# 最后\n\n> 喜闻乐见的代码时间！\n>\n> 板子，开超！\n\n```c++\nstruct PAM{\n    int nex[maxn][26];  //指向的一个字符的节点\n    int fail[maxn]; //失配节点\n    int len[maxn];  //当前节点回文长度\n    int str[maxn];  //当前字符串\n    int cnt[maxn];  //节点出现次数\n    int last;   //目前走到哪个节点\n    int tot;    //PAM中节点数\n    int N;  //添加的串的个数\n \n    int newnode(int L){ //新建节点\n        for(int i = 0; i < 26; i++) nex[tot][i] = 0;\n        len[tot] = L;\n        cnt[tot] = 0;\n        return tot++;\n    }\n \n    void init(){\n        tot = 0;\n        newnode(0);\n        newnode(-1);\n        last = 0;\n        N = 0;\n        str[0] = -1;\n        fail[0] = 1;    //偶根指向奇根，因为到奇根必匹配\n    }\n \n    int getfail(int x){ //失配\n        while(N - len[x] - 1 < 0 || str[N - len[x] - 1] != str[N]) x = fail[x];\n        return x;\n    }\n \n    void add(char ss){\n        int c = ss - 'a';\n        str[++N] = c;\n        int cur = getfail(last);    //最长可扩增的后缀回文节点\n        if(!nex[cur][c]){\n            int now = newnode(len[cur] + 2);\n            fail[now] = nex[getfail(fail[cur])][c];\n            //cur后缀(除自己)的最长的能让now失配的后缀\n            nex[cur][c] = now;\n        }\n        last = nex[cur][c];\n        cnt[last]++;\n    }\n \n    void count(){\n        for(int i = tot - 1; i >= 0; i--)   //子节点出现父节点也出现\n            cnt[fail[i]] += cnt[i];\n    }\n}pam;\n```\n\n","source":"_posts/01或许是算法/回文树.md","raw":"---\ntitle: 回文树\ndate: 2022-03-22 22:06:26\ntags: \n- 回文\ncategory: \n- 算法\n- 字符串\n---\n\n> 久违的学一点点东西得了。。。\n\n## 简而言之\n\n回文树是一种用来处理回文的自动机,可以处理一个字符串中的所有不同子串 \n\n指路论文：https://victorwonder.blog.uoj.ac/blog/146\n\n<!--more-->\n\n# 首先\n\n我们有这么一个结论：\n\n> 一个长为n字符串中最多存在n个本质不同的回文子串\n\n每次加入一个字符，假设生成了1个以上的本质不同回文子串\n\n考虑生成的最长的和最短的回文子串A、B，那么有两种可能\n\n- B的左端点在A的中点右边：由于B为回文串，则A中点左侧必定存在一个与B相同的回文串，矛盾\n- B的左端点在A的中点左边：由于A为回文串，则B截去超出中点的镜像部分在A中点左侧必定存在相同的串，矛盾\n\n因此每次加入一个字符生成本质不同回文子串最多一个\n\n---\n\n# 然后\n\n我们就可以开始构造这个回文树了\n\n![](回文树/tree.png)\n\n\n\n\n\n如果这个图没有挂的话，\n\n我们可以看出，这个玩意和sam啥的都很像，就是由转移边和fail指针（后缀link）组成的。\n\n两个起始状态奇根和偶根就是用来存长度为奇数的回文串和长度为偶数的回文串\n\n后缀link就是指向当前回文串的最长回文后缀。\n\n---\n\n# 具体\n\n和那些奇奇怪怪的自动机一样，我们每次都加入一个字符。\n\n假设已经处理了的串为s，我们要加入一个新的字符X，那么该怎么办呢？\n\n首先我们找到串s的最长后缀回文串t（这玩意已经提前维护好了）\n\n那么如果s的最后一段长成xtx这样，那么显然这玩意就是新串的最长回文后缀，然后我们还可以试图更新一下状态啥的\n那**如果不是呢**\n\n聪明的你一定想到了：肯定要用到后缀link呗， 不然哥们维护他干嘛\n\n确实，只要找t的后缀link到的各个节点，一个个试即可，最后大不了到奇根。变成长度为1的回文子串即可。\n\n\n\n### 一个小问题： 新出现的状态后缀link该往哪里连？\n\n很显然，新状态的最长回文后缀也是Xt'X的形式，从新出现的状态接着往下找一找就完事了\n\n这个理论上应该存在的图就很好的说明了整个流程\n\n![](回文树/pam.jpg)\n\n---\n\n# 最后\n\n> 喜闻乐见的代码时间！\n>\n> 板子，开超！\n\n```c++\nstruct PAM{\n    int nex[maxn][26];  //指向的一个字符的节点\n    int fail[maxn]; //失配节点\n    int len[maxn];  //当前节点回文长度\n    int str[maxn];  //当前字符串\n    int cnt[maxn];  //节点出现次数\n    int last;   //目前走到哪个节点\n    int tot;    //PAM中节点数\n    int N;  //添加的串的个数\n \n    int newnode(int L){ //新建节点\n        for(int i = 0; i < 26; i++) nex[tot][i] = 0;\n        len[tot] = L;\n        cnt[tot] = 0;\n        return tot++;\n    }\n \n    void init(){\n        tot = 0;\n        newnode(0);\n        newnode(-1);\n        last = 0;\n        N = 0;\n        str[0] = -1;\n        fail[0] = 1;    //偶根指向奇根，因为到奇根必匹配\n    }\n \n    int getfail(int x){ //失配\n        while(N - len[x] - 1 < 0 || str[N - len[x] - 1] != str[N]) x = fail[x];\n        return x;\n    }\n \n    void add(char ss){\n        int c = ss - 'a';\n        str[++N] = c;\n        int cur = getfail(last);    //最长可扩增的后缀回文节点\n        if(!nex[cur][c]){\n            int now = newnode(len[cur] + 2);\n            fail[now] = nex[getfail(fail[cur])][c];\n            //cur后缀(除自己)的最长的能让now失配的后缀\n            nex[cur][c] = now;\n        }\n        last = nex[cur][c];\n        cnt[last]++;\n    }\n \n    void count(){\n        for(int i = tot - 1; i >= 0; i--)   //子节点出现父节点也出现\n            cnt[fail[i]] += cnt[i];\n    }\n}pam;\n```\n\n","slug":"01或许是算法/回文树","published":1,"updated":"2022-03-22T15:19:02.083Z","_id":"clobly6cv000bzowb5jld76r7","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>久违的学一点点东西得了。。。</p>\n</blockquote>\n<h2 id=\"简而言之\"><a class=\"markdownIt-Anchor\" href=\"#简而言之\"></a> 简而言之</h2>\n<p>回文树是一种用来处理回文的自动机,可以处理一个字符串中的所有不同子串</p>\n<p>指路论文：<a href=\"https://victorwonder.blog.uoj.ac/blog/146\">https://victorwonder.blog.uoj.ac/blog/146</a></p>\n<span id=\"more\"></span>\n<h1 id=\"首先\"><a class=\"markdownIt-Anchor\" href=\"#首先\"></a> 首先</h1>\n<p>我们有这么一个结论：</p>\n<blockquote>\n<p>一个长为n字符串中最多存在n个本质不同的回文子串</p>\n</blockquote>\n<p>每次加入一个字符，假设生成了1个以上的本质不同回文子串</p>\n<p>考虑生成的最长的和最短的回文子串A、B，那么有两种可能</p>\n<ul>\n<li>B的左端点在A的中点右边：由于B为回文串，则A中点左侧必定存在一个与B相同的回文串，矛盾</li>\n<li>B的左端点在A的中点左边：由于A为回文串，则B截去超出中点的镜像部分在A中点左侧必定存在相同的串，矛盾</li>\n</ul>\n<p>因此每次加入一个字符生成本质不同回文子串最多一个</p>\n<hr />\n<h1 id=\"然后\"><a class=\"markdownIt-Anchor\" href=\"#然后\"></a> 然后</h1>\n<p>我们就可以开始构造这个回文树了</p>\n<img src=\"/2022/03/22/01%E6%88%96%E8%AE%B8%E6%98%AF%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%96%87%E6%A0%91/tree.png\" class=\"\">\n<p>如果这个图没有挂的话，</p>\n<p>我们可以看出，这个玩意和sam啥的都很像，就是由转移边和fail指针（后缀link）组成的。</p>\n<p>两个起始状态奇根和偶根就是用来存长度为奇数的回文串和长度为偶数的回文串</p>\n<p>后缀link就是指向当前回文串的最长回文后缀。</p>\n<hr />\n<h1 id=\"具体\"><a class=\"markdownIt-Anchor\" href=\"#具体\"></a> 具体</h1>\n<p>和那些奇奇怪怪的自动机一样，我们每次都加入一个字符。</p>\n<p>假设已经处理了的串为s，我们要加入一个新的字符X，那么该怎么办呢？</p>\n<p>首先我们找到串s的最长后缀回文串t（这玩意已经提前维护好了）</p>\n<p>那么如果s的最后一段长成xtx这样，那么显然这玩意就是新串的最长回文后缀，然后我们还可以试图更新一下状态啥的<br />\n那<strong>如果不是呢</strong></p>\n<p>聪明的你一定想到了：肯定要用到后缀link呗， 不然哥们维护他干嘛</p>\n<p>确实，只要找t的后缀link到的各个节点，一个个试即可，最后大不了到奇根。变成长度为1的回文子串即可。</p>\n<h3 id=\"一个小问题-新出现的状态后缀link该往哪里连\"><a class=\"markdownIt-Anchor\" href=\"#一个小问题-新出现的状态后缀link该往哪里连\"></a> 一个小问题： 新出现的状态后缀link该往哪里连？</h3>\n<p>很显然，新状态的最长回文后缀也是Xt’X的形式，从新出现的状态接着往下找一找就完事了</p>\n<p>这个理论上应该存在的图就很好的说明了整个流程</p>\n<img src=\"/2022/03/22/01%E6%88%96%E8%AE%B8%E6%98%AF%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%96%87%E6%A0%91/pam.jpg\" class=\"\">\n<hr />\n<h1 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\"></a> 最后</h1>\n<blockquote>\n<p>喜闻乐见的代码时间！</p>\n<p>板子，开超！</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">PAM</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nex[maxn][<span class=\"number\">26</span>];  <span class=\"comment\">//指向的一个字符的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> fail[maxn]; <span class=\"comment\">//失配节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> len[maxn];  <span class=\"comment\">//当前节点回文长度</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> str[maxn];  <span class=\"comment\">//当前字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt[maxn];  <span class=\"comment\">//节点出现次数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> last;   <span class=\"comment\">//目前走到哪个节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> tot;    <span class=\"comment\">//PAM中节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;  <span class=\"comment\">//添加的串的个数</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">newnode</span><span class=\"params\">(<span class=\"keyword\">int</span> L)</span></span>&#123; <span class=\"comment\">//新建节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++) nex[tot][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        len[tot] = L;</span><br><span class=\"line\">        cnt[tot] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> tot++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">newnode</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"built_in\">newnode</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\">        last = <span class=\"number\">0</span>;</span><br><span class=\"line\">        N = <span class=\"number\">0</span>;</span><br><span class=\"line\">        str[<span class=\"number\">0</span>] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        fail[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;    <span class=\"comment\">//偶根指向奇根，因为到奇根必匹配</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getfail</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123; <span class=\"comment\">//失配</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(N - len[x] - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> || str[N - len[x] - <span class=\"number\">1</span>] != str[N]) x = fail[x];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">char</span> ss)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> c = ss - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        str[++N] = c;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cur = <span class=\"built_in\">getfail</span>(last);    <span class=\"comment\">//最长可扩增的后缀回文节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!nex[cur][c])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> now = <span class=\"built_in\">newnode</span>(len[cur] + <span class=\"number\">2</span>);</span><br><span class=\"line\">            fail[now] = nex[<span class=\"built_in\">getfail</span>(fail[cur])][c];</span><br><span class=\"line\">            <span class=\"comment\">//cur后缀(除自己)的最长的能让now失配的后缀</span></span><br><span class=\"line\">            nex[cur][c] = now;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        last = nex[cur][c];</span><br><span class=\"line\">        cnt[last]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">count</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = tot - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)   <span class=\"comment\">//子节点出现父节点也出现</span></span><br><span class=\"line\">            cnt[fail[i]] += cnt[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;pam;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>久违的学一点点东西得了。。。</p>\n</blockquote>\n<h2 id=\"简而言之\"><a class=\"markdownIt-Anchor\" href=\"#简而言之\"></a> 简而言之</h2>\n<p>回文树是一种用来处理回文的自动机,可以处理一个字符串中的所有不同子串</p>\n<p>指路论文：<a href=\"https://victorwonder.blog.uoj.ac/blog/146\">https://victorwonder.blog.uoj.ac/blog/146</a></p>","more":"<h1 id=\"首先\"><a class=\"markdownIt-Anchor\" href=\"#首先\"></a> 首先</h1>\n<p>我们有这么一个结论：</p>\n<blockquote>\n<p>一个长为n字符串中最多存在n个本质不同的回文子串</p>\n</blockquote>\n<p>每次加入一个字符，假设生成了1个以上的本质不同回文子串</p>\n<p>考虑生成的最长的和最短的回文子串A、B，那么有两种可能</p>\n<ul>\n<li>B的左端点在A的中点右边：由于B为回文串，则A中点左侧必定存在一个与B相同的回文串，矛盾</li>\n<li>B的左端点在A的中点左边：由于A为回文串，则B截去超出中点的镜像部分在A中点左侧必定存在相同的串，矛盾</li>\n</ul>\n<p>因此每次加入一个字符生成本质不同回文子串最多一个</p>\n<hr />\n<h1 id=\"然后\"><a class=\"markdownIt-Anchor\" href=\"#然后\"></a> 然后</h1>\n<p>我们就可以开始构造这个回文树了</p>\n<img src=\"/2022/03/22/01%E6%88%96%E8%AE%B8%E6%98%AF%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%96%87%E6%A0%91/tree.png\" class=\"\">\n<p>如果这个图没有挂的话，</p>\n<p>我们可以看出，这个玩意和sam啥的都很像，就是由转移边和fail指针（后缀link）组成的。</p>\n<p>两个起始状态奇根和偶根就是用来存长度为奇数的回文串和长度为偶数的回文串</p>\n<p>后缀link就是指向当前回文串的最长回文后缀。</p>\n<hr />\n<h1 id=\"具体\"><a class=\"markdownIt-Anchor\" href=\"#具体\"></a> 具体</h1>\n<p>和那些奇奇怪怪的自动机一样，我们每次都加入一个字符。</p>\n<p>假设已经处理了的串为s，我们要加入一个新的字符X，那么该怎么办呢？</p>\n<p>首先我们找到串s的最长后缀回文串t（这玩意已经提前维护好了）</p>\n<p>那么如果s的最后一段长成xtx这样，那么显然这玩意就是新串的最长回文后缀，然后我们还可以试图更新一下状态啥的<br />\n那<strong>如果不是呢</strong></p>\n<p>聪明的你一定想到了：肯定要用到后缀link呗， 不然哥们维护他干嘛</p>\n<p>确实，只要找t的后缀link到的各个节点，一个个试即可，最后大不了到奇根。变成长度为1的回文子串即可。</p>\n<h3 id=\"一个小问题-新出现的状态后缀link该往哪里连\"><a class=\"markdownIt-Anchor\" href=\"#一个小问题-新出现的状态后缀link该往哪里连\"></a> 一个小问题： 新出现的状态后缀link该往哪里连？</h3>\n<p>很显然，新状态的最长回文后缀也是Xt’X的形式，从新出现的状态接着往下找一找就完事了</p>\n<p>这个理论上应该存在的图就很好的说明了整个流程</p>\n<img src=\"/2022/03/22/01%E6%88%96%E8%AE%B8%E6%98%AF%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%96%87%E6%A0%91/pam.jpg\" class=\"\">\n<hr />\n<h1 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\"></a> 最后</h1>\n<blockquote>\n<p>喜闻乐见的代码时间！</p>\n<p>板子，开超！</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">PAM</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nex[maxn][<span class=\"number\">26</span>];  <span class=\"comment\">//指向的一个字符的节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> fail[maxn]; <span class=\"comment\">//失配节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> len[maxn];  <span class=\"comment\">//当前节点回文长度</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> str[maxn];  <span class=\"comment\">//当前字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt[maxn];  <span class=\"comment\">//节点出现次数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> last;   <span class=\"comment\">//目前走到哪个节点</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> tot;    <span class=\"comment\">//PAM中节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;  <span class=\"comment\">//添加的串的个数</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">newnode</span><span class=\"params\">(<span class=\"keyword\">int</span> L)</span></span>&#123; <span class=\"comment\">//新建节点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++) nex[tot][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        len[tot] = L;</span><br><span class=\"line\">        cnt[tot] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> tot++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        tot = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">newnode</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"built_in\">newnode</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\">        last = <span class=\"number\">0</span>;</span><br><span class=\"line\">        N = <span class=\"number\">0</span>;</span><br><span class=\"line\">        str[<span class=\"number\">0</span>] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        fail[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;    <span class=\"comment\">//偶根指向奇根，因为到奇根必匹配</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getfail</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123; <span class=\"comment\">//失配</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(N - len[x] - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> || str[N - len[x] - <span class=\"number\">1</span>] != str[N]) x = fail[x];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">char</span> ss)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> c = ss - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        str[++N] = c;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cur = <span class=\"built_in\">getfail</span>(last);    <span class=\"comment\">//最长可扩增的后缀回文节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!nex[cur][c])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> now = <span class=\"built_in\">newnode</span>(len[cur] + <span class=\"number\">2</span>);</span><br><span class=\"line\">            fail[now] = nex[<span class=\"built_in\">getfail</span>(fail[cur])][c];</span><br><span class=\"line\">            <span class=\"comment\">//cur后缀(除自己)的最长的能让now失配的后缀</span></span><br><span class=\"line\">            nex[cur][c] = now;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        last = nex[cur][c];</span><br><span class=\"line\">        cnt[last]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">count</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = tot - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)   <span class=\"comment\">//子节点出现父节点也出现</span></span><br><span class=\"line\">            cnt[fail[i]] += cnt[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;pam;</span><br></pre></td></tr></table></figure>"},{"title":"维护区间众数","date":"2021-11-10T09:32:12.000Z","_content":"\n> 这玩意好像方法挺多的，然后今天被一个阴间东西坑了，来说一哈\n\n 其实就是给一个数列，然后给一堆询问，问你区间众数是多少吧\n\n<!-- more -->\n\n首先先把我之前的复制一手啊\n\n# 绝对众数问题\n\n> 就是出现个数超过n/2的众数\n\n这个我们可以用一个摩尔投票的方法来写捏\n\n## 摩尔投票\n\n首先考虑一个序列，里面两两取数，如果一样就留下，不一样就两个数都消掉，那么最后留下的数肯定就是数量超过n/2的数\n\n实现的话，用两个变量cur和cnt，如果当前的数和cur不同且cnt==0 cur变为当前数，否则cnt--\n\n如果相同 cnt++\n\n最后cur就是唯一有可能是绝对众数的数，然后跑一遍确认即可\n\n```c++\nll dat[maxn];\nll majorityElement(){\n    ll cnt=1,cur=dat[0];\n    for(int i=1;i<n;i++){\n        if(dat[i]!=cnt)cnt--;\n        else cnt++;\n        if(cnt<0){\n            cut=dat[i];\n            cnt=0;\n        }\n    }\n}\n```\n\n如果是n/3以至于n/k 其实就是设置多组cur和cnt就行  \n\n> 然后我们就能用线段树来维护了捏\n\n## 线段树维护\n\n无论如何产生的绝对众数唯一可能就是左右子区间cur中的一个\n\n如果cur1==cur2 新的区间cur3=cur1 ，cnt3=cnt1+cnt2\n\n如果不同 cur3为两段中cnt较大的一个，且cnt3为两段之差\n\n然后查的时候只要查出来cur然后跑一遍二分查区间内个数就能确定了\n\n```c++\nstruct  node\n{\n    ll num, c;\n};\nll n, q, k;\nnode dat[300001<<2];\nll a[300000 + 5];\nll l, r;\nvector<ll> pos[300000 + 5];\nnode merge(node x, node y) {\n    if (x.num == y.num) return(x.num, x.c + y.c);\n    else if (x.c < y.c) return{ y.num,y.c - x.c };\n    else return { x.num,x.c - y.c };\n}\nvoid pushup(ll o) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    dat[o] = merge(dat[ls], dat[rs]);\n}\nvoid build(ll o, ll l, ll r) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    if (l == r) { dat[o] = { a[l],1 }; return; }\n    ll m = l + r >> 1;\n    build(ls, l, m);\n    build(rs, m + 1, r);\n    pushup(o);\n}\nnode ask(ll o, ll l, ll r, ll p, ll q) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    if (p<= l && q >= r)return dat[o];\n    ll m = l + r >> 1;\n    if (q <= m)return ask(ls, l, m, p, q);\n    if (p > m)return ask(rs, m + 1, r, p, q);\n    return merge(ask(ls, l, m, p, q), ask(rs, m + 1, r,p, q));\n}\nint main() {\n    cin.sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n>>q;\n    srand(time(NULL));\n    ll tmp;\n    for (int i = 1; i <=n; i++) {\n        cin >> a[i];\n        pos[a[i]].push_back(i);\n    }\n    build(1, 1, n);\n    for (int i = 0; i < q; i++) {\n        cin >> l >> r;\n        ll tmp=ask(1, 1, n, l, r).num;\n        ll ans = upper_bound(pos[tmp].begin(), pos[tmp].end(), r) - lower_bound(pos[tmp].begin(), pos[tmp].end(), l);\n    }\n}\n```\n\n---\n\n# 一般的众数\n\n> 这玩意方法就可多了，这里讲一个今天把我坑麻了的莫队写法捏\n\n我们开两个数组，`cnt[]`和`num[]`，`cnt[i]`是单纯统计区间里边 i 的出现次数，`num[i]`统计出现了 i 次的数有多少个。\n\n然后ans就应该是令`num[i]`不为0的最大的i\n\n> 考虑到每次更新数的时候，我们其实只会影响一个点的`cnt[]`和`num[]`，因此ans只会加1或者减1，因此可以在O(1)的时间内更新捏\n\n那么add和del函数就能这样写了\n\n```c++\nll cnt[MAXN], num[MAXN];\nll anss = 0;\nvoid add(ll x) {\n    ll p = dat[x];\n    num[cnt[p]]--;\n    cnt[p]++;\n    num[cnt[p]]++;\n    anss = max(anss, cnt[p]);\n}\n\nvoid del(ll x) {\n     ll p = dat[x];\n     num[cntt[p]]--;\n     if (anss == cntt[p] && !num[anss])anss--;\n     --cntt[p];\n     num[cntt[p]]++;\n}\n```\n\n\n\n> 本废物因为莫队学的太烂了，以至于没有想到可以用\n>\n> **`while(l<=r)del(l++)`**\n>\n> 手动清零，天天用`memset()`，T到了天荒地老\n>\n> 小朋友们千万不要学哦\n>\n\n","source":"_posts/01或许是算法/维护区间众数.md","raw":"---\ntitle: 维护区间众数\ndate: 2021-11-10 17:32:12\ntags:\n- 莫队\n- 线段树\ncategory: \n- 算法\n---\n\n> 这玩意好像方法挺多的，然后今天被一个阴间东西坑了，来说一哈\n\n 其实就是给一个数列，然后给一堆询问，问你区间众数是多少吧\n\n<!-- more -->\n\n首先先把我之前的复制一手啊\n\n# 绝对众数问题\n\n> 就是出现个数超过n/2的众数\n\n这个我们可以用一个摩尔投票的方法来写捏\n\n## 摩尔投票\n\n首先考虑一个序列，里面两两取数，如果一样就留下，不一样就两个数都消掉，那么最后留下的数肯定就是数量超过n/2的数\n\n实现的话，用两个变量cur和cnt，如果当前的数和cur不同且cnt==0 cur变为当前数，否则cnt--\n\n如果相同 cnt++\n\n最后cur就是唯一有可能是绝对众数的数，然后跑一遍确认即可\n\n```c++\nll dat[maxn];\nll majorityElement(){\n    ll cnt=1,cur=dat[0];\n    for(int i=1;i<n;i++){\n        if(dat[i]!=cnt)cnt--;\n        else cnt++;\n        if(cnt<0){\n            cut=dat[i];\n            cnt=0;\n        }\n    }\n}\n```\n\n如果是n/3以至于n/k 其实就是设置多组cur和cnt就行  \n\n> 然后我们就能用线段树来维护了捏\n\n## 线段树维护\n\n无论如何产生的绝对众数唯一可能就是左右子区间cur中的一个\n\n如果cur1==cur2 新的区间cur3=cur1 ，cnt3=cnt1+cnt2\n\n如果不同 cur3为两段中cnt较大的一个，且cnt3为两段之差\n\n然后查的时候只要查出来cur然后跑一遍二分查区间内个数就能确定了\n\n```c++\nstruct  node\n{\n    ll num, c;\n};\nll n, q, k;\nnode dat[300001<<2];\nll a[300000 + 5];\nll l, r;\nvector<ll> pos[300000 + 5];\nnode merge(node x, node y) {\n    if (x.num == y.num) return(x.num, x.c + y.c);\n    else if (x.c < y.c) return{ y.num,y.c - x.c };\n    else return { x.num,x.c - y.c };\n}\nvoid pushup(ll o) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    dat[o] = merge(dat[ls], dat[rs]);\n}\nvoid build(ll o, ll l, ll r) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    if (l == r) { dat[o] = { a[l],1 }; return; }\n    ll m = l + r >> 1;\n    build(ls, l, m);\n    build(rs, m + 1, r);\n    pushup(o);\n}\nnode ask(ll o, ll l, ll r, ll p, ll q) {\n    ll ls = o << 1, rs = o << 1 | 1;\n    if (p<= l && q >= r)return dat[o];\n    ll m = l + r >> 1;\n    if (q <= m)return ask(ls, l, m, p, q);\n    if (p > m)return ask(rs, m + 1, r, p, q);\n    return merge(ask(ls, l, m, p, q), ask(rs, m + 1, r,p, q));\n}\nint main() {\n    cin.sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n>>q;\n    srand(time(NULL));\n    ll tmp;\n    for (int i = 1; i <=n; i++) {\n        cin >> a[i];\n        pos[a[i]].push_back(i);\n    }\n    build(1, 1, n);\n    for (int i = 0; i < q; i++) {\n        cin >> l >> r;\n        ll tmp=ask(1, 1, n, l, r).num;\n        ll ans = upper_bound(pos[tmp].begin(), pos[tmp].end(), r) - lower_bound(pos[tmp].begin(), pos[tmp].end(), l);\n    }\n}\n```\n\n---\n\n# 一般的众数\n\n> 这玩意方法就可多了，这里讲一个今天把我坑麻了的莫队写法捏\n\n我们开两个数组，`cnt[]`和`num[]`，`cnt[i]`是单纯统计区间里边 i 的出现次数，`num[i]`统计出现了 i 次的数有多少个。\n\n然后ans就应该是令`num[i]`不为0的最大的i\n\n> 考虑到每次更新数的时候，我们其实只会影响一个点的`cnt[]`和`num[]`，因此ans只会加1或者减1，因此可以在O(1)的时间内更新捏\n\n那么add和del函数就能这样写了\n\n```c++\nll cnt[MAXN], num[MAXN];\nll anss = 0;\nvoid add(ll x) {\n    ll p = dat[x];\n    num[cnt[p]]--;\n    cnt[p]++;\n    num[cnt[p]]++;\n    anss = max(anss, cnt[p]);\n}\n\nvoid del(ll x) {\n     ll p = dat[x];\n     num[cntt[p]]--;\n     if (anss == cntt[p] && !num[anss])anss--;\n     --cntt[p];\n     num[cntt[p]]++;\n}\n```\n\n\n\n> 本废物因为莫队学的太烂了，以至于没有想到可以用\n>\n> **`while(l<=r)del(l++)`**\n>\n> 手动清零，天天用`memset()`，T到了天荒地老\n>\n> 小朋友们千万不要学哦\n>\n\n","slug":"01或许是算法/维护区间众数","published":1,"updated":"2021-11-16T15:34:34.532Z","_id":"clobly6cy000fzowbab84ey1v","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>这玩意好像方法挺多的，然后今天被一个阴间东西坑了，来说一哈</p>\n</blockquote>\n<p>其实就是给一个数列，然后给一堆询问，问你区间众数是多少吧</p>\n<span id=\"more\"></span>\n<p>首先先把我之前的复制一手啊</p>\n<h1 id=\"绝对众数问题\"><a class=\"markdownIt-Anchor\" href=\"#绝对众数问题\"></a> 绝对众数问题</h1>\n<blockquote>\n<p>就是出现个数超过n/2的众数</p>\n</blockquote>\n<p>这个我们可以用一个摩尔投票的方法来写捏</p>\n<h2 id=\"摩尔投票\"><a class=\"markdownIt-Anchor\" href=\"#摩尔投票\"></a> 摩尔投票</h2>\n<p>首先考虑一个序列，里面两两取数，如果一样就留下，不一样就两个数都消掉，那么最后留下的数肯定就是数量超过n/2的数</p>\n<p>实现的话，用两个变量cur和cnt，如果当前的数和cur不同且cnt==0 cur变为当前数，否则cnt–</p>\n<p>如果相同 cnt++</p>\n<p>最后cur就是唯一有可能是绝对众数的数，然后跑一遍确认即可</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll dat[maxn];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">majorityElement</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ll cnt=<span class=\"number\">1</span>,cur=dat[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dat[i]!=cnt)cnt--;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> cnt++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            cut=dat[i];</span><br><span class=\"line\">            cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是n/3以至于n/k 其实就是设置多组cur和cnt就行</p>\n<blockquote>\n<p>然后我们就能用线段树来维护了捏</p>\n</blockquote>\n<h2 id=\"线段树维护\"><a class=\"markdownIt-Anchor\" href=\"#线段树维护\"></a> 线段树维护</h2>\n<p>无论如何产生的绝对众数唯一可能就是左右子区间cur中的一个</p>\n<p>如果cur1==cur2 新的区间cur3=cur1 ，cnt3=cnt1+cnt2</p>\n<p>如果不同 cur3为两段中cnt较大的一个，且cnt3为两段之差</p>\n<p>然后查的时候只要查出来cur然后跑一遍二分查区间内个数就能确定了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span>  <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    ll num, c;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">ll n, q, k;</span><br><span class=\"line\">node dat[<span class=\"number\">300001</span>&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\">ll a[<span class=\"number\">300000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll l, r;</span><br><span class=\"line\">vector&lt;ll&gt; pos[<span class=\"number\">300000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\">node <span class=\"title\">merge</span><span class=\"params\">(node x, node y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.num == y.num) <span class=\"keyword\">return</span>(x.num, x.c + y.c);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x.c &lt; y.c) <span class=\"keyword\">return</span>&#123; y.num,y.c - x.c &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> &#123; x.num,x.c - y.c &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pushup</span><span class=\"params\">(ll o)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    dat[o] = <span class=\"built_in\">merge</span>(dat[ls], dat[rs]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(ll o, ll l, ll r)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l == r) &#123; dat[o] = &#123; a[l],<span class=\"number\">1</span> &#125;; <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ll m = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(ls, l, m);</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(rs, m + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">    <span class=\"built_in\">pushup</span>(o);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">node <span class=\"title\">ask</span><span class=\"params\">(ll o, ll l, ll r, ll p, ll q)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p&lt;= l &amp;&amp; q &gt;= r)<span class=\"keyword\">return</span> dat[o];</span><br><span class=\"line\">    ll m = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (q &lt;= m)<span class=\"keyword\">return</span> <span class=\"built_in\">ask</span>(ls, l, m, p, q);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p &gt; m)<span class=\"keyword\">return</span> <span class=\"built_in\">ask</span>(rs, m + <span class=\"number\">1</span>, r, p, q);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">merge</span>(<span class=\"built_in\">ask</span>(ls, l, m, p, q), <span class=\"built_in\">ask</span>(rs, m + <span class=\"number\">1</span>, r,p, q));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin.<span class=\"built_in\">sync_with_stdio</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    cin.<span class=\"built_in\">tie</span>(<span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">    cin &gt;&gt; n&gt;&gt;q;</span><br><span class=\"line\">    <span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    ll tmp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i];</span><br><span class=\"line\">        pos[a[i]].<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; q; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        ll tmp=<span class=\"built_in\">ask</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n, l, r).num;</span><br><span class=\"line\">        ll ans = <span class=\"built_in\">upper_bound</span>(pos[tmp].<span class=\"built_in\">begin</span>(), pos[tmp].<span class=\"built_in\">end</span>(), r) - <span class=\"built_in\">lower_bound</span>(pos[tmp].<span class=\"built_in\">begin</span>(), pos[tmp].<span class=\"built_in\">end</span>(), l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"一般的众数\"><a class=\"markdownIt-Anchor\" href=\"#一般的众数\"></a> 一般的众数</h1>\n<blockquote>\n<p>这玩意方法就可多了，这里讲一个今天把我坑麻了的莫队写法捏</p>\n</blockquote>\n<p>我们开两个数组，<code>cnt[]</code>和<code>num[]</code>，<code>cnt[i]</code>是单纯统计区间里边 i 的出现次数，<code>num[i]</code>统计出现了 i 次的数有多少个。</p>\n<p>然后ans就应该是令<code>num[i]</code>不为0的最大的i</p>\n<blockquote>\n<p>考虑到每次更新数的时候，我们其实只会影响一个点的<code>cnt[]</code>和<code>num[]</code>，因此ans只会加1或者减1，因此可以在O(1)的时间内更新捏</p>\n</blockquote>\n<p>那么add和del函数就能这样写了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll cnt[MAXN], num[MAXN];</span><br><span class=\"line\">ll anss = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll x)</span> </span>&#123;</span><br><span class=\"line\">    ll p = dat[x];</span><br><span class=\"line\">    num[cnt[p]]--;</span><br><span class=\"line\">    cnt[p]++;</span><br><span class=\"line\">    num[cnt[p]]++;</span><br><span class=\"line\">    anss = <span class=\"built_in\">max</span>(anss, cnt[p]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(ll x)</span> </span>&#123;</span><br><span class=\"line\">     ll p = dat[x];</span><br><span class=\"line\">     num[cntt[p]]--;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (anss == cntt[p] &amp;&amp; !num[anss])anss--;</span><br><span class=\"line\">     --cntt[p];</span><br><span class=\"line\">     num[cntt[p]]++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>本废物因为莫队学的太烂了，以至于没有想到可以用</p>\n<p><strong><code>while(l&lt;=r)del(l++)</code></strong></p>\n<p>手动清零，天天用<code>memset()</code>，T到了天荒地老</p>\n<p>小朋友们千万不要学哦</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>这玩意好像方法挺多的，然后今天被一个阴间东西坑了，来说一哈</p>\n</blockquote>\n<p>其实就是给一个数列，然后给一堆询问，问你区间众数是多少吧</p>","more":"<p>首先先把我之前的复制一手啊</p>\n<h1 id=\"绝对众数问题\"><a class=\"markdownIt-Anchor\" href=\"#绝对众数问题\"></a> 绝对众数问题</h1>\n<blockquote>\n<p>就是出现个数超过n/2的众数</p>\n</blockquote>\n<p>这个我们可以用一个摩尔投票的方法来写捏</p>\n<h2 id=\"摩尔投票\"><a class=\"markdownIt-Anchor\" href=\"#摩尔投票\"></a> 摩尔投票</h2>\n<p>首先考虑一个序列，里面两两取数，如果一样就留下，不一样就两个数都消掉，那么最后留下的数肯定就是数量超过n/2的数</p>\n<p>实现的话，用两个变量cur和cnt，如果当前的数和cur不同且cnt==0 cur变为当前数，否则cnt–</p>\n<p>如果相同 cnt++</p>\n<p>最后cur就是唯一有可能是绝对众数的数，然后跑一遍确认即可</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll dat[maxn];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">majorityElement</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ll cnt=<span class=\"number\">1</span>,cur=dat[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dat[i]!=cnt)cnt--;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> cnt++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            cut=dat[i];</span><br><span class=\"line\">            cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是n/3以至于n/k 其实就是设置多组cur和cnt就行</p>\n<blockquote>\n<p>然后我们就能用线段树来维护了捏</p>\n</blockquote>\n<h2 id=\"线段树维护\"><a class=\"markdownIt-Anchor\" href=\"#线段树维护\"></a> 线段树维护</h2>\n<p>无论如何产生的绝对众数唯一可能就是左右子区间cur中的一个</p>\n<p>如果cur1==cur2 新的区间cur3=cur1 ，cnt3=cnt1+cnt2</p>\n<p>如果不同 cur3为两段中cnt较大的一个，且cnt3为两段之差</p>\n<p>然后查的时候只要查出来cur然后跑一遍二分查区间内个数就能确定了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span>  <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    ll num, c;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">ll n, q, k;</span><br><span class=\"line\">node dat[<span class=\"number\">300001</span>&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\">ll a[<span class=\"number\">300000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll l, r;</span><br><span class=\"line\">vector&lt;ll&gt; pos[<span class=\"number\">300000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\">node <span class=\"title\">merge</span><span class=\"params\">(node x, node y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.num == y.num) <span class=\"keyword\">return</span>(x.num, x.c + y.c);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x.c &lt; y.c) <span class=\"keyword\">return</span>&#123; y.num,y.c - x.c &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> &#123; x.num,x.c - y.c &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pushup</span><span class=\"params\">(ll o)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    dat[o] = <span class=\"built_in\">merge</span>(dat[ls], dat[rs]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(ll o, ll l, ll r)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l == r) &#123; dat[o] = &#123; a[l],<span class=\"number\">1</span> &#125;; <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    ll m = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(ls, l, m);</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(rs, m + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">    <span class=\"built_in\">pushup</span>(o);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">node <span class=\"title\">ask</span><span class=\"params\">(ll o, ll l, ll r, ll p, ll q)</span> </span>&#123;</span><br><span class=\"line\">    ll ls = o &lt;&lt; <span class=\"number\">1</span>, rs = o &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p&lt;= l &amp;&amp; q &gt;= r)<span class=\"keyword\">return</span> dat[o];</span><br><span class=\"line\">    ll m = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (q &lt;= m)<span class=\"keyword\">return</span> <span class=\"built_in\">ask</span>(ls, l, m, p, q);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p &gt; m)<span class=\"keyword\">return</span> <span class=\"built_in\">ask</span>(rs, m + <span class=\"number\">1</span>, r, p, q);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">merge</span>(<span class=\"built_in\">ask</span>(ls, l, m, p, q), <span class=\"built_in\">ask</span>(rs, m + <span class=\"number\">1</span>, r,p, q));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin.<span class=\"built_in\">sync_with_stdio</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    cin.<span class=\"built_in\">tie</span>(<span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">    cin &gt;&gt; n&gt;&gt;q;</span><br><span class=\"line\">    <span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    ll tmp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i];</span><br><span class=\"line\">        pos[a[i]].<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">build</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; q; i++) &#123;</span><br><span class=\"line\">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">        ll tmp=<span class=\"built_in\">ask</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n, l, r).num;</span><br><span class=\"line\">        ll ans = <span class=\"built_in\">upper_bound</span>(pos[tmp].<span class=\"built_in\">begin</span>(), pos[tmp].<span class=\"built_in\">end</span>(), r) - <span class=\"built_in\">lower_bound</span>(pos[tmp].<span class=\"built_in\">begin</span>(), pos[tmp].<span class=\"built_in\">end</span>(), l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"一般的众数\"><a class=\"markdownIt-Anchor\" href=\"#一般的众数\"></a> 一般的众数</h1>\n<blockquote>\n<p>这玩意方法就可多了，这里讲一个今天把我坑麻了的莫队写法捏</p>\n</blockquote>\n<p>我们开两个数组，<code>cnt[]</code>和<code>num[]</code>，<code>cnt[i]</code>是单纯统计区间里边 i 的出现次数，<code>num[i]</code>统计出现了 i 次的数有多少个。</p>\n<p>然后ans就应该是令<code>num[i]</code>不为0的最大的i</p>\n<blockquote>\n<p>考虑到每次更新数的时候，我们其实只会影响一个点的<code>cnt[]</code>和<code>num[]</code>，因此ans只会加1或者减1，因此可以在O(1)的时间内更新捏</p>\n</blockquote>\n<p>那么add和del函数就能这样写了</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll cnt[MAXN], num[MAXN];</span><br><span class=\"line\">ll anss = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll x)</span> </span>&#123;</span><br><span class=\"line\">    ll p = dat[x];</span><br><span class=\"line\">    num[cnt[p]]--;</span><br><span class=\"line\">    cnt[p]++;</span><br><span class=\"line\">    num[cnt[p]]++;</span><br><span class=\"line\">    anss = <span class=\"built_in\">max</span>(anss, cnt[p]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(ll x)</span> </span>&#123;</span><br><span class=\"line\">     ll p = dat[x];</span><br><span class=\"line\">     num[cntt[p]]--;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (anss == cntt[p] &amp;&amp; !num[anss])anss--;</span><br><span class=\"line\">     --cntt[p];</span><br><span class=\"line\">     num[cntt[p]]++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>本废物因为莫队学的太烂了，以至于没有想到可以用</p>\n<p><strong><code>while(l&lt;=r)del(l++)</code></strong></p>\n<p>手动清零，天天用<code>memset()</code>，T到了天荒地老</p>\n<p>小朋友们千万不要学哦</p>\n</blockquote>"},{"title":"对顶栈","date":"2022-08-05T16:31:00.000Z","_content":"# 对顶栈\n\n> 用于维护一种光标线性移动，而且插入和删除都是发生在光标左右的数据结构\n\n顾名思义，对顶栈就是两个栈，一个维护光标左边的内容，一个维护光标右边的内容，光标的移动就是把一边的弹出来塞到另外一边就行，添加和删除操作也很简单了，就是对栈进行相应操作就行。\n\n[Problem - 4699 (hdu.edu.cn)](https://acm.hdu.edu.cn/showproblem.php?pid=4699)\n\n","source":"_posts/01或许是算法/对顶栈.md","raw":"---\ntitle: 对顶栈\ndate: 2022-08-06 00:31:00\ntags: 数据结构\ncategory: \n- 算法\n---\n# 对顶栈\n\n> 用于维护一种光标线性移动，而且插入和删除都是发生在光标左右的数据结构\n\n顾名思义，对顶栈就是两个栈，一个维护光标左边的内容，一个维护光标右边的内容，光标的移动就是把一边的弹出来塞到另外一边就行，添加和删除操作也很简单了，就是对栈进行相应操作就行。\n\n[Problem - 4699 (hdu.edu.cn)](https://acm.hdu.edu.cn/showproblem.php?pid=4699)\n\n","slug":"01或许是算法/对顶栈","published":1,"updated":"2022-08-05T16:31:44.699Z","_id":"clobly6cz000gzowbes3tcqxz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"对顶栈\"><a class=\"markdownIt-Anchor\" href=\"#对顶栈\"></a> 对顶栈</h1>\n<blockquote>\n<p>用于维护一种光标线性移动，而且插入和删除都是发生在光标左右的数据结构</p>\n</blockquote>\n<p>顾名思义，对顶栈就是两个栈，一个维护光标左边的内容，一个维护光标右边的内容，光标的移动就是把一边的弹出来塞到另外一边就行，添加和删除操作也很简单了，就是对栈进行相应操作就行。</p>\n<p><a href=\"https://acm.hdu.edu.cn/showproblem.php?pid=4699\">Problem - 4699 (hdu.edu.cn)</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"对顶栈\"><a class=\"markdownIt-Anchor\" href=\"#对顶栈\"></a> 对顶栈</h1>\n<blockquote>\n<p>用于维护一种光标线性移动，而且插入和删除都是发生在光标左右的数据结构</p>\n</blockquote>\n<p>顾名思义，对顶栈就是两个栈，一个维护光标左边的内容，一个维护光标右边的内容，光标的移动就是把一边的弹出来塞到另外一边就行，添加和删除操作也很简单了，就是对栈进行相应操作就行。</p>\n<p><a href=\"https://acm.hdu.edu.cn/showproblem.php?pid=4699\">Problem - 4699 (hdu.edu.cn)</a></p>\n"},{"title":"EXGCD","date":"2021-10-29T16:00:00.000Z","_content":"\n\n\n\n\n##### EXGCD\n\n用于解形如ax+by=gcd（a，b）方程的通解\n\n<!-- more -->\n\n```c++\nvoid exgcd(int &x,int &y,int a,int b)\n{\n    if(!b)\n    {\n        x=1;\n        y=0;\n        return;\n    }\n    exgcd(x,y,b,a%b);\n    int t=x;\n    x=y;\n    y=t-a/b*y;\n}\n```\n\n也可以解出ax+by=c  gcd（a，b）|c的解\n\n上方参数还是gcd（a，b） 解出后x2=x\\*c/gcd（a，b） \ty2=y*c/gcd（a，b）\n\n通解为：\n\n{(x, y) | x = x2 + k * b / gcd(a, b)， y = y2 - k * a / gcd(a, b), k ∈ z}\n\n 特别的 gcd（a，b）等于1时\n\n相当于求ax=1（modb） 为a在b下的逆元（不用b是质数） 解出x后用 x=（x%b+b）%b求出在0-b范围内的x即为逆元\n\n\n\n##### 类欧几里得\n\n当我们要计算形如\n$$\n        \\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n$$\n且a，b>=0,c>0时\n可以使用类欧算法。\n\n首先有以下公式\n$$ \\lceil \\frac{a}{b}\\rceil = \\lfloor \\frac{a+b-1}{b}\\rfloor$$\n$$ \\lfloor\\frac{a}{b}\\rfloor = \\lceil \\frac{a-b+1}{b}\\rceil$$\n挺容易推的：关于1式，如果 a % b != 0,那么右边就会比左边大1，2式原理相同。\n\n然后开始推（？\n我们令\n$$ F(a,b,c,n)=\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor$$\n1.\n$${a}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n(\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor i)=\\sum_{i=0}^n\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n2.\n$${b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{a i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1) $$\n因此\n$${a}\\geq{c}||{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{(a\\%c) i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n$$\\Rightarrow F(a,b,c,n) = F(a\\%c,b\\%c,c,n)++\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n之后只要解决$a \\lt c \\&\\& b\\lt c$的情况就好了（？\n\n由\n$$\n\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{ai+b}{c}\\rfloor}1\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n$$\n交换求和顺序（\n$$\n\\Rightarrow \\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n$$\n又有\n$$\n\\lfloor \\frac{a}{b} \\rfloor \\geq c \\Leftrightarrow a\\geq bc\n$$\n$$\n\\lceil \\frac{a}{b} \\rceil \\leq c \\Leftrightarrow a\\leq bc\n$$\n因此\n$$\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[jc\\leq {ai+b}]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[\\lceil \\frac{jc-b}{a} \\rceil \\leq i]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lceil \\frac{jc-b}{a} \\rceil]\n$$\n$$\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lfloor \\frac{jc-b+a-1}{a} \\rfloor]\n$$\n$$\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[\\lfloor \\frac{jc-b+a-1}{a} \\rfloor-1]\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=0}^{\\lfloor \\frac{an+b}{c}\\rfloor-1}[\\lfloor \\frac{(j+1)c-b-1}{a} \\rfloor]\n$$\n因此我们有$a,b\\lt c$时\n$$\nF(a,b,c,n)=n\\lfloor \\frac{an+b}{c}\\rfloor-F(c,-1-b+c,a,\\lfloor \\frac{an+b}{c}\\rfloor-1)\n$$\n然后就 可以递归了 终止条件a=0\n\n以下代码\n\n```c++\n  ll exgcd(ll a, ll b, ll c, ll n){\n        if(a==0) return (n+1)*(b/c);\n        if(a>=c||b>=c) return exgcd(a%c, b%c, c, n) + floor(a/c)*n*(n+1)/2 + floor(b/c)*(n+1);\n        ll temp = (a*n+b)/c;\n        return n*temp - exgcd(c, c-b-1, a, temp-1);\n  }\n```\n\n","source":"_posts/01或许是算法/类&拓展欧几里得.md","raw":"---\ntitle: EXGCD\ntag: 数论\ncategory: \n- 算法\n- 数学\ndate: 2021-10-30\n---\n\n\n\n\n\n##### EXGCD\n\n用于解形如ax+by=gcd（a，b）方程的通解\n\n<!-- more -->\n\n```c++\nvoid exgcd(int &x,int &y,int a,int b)\n{\n    if(!b)\n    {\n        x=1;\n        y=0;\n        return;\n    }\n    exgcd(x,y,b,a%b);\n    int t=x;\n    x=y;\n    y=t-a/b*y;\n}\n```\n\n也可以解出ax+by=c  gcd（a，b）|c的解\n\n上方参数还是gcd（a，b） 解出后x2=x\\*c/gcd（a，b） \ty2=y*c/gcd（a，b）\n\n通解为：\n\n{(x, y) | x = x2 + k * b / gcd(a, b)， y = y2 - k * a / gcd(a, b), k ∈ z}\n\n 特别的 gcd（a，b）等于1时\n\n相当于求ax=1（modb） 为a在b下的逆元（不用b是质数） 解出x后用 x=（x%b+b）%b求出在0-b范围内的x即为逆元\n\n\n\n##### 类欧几里得\n\n当我们要计算形如\n$$\n        \\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n$$\n且a，b>=0,c>0时\n可以使用类欧算法。\n\n首先有以下公式\n$$ \\lceil \\frac{a}{b}\\rceil = \\lfloor \\frac{a+b-1}{b}\\rfloor$$\n$$ \\lfloor\\frac{a}{b}\\rfloor = \\lceil \\frac{a-b+1}{b}\\rceil$$\n挺容易推的：关于1式，如果 a % b != 0,那么右边就会比左边大1，2式原理相同。\n\n然后开始推（？\n我们令\n$$ F(a,b,c,n)=\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor$$\n1.\n$${a}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n(\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor i)=\\sum_{i=0}^n\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n2.\n$${b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{a i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1) $$\n因此\n$${a}\\geq{c}||{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{(a\\%c) i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n$$\\Rightarrow F(a,b,c,n) = F(a\\%c,b\\%c,c,n)++\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}$$\n之后只要解决$a \\lt c \\&\\& b\\lt c$的情况就好了（？\n\n由\n$$\n\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{ai+b}{c}\\rfloor}1\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n$$\n交换求和顺序（\n$$\n\\Rightarrow \\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n$$\n又有\n$$\n\\lfloor \\frac{a}{b} \\rfloor \\geq c \\Leftrightarrow a\\geq bc\n$$\n$$\n\\lceil \\frac{a}{b} \\rceil \\leq c \\Leftrightarrow a\\leq bc\n$$\n因此\n$$\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[jc\\leq {ai+b}]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[\\lceil \\frac{jc-b}{a} \\rceil \\leq i]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lceil \\frac{jc-b}{a} \\rceil]\n$$\n$$\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lfloor \\frac{jc-b+a-1}{a} \\rfloor]\n$$\n$$\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[\\lfloor \\frac{jc-b+a-1}{a} \\rfloor-1]\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=0}^{\\lfloor \\frac{an+b}{c}\\rfloor-1}[\\lfloor \\frac{(j+1)c-b-1}{a} \\rfloor]\n$$\n因此我们有$a,b\\lt c$时\n$$\nF(a,b,c,n)=n\\lfloor \\frac{an+b}{c}\\rfloor-F(c,-1-b+c,a,\\lfloor \\frac{an+b}{c}\\rfloor-1)\n$$\n然后就 可以递归了 终止条件a=0\n\n以下代码\n\n```c++\n  ll exgcd(ll a, ll b, ll c, ll n){\n        if(a==0) return (n+1)*(b/c);\n        if(a>=c||b>=c) return exgcd(a%c, b%c, c, n) + floor(a/c)*n*(n+1)/2 + floor(b/c)*(n+1);\n        ll temp = (a*n+b)/c;\n        return n*temp - exgcd(c, c-b-1, a, temp-1);\n  }\n```\n\n","slug":"01或许是算法/类&拓展欧几里得","published":1,"updated":"2021-11-01T16:34:16.267Z","_id":"clobly6d1000kzowbgu534vbb","comments":1,"layout":"post","photos":[],"link":"","content":"<h5 id=\"exgcd\"><a class=\"markdownIt-Anchor\" href=\"#exgcd\"></a> EXGCD</h5>\n<p>用于解形如ax+by=gcd（a，b）方程的通解</p>\n<span id=\"more\"></span>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exgcd</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;x,<span class=\"keyword\">int</span> &amp;y,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>;</span><br><span class=\"line\">        y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">exgcd</span>(x,y,b,a%b);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=t-a/b*y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以解出ax+by=c  gcd（a，b）|c的解</p>\n<p>上方参数还是gcd（a，b） 解出后x2=x*c/gcd（a，b） \ty2=y*c/gcd（a，b）</p>\n<p>通解为：</p>\n<p>{(x, y) | x = x2 + k * b / gcd(a, b)， y = y2 - k * a / gcd(a, b), k ∈ z}</p>\n<p>特别的 gcd（a，b）等于1时</p>\n<p>相当于求ax=1（modb） 为a在b下的逆元（不用b是质数） 解出x后用 x=（x%b+b）%b求出在0-b范围内的x即为逆元</p>\n<h5 id=\"类欧几里得\"><a class=\"markdownIt-Anchor\" href=\"#类欧几里得\"></a> 类欧几里得</h5>\n<p>当我们要计算形如</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">        \\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<p>且a，b&gt;=0,c&gt;0时<br />\n可以使用类欧算法。</p>\n<p>首先有以下公式</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌈</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>=</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>−</mo><mn>1</mn></mrow><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">\\lceil \\frac{a}{b}\\rceil = \\lfloor \\frac{a+b-1}{b}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>+</mo><mn>1</mn></mrow><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor\\frac{a}{b}\\rfloor = \\lceil \\frac{a-b+1}{b}\\rceil\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span></span></span></span></span></p>\n<p>挺容易推的：关于1式，如果 a % b != 0,那么右边就会比左边大1，2式原理相同。</p>\n<p>然后开始推（？<br />\n我们令</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">F(a,b,c,n)=\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<ol>\n<li></li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo>×</mo><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo>×</mo><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{a}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n(\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor i)=\\sum_{i=0}^n\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>b</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{a i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1) \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>因此</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≥</mo><mi>c</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>b</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo stretchy=\"false\">)</mo><mi>i</mi><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{a}\\geq{c}||{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{(a\\%c) i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⇒</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo separator=\"true\">,</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow F(a,b,c,n) = F(a\\%c,b\\%c,c,n)++\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord\">+</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>之后只要解决<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>&lt;</mo><mi>c</mi><mi mathvariant=\"normal\">&amp;</mi><mi mathvariant=\"normal\">&amp;</mi><mi>b</mi><mo>&lt;</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a \\lt c \\&amp;\\&amp; b\\lt c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord\">&amp;</span><span class=\"mord\">&amp;</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span></span></span></span>的情况就好了（？</p>\n<p>由</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mn>1</mn><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mrow><mi>j</mi><mo>≤</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{ai+b}{c}\\rfloor}1\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>交换求和顺序（</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mrow><mi>j</mi><mo>≤</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow \\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>又有</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>≥</mo><mi>c</mi><mo>⇔</mo><mi>a</mi><mo>≥</mo><mi>b</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">\\lfloor \\frac{a}{b} \\rfloor \\geq c \\Leftrightarrow a\\geq bc\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">c</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌈</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>≤</mo><mi>c</mi><mo>⇔</mo><mi>a</mi><mo>≤</mo><mi>b</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">\\lceil \\frac{a}{b} \\rceil \\leq c \\Leftrightarrow a\\leq bc\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">c</span></span></span></span></span></p>\n<p>因此</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mi>j</mi><mi>c</mi><mo>≤</mo><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>≤</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[jc\\leq {ai+b}]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[\\lceil \\frac{jc-b}{a} \\rceil \\leq i]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lceil \\frac{jc-b}{a} \\rceil]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi><mo>+</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lfloor \\frac{jc-b+a-1}{a} \\rfloor]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi><mo>+</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>c</mi><mo>−</mo><mi>b</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[\\lfloor \\frac{jc-b+a-1}{a} \\rfloor-1]\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=0}^{\\lfloor \\frac{an+b}{c}\\rfloor-1}[\\lfloor \\frac{(j+1)c-b-1}{a} \\rfloor]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>因此我们有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>&lt;</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a,b\\lt c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span></span></span></span>时</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo>−</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>a</mi><mo separator=\"true\">,</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(a,b,c,n)=n\\lfloor \\frac{an+b}{c}\\rfloor-F(c,-1-b+c,a,\\lfloor \\frac{an+b}{c}\\rfloor-1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>然后就 可以递归了 终止条件a=0</p>\n<p>以下代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a, ll b, ll c, ll n)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> (n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c) <span class=\"keyword\">return</span> <span class=\"built_in\">exgcd</span>(a%c, b%c, c, n) + <span class=\"built_in\">floor</span>(a/c)*n*(n+<span class=\"number\">1</span>)/<span class=\"number\">2</span> + <span class=\"built_in\">floor</span>(b/c)*(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">      ll temp = (a*n+b)/c;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> n*temp - <span class=\"built_in\">exgcd</span>(c, c-b<span class=\"number\">-1</span>, a, temp<span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h5 id=\"exgcd\"><a class=\"markdownIt-Anchor\" href=\"#exgcd\"></a> EXGCD</h5>\n<p>用于解形如ax+by=gcd（a，b）方程的通解</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exgcd</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;x,<span class=\"keyword\">int</span> &amp;y,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>;</span><br><span class=\"line\">        y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">exgcd</span>(x,y,b,a%b);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t=x;</span><br><span class=\"line\">    x=y;</span><br><span class=\"line\">    y=t-a/b*y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以解出ax+by=c  gcd（a，b）|c的解</p>\n<p>上方参数还是gcd（a，b） 解出后x2=x*c/gcd（a，b） \ty2=y*c/gcd（a，b）</p>\n<p>通解为：</p>\n<p>{(x, y) | x = x2 + k * b / gcd(a, b)， y = y2 - k * a / gcd(a, b), k ∈ z}</p>\n<p>特别的 gcd（a，b）等于1时</p>\n<p>相当于求ax=1（modb） 为a在b下的逆元（不用b是质数） 解出x后用 x=（x%b+b）%b求出在0-b范围内的x即为逆元</p>\n<h5 id=\"类欧几里得\"><a class=\"markdownIt-Anchor\" href=\"#类欧几里得\"></a> 类欧几里得</h5>\n<p>当我们要计算形如</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">        \\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<p>且a，b&gt;=0,c&gt;0时<br />\n可以使用类欧算法。</p>\n<p>首先有以下公式</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌈</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>=</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>−</mo><mn>1</mn></mrow><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">\\lceil \\frac{a}{b}\\rceil = \\lfloor \\frac{a+b-1}{b}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>+</mo><mn>1</mn></mrow><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor\\frac{a}{b}\\rfloor = \\lceil \\frac{a-b+1}{b}\\rceil\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span></span></span></span></span></p>\n<p>挺容易推的：关于1式，如果 a % b != 0,那么右边就会比左边大1，2式原理相同。</p>\n<p>然后开始推（？<br />\n我们令</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">F(a,b,c,n)=\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span></span></p>\n<ol>\n<li></li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo>×</mo><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo>×</mo><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{a}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n(\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor i)=\\sum_{i=0}^n\\lfloor \\frac{a\\%c\\times i+b}{c}\\rfloor+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>b</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{a i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1) \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>因此</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≥</mo><mi>c</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>b</mi><mo>≥</mo><mi>c</mi><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo stretchy=\"false\">)</mo><mi>i</mi><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{a}\\geq{c}||{b}\\geq{c}\\Rightarrow\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor=\\sum_{i=0}^n\\lfloor \\frac{(a\\%c) i+b\\% c}{c}\\rfloor+\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mord\">∣</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⇒</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo separator=\"true\">,</mo><mi>b</mi><mi mathvariant=\"normal\">%</mi><mi>c</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow F(a,b,c,n) = F(a\\%c,b\\%c,c,n)++\\lfloor\\frac{b}{c}\\rfloor(n+1)+\\lfloor\\frac{a}{c}\\rfloor\\frac{n\\times (n+1)}{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord\">%</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord\">+</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>之后只要解决<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>&lt;</mo><mi>c</mi><mi mathvariant=\"normal\">&amp;</mi><mi mathvariant=\"normal\">&amp;</mi><mi>b</mi><mo>&lt;</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a \\lt c \\&amp;\\&amp; b\\lt c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord\">&amp;</span><span class=\"mord\">&amp;</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span></span></span></span>的情况就好了（？</p>\n<p>由</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mn>1</mn><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mrow><mi>j</mi><mo>≤</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=0}^n\\lfloor \\frac{ai+b}{c}\\rfloor\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{ai+b}{c}\\rfloor}1\n=\\sum_{i=0}^n\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>交换求和顺序（</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>⇒</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mrow><mi>j</mi><mo>≤</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow \\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[{j\\leq \\lfloor \\frac{ai+b}{c}\\rfloor}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>又有</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>≥</mo><mi>c</mi><mo>⇔</mo><mi>a</mi><mo>≥</mo><mi>b</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">\\lfloor \\frac{a}{b} \\rfloor \\geq c \\Leftrightarrow a\\geq bc\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">c</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">⌈</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>≤</mo><mi>c</mi><mo>⇔</mo><mi>a</mi><mo>≤</mo><mi>b</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">\\lceil \\frac{a}{b} \\rceil \\leq c \\Leftrightarrow a\\leq bc\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">c</span></span></span></span></span></p>\n<p>因此</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mi>j</mi><mi>c</mi><mo>≤</mo><mrow><mi>a</mi><mi>i</mi><mo>+</mo><mi>b</mi></mrow><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo>≤</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">⌈</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌉</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[jc\\leq {ai+b}]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}\\sum_{i=0}^n[\\lceil \\frac{jc-b}{a} \\rceil \\leq i]\n=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lceil \\frac{jc-b}{a} \\rceil]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi><mo>+</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[n+1-\\lfloor \\frac{jc-b+a-1}{a} \\rfloor]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>j</mi><mi>c</mi><mo>−</mo><mi>b</mi><mo>+</mo><mi>a</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>c</mi><mo>−</mo><mi>b</mi><mo>−</mo><mn>1</mn></mrow><mi>a</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=1}^{\\lfloor \\frac{an+b}{c}\\rfloor}[\\lfloor \\frac{jc-b+a-1}{a} \\rfloor-1]\n=n\\lfloor \\frac{an+b}{c}\\rfloor-\\sum_{j=0}^{\\lfloor \\frac{an+b}{c}\\rfloor-1}[\\lfloor \\frac{(j+1)c-b-1}{a} \\rfloor]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.5316020000000004em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1178250000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.451805em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span><span class=\"mclose mtight\">⌋</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>因此我们有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>&lt;</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a,b\\lt c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span></span></span></span>时</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>n</mi><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo>−</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>a</mi><mo separator=\"true\">,</mo><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi></mrow><mi>c</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(a,b,c,n)=n\\lfloor \\frac{an+b}{c}\\rfloor-F(c,-1-b+c,a,\\lfloor \\frac{an+b}{c}\\rfloor-1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>然后就 可以递归了 终止条件a=0</p>\n<p>以下代码</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a, ll b, ll c, ll n)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> (n+<span class=\"number\">1</span>)*(b/c);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a&gt;=c||b&gt;=c) <span class=\"keyword\">return</span> <span class=\"built_in\">exgcd</span>(a%c, b%c, c, n) + <span class=\"built_in\">floor</span>(a/c)*n*(n+<span class=\"number\">1</span>)/<span class=\"number\">2</span> + <span class=\"built_in\">floor</span>(b/c)*(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">      ll temp = (a*n+b)/c;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> n*temp - <span class=\"built_in\">exgcd</span>(c, c-b<span class=\"number\">-1</span>, a, temp<span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Goodbye 2021","date":"2022-01-06T14:33:22.000Z","_content":"\n> 2021年就这么结束了，不管是失败还是悲伤还是焦虑，亦或者是欢乐还是欣喜还是怀念，都已经过去了。\n>\n> 可能会写点文字来怀念？\n>\n> 不过现在应该做的事情只有一件\n\n# 补题。\n\n<!--more-->\n\n# D. Keep the Average High\n\n将式子变形一下\n\n$a_l + a_{l+1} + \\ldots + a_r \\geq x \\cdot (r - l + 1) \\Rightarrow (a_l - x) + (a_{l+1} - x) + \\ldots + (a_r - x) \\geq 0$\n\n然后就是挑一些最多的数让他满足所有连续子段和非负\n\n然后就有一个很`nb`的结论\n\n> 要满足上边的条件\n>\n> 只需要所有长度为2和3的子段满足条件即可\n\n可以这样考虑：\n\n所有长度大于2或者3的子段都可以拆成一些2和3不相交子段的和\n\n稍微想一下奇偶应该就可以懂了\n\n然后我们是不是就可以用用DP了呢（\n\n```c++\ndp[N][2][2];//dp数组，第一位表示到第i个能选的最大数量，第二位表示前一个有没有选，第三位表示当前位有没有选\n```\n\n转移就直接看代码吧 巨巧妙\n\n反正我这个智力是不太能想到的（\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\ntypedef long long ll;\nusing namespace std;\nll T;\nll n;\nll x;\nll dat[50000 + 5];\nll dp[50000 + 5][2][2];\nint main() {\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> n;\n\t\tfor (int i = 0; i < n; i++)cin >> dat[i];\n\t\tcin >> x;\n\t\tfor (int i = 0; i < n; i++)dat[i] -= x;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tdp[0][0][1] = 1;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tdp[i][0][0] = max(dp[i - 1][0][0], dp[i - 1][1][0]);\n\t\t\tdp[i][0][1]=1LL+ max(dp[i - 1][0][0], dp[i - 1][1][0]);\n\t\t\tdp[i][1][0] = max(dp[i - 1][0][1], dp[i - 1][1][1]);\n\t\t\tif (dat[i - 1] + dat[i] >= 0) {\n\t\t\t\tdp[i][1][1] = 1LL + dp[i-1][0][1];\n\t\t\t\tif (i > 1 && dat[i - 2] + dat[i - 1] + dat[i] >= 0) {\n\t\t\t\t\tdp[i][1][1] = max(dp[i][1][1], 1 + dp[i - 1][1][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tll ans = max(dp[n - 1][0][0], max(dp[n - 1][0][1], max(dp[n - 1][1][0], dp[n - 1][1][1])));\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n}\n```\n\n\n\n\n\n# E. Lexicographically Small Enough\n\n> 这B题说简单不简单，说难不难\n>\n> 但是我看题解都想了好久\n>\n> 我是废物！\n\n给你个字符串s和字符串t\n\n可以交换相邻的s字符，问最少次数令s字典序比t小\n\n其实他的本质就是让s按照某种意义重新排序，然后问冒泡排序的交换次数呗\n\n用树状数组维护逆序对\n\n然后对于每个t[i]我们有两种思路\n\n- 一种是直接从i后边拉一个比t[i]小的字符直接结束\n\n- 一种是拉一个最近的和t[i]一样的字符\n\n维护一个cur是到当前令其前缀相同的花费\n\n然后我从后边拉字符他的花费其实就是逆序对\n\n我们就可以跑贪心了 也许\n\n> 这玩意数据太大了 ans设成1e9+7居然都会挂掉\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\ntypedef long long ll;\nusing namespace std;\nll T;\nll n;\nll x;\nvector<ll>pos[26];\nll sum[100000 + 5];\nchar s[100000 + 5], t[100000 + 5];\nll lob(ll i) {\n\treturn i & -i;\n}\nvoid init() {\n\tfor (int i = 0; i <= n; i++)sum[i] = 0;\n}\nvoid add(ll i) {\n\tfor (; i < n; i = i | (i + 1)) {\n\t\tsum[i] += 1;\n\t}\n}\nll q(ll i) {\n\tll res = 0;\n\tfor (;i>=0; i=(i & (i + 1)) - 1)\n\t\tres += sum[i];\n\treturn res;\n}\nint main() {\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> n;\n\t\tinit();\n\t\tcin >> s>>t;\n\t\tfor (int i = 0; i < 26; i++)pos[i].clear();\n\t\tfor (int i = 0; i <n; i++)pos[s[i] - 'a'].push_back(i);\n\t\tfor (int i = 0; i < 26; i++)reverse(pos[i].begin(),pos[i].end());\n\t\tll ans = 1e11 + 7;\n\t\tll cur = 0;\n\t\tfor (int i = 0; i <n; i++) {\n\t\t\tll c = t[i] - 'a';\n\t\t\tll m = 1e11+7;\n\t\t\tfor (int j = 0; j < c; j++) {\n\t\t\t\tif (pos[j].empty())continue;\n\t\t\t\tm = min(m, pos[j].back());\n\t\t\t}\n\t\t\tif (m <n)\n\t\t\t\tans = min(ans, cur + m - q(m));\n\t\t\tif (pos[c].empty())break;\n\t\t\tm = pos[c].back();\n\t\t\tcur += m - q(m);\n\t\t\tpos[c].pop_back();\n\t\t\tadd(m);\n\t\t}\n\t\tif (ans == 1e11 + 7)printf(\"-1\\n\");\n\t\telse printf(\"%lld\\n\", ans);\n\t}\n}\n```\n\n","source":"_posts/03久远时光以前的补题记录/2021-01-6.md","raw":"---\ntitle: Goodbye 2021 \ndate: 2022-01-06 22:33:22\ntags: \ncategory: 补题\n---\n\n> 2021年就这么结束了，不管是失败还是悲伤还是焦虑，亦或者是欢乐还是欣喜还是怀念，都已经过去了。\n>\n> 可能会写点文字来怀念？\n>\n> 不过现在应该做的事情只有一件\n\n# 补题。\n\n<!--more-->\n\n# D. Keep the Average High\n\n将式子变形一下\n\n$a_l + a_{l+1} + \\ldots + a_r \\geq x \\cdot (r - l + 1) \\Rightarrow (a_l - x) + (a_{l+1} - x) + \\ldots + (a_r - x) \\geq 0$\n\n然后就是挑一些最多的数让他满足所有连续子段和非负\n\n然后就有一个很`nb`的结论\n\n> 要满足上边的条件\n>\n> 只需要所有长度为2和3的子段满足条件即可\n\n可以这样考虑：\n\n所有长度大于2或者3的子段都可以拆成一些2和3不相交子段的和\n\n稍微想一下奇偶应该就可以懂了\n\n然后我们是不是就可以用用DP了呢（\n\n```c++\ndp[N][2][2];//dp数组，第一位表示到第i个能选的最大数量，第二位表示前一个有没有选，第三位表示当前位有没有选\n```\n\n转移就直接看代码吧 巨巧妙\n\n反正我这个智力是不太能想到的（\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\ntypedef long long ll;\nusing namespace std;\nll T;\nll n;\nll x;\nll dat[50000 + 5];\nll dp[50000 + 5][2][2];\nint main() {\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> n;\n\t\tfor (int i = 0; i < n; i++)cin >> dat[i];\n\t\tcin >> x;\n\t\tfor (int i = 0; i < n; i++)dat[i] -= x;\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tdp[0][0][1] = 1;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tdp[i][0][0] = max(dp[i - 1][0][0], dp[i - 1][1][0]);\n\t\t\tdp[i][0][1]=1LL+ max(dp[i - 1][0][0], dp[i - 1][1][0]);\n\t\t\tdp[i][1][0] = max(dp[i - 1][0][1], dp[i - 1][1][1]);\n\t\t\tif (dat[i - 1] + dat[i] >= 0) {\n\t\t\t\tdp[i][1][1] = 1LL + dp[i-1][0][1];\n\t\t\t\tif (i > 1 && dat[i - 2] + dat[i - 1] + dat[i] >= 0) {\n\t\t\t\t\tdp[i][1][1] = max(dp[i][1][1], 1 + dp[i - 1][1][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tll ans = max(dp[n - 1][0][0], max(dp[n - 1][0][1], max(dp[n - 1][1][0], dp[n - 1][1][1])));\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n}\n```\n\n\n\n\n\n# E. Lexicographically Small Enough\n\n> 这B题说简单不简单，说难不难\n>\n> 但是我看题解都想了好久\n>\n> 我是废物！\n\n给你个字符串s和字符串t\n\n可以交换相邻的s字符，问最少次数令s字典序比t小\n\n其实他的本质就是让s按照某种意义重新排序，然后问冒泡排序的交换次数呗\n\n用树状数组维护逆序对\n\n然后对于每个t[i]我们有两种思路\n\n- 一种是直接从i后边拉一个比t[i]小的字符直接结束\n\n- 一种是拉一个最近的和t[i]一样的字符\n\n维护一个cur是到当前令其前缀相同的花费\n\n然后我从后边拉字符他的花费其实就是逆序对\n\n我们就可以跑贪心了 也许\n\n> 这玩意数据太大了 ans设成1e9+7居然都会挂掉\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\ntypedef long long ll;\nusing namespace std;\nll T;\nll n;\nll x;\nvector<ll>pos[26];\nll sum[100000 + 5];\nchar s[100000 + 5], t[100000 + 5];\nll lob(ll i) {\n\treturn i & -i;\n}\nvoid init() {\n\tfor (int i = 0; i <= n; i++)sum[i] = 0;\n}\nvoid add(ll i) {\n\tfor (; i < n; i = i | (i + 1)) {\n\t\tsum[i] += 1;\n\t}\n}\nll q(ll i) {\n\tll res = 0;\n\tfor (;i>=0; i=(i & (i + 1)) - 1)\n\t\tres += sum[i];\n\treturn res;\n}\nint main() {\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> n;\n\t\tinit();\n\t\tcin >> s>>t;\n\t\tfor (int i = 0; i < 26; i++)pos[i].clear();\n\t\tfor (int i = 0; i <n; i++)pos[s[i] - 'a'].push_back(i);\n\t\tfor (int i = 0; i < 26; i++)reverse(pos[i].begin(),pos[i].end());\n\t\tll ans = 1e11 + 7;\n\t\tll cur = 0;\n\t\tfor (int i = 0; i <n; i++) {\n\t\t\tll c = t[i] - 'a';\n\t\t\tll m = 1e11+7;\n\t\t\tfor (int j = 0; j < c; j++) {\n\t\t\t\tif (pos[j].empty())continue;\n\t\t\t\tm = min(m, pos[j].back());\n\t\t\t}\n\t\t\tif (m <n)\n\t\t\t\tans = min(ans, cur + m - q(m));\n\t\t\tif (pos[c].empty())break;\n\t\t\tm = pos[c].back();\n\t\t\tcur += m - q(m);\n\t\t\tpos[c].pop_back();\n\t\t\tadd(m);\n\t\t}\n\t\tif (ans == 1e11 + 7)printf(\"-1\\n\");\n\t\telse printf(\"%lld\\n\", ans);\n\t}\n}\n```\n\n","slug":"03久远时光以前的补题记录/2021-01-6","published":1,"updated":"2022-01-06T17:13:10.130Z","_id":"clobly6d2000lzowb5n8n3cv8","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>2021年就这么结束了，不管是失败还是悲伤还是焦虑，亦或者是欢乐还是欣喜还是怀念，都已经过去了。</p>\n<p>可能会写点文字来怀念？</p>\n<p>不过现在应该做的事情只有一件</p>\n</blockquote>\n<h1 id=\"补题\"><a class=\"markdownIt-Anchor\" href=\"#补题\"></a> 补题。</h1>\n<span id=\"more\"></span>\n<h1 id=\"d-keep-the-average-high\"><a class=\"markdownIt-Anchor\" href=\"#d-keep-the-average-high\"></a> D. Keep the Average High</h1>\n<p>将式子变形一下</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>a</mi><mi>l</mi></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>a</mi><mi>r</mi></msub><mo>≥</mo><mi>x</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>⇒</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>l</mi></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>r</mi></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a_l + a_{l+1} + \\ldots + a_r \\geq x \\cdot (r - l + 1) \\Rightarrow (a_l - x) + (a_{l+1} - x) + \\ldots + (a_r - x) \\geq 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.791661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p>然后就是挑一些最多的数让他满足所有连续子段和非负</p>\n<p>然后就有一个很<code>nb</code>的结论</p>\n<blockquote>\n<p>要满足上边的条件</p>\n<p>只需要所有长度为2和3的子段满足条件即可</p>\n</blockquote>\n<p>可以这样考虑：</p>\n<p>所有长度大于2或者3的子段都可以拆成一些2和3不相交子段的和</p>\n<p>稍微想一下奇偶应该就可以懂了</p>\n<p>然后我们是不是就可以用用DP了呢（</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[N][<span class=\"number\">2</span>][<span class=\"number\">2</span>];<span class=\"comment\">//dp数组，第一位表示到第i个能选的最大数量，第二位表示前一个有没有选，第三位表示当前位有没有选</span></span><br></pre></td></tr></table></figure>\n<p>转移就直接看代码吧 巨巧妙</p>\n<p>反正我这个智力是不太能想到的（</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll x;</span><br><span class=\"line\">ll dat[<span class=\"number\">50000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll dp[<span class=\"number\">50000</span> + <span class=\"number\">5</span>][<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)cin &gt;&gt; dat[i];</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)dat[i] -= x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(dp));</span><br><span class=\"line\">\t\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">0</span>][<span class=\"number\">1</span>]=<span class=\"number\">1LL</span>+ <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (dat[i - <span class=\"number\">1</span>] + dat[i] &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">1LL</span> + dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span> &amp;&amp; dat[i - <span class=\"number\">2</span>] + dat[i - <span class=\"number\">1</span>] + dat[i] &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"built_in\">max</span>(dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>], <span class=\"number\">1</span> + dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tll ans = <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>], <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[n - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>])));</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"e-lexicographically-small-enough\"><a class=\"markdownIt-Anchor\" href=\"#e-lexicographically-small-enough\"></a> E. Lexicographically Small Enough</h1>\n<blockquote>\n<p>这B题说简单不简单，说难不难</p>\n<p>但是我看题解都想了好久</p>\n<p>我是废物！</p>\n</blockquote>\n<p>给你个字符串s和字符串t</p>\n<p>可以交换相邻的s字符，问最少次数令s字典序比t小</p>\n<p>其实他的本质就是让s按照某种意义重新排序，然后问冒泡排序的交换次数呗</p>\n<p>用树状数组维护逆序对</p>\n<p>然后对于每个t[i]我们有两种思路</p>\n<ul>\n<li>\n<p>一种是直接从i后边拉一个比t[i]小的字符直接结束</p>\n</li>\n<li>\n<p>一种是拉一个最近的和t[i]一样的字符</p>\n</li>\n</ul>\n<p>维护一个cur是到当前令其前缀相同的花费</p>\n<p>然后我从后边拉字符他的花费其实就是逆序对</p>\n<p>我们就可以跑贪心了 也许</p>\n<blockquote>\n<p>这玩意数据太大了 ans设成1e9+7居然都会挂掉</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll x;</span><br><span class=\"line\">vector&lt;ll&gt;pos[<span class=\"number\">26</span>];</span><br><span class=\"line\">ll sum[<span class=\"number\">100000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[<span class=\"number\">100000</span> + <span class=\"number\">5</span>], t[<span class=\"number\">100000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">lob</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> i &amp; -i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++)sum[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; i &lt; n; i = i | (i + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">\t\tsum[i] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">q</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\tll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (;i&gt;=<span class=\"number\">0</span>; i=(i &amp; (i + <span class=\"number\">1</span>)) - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\tres += sum[i];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; n;</span><br><span class=\"line\">\t\t<span class=\"built_in\">init</span>();</span><br><span class=\"line\">\t\tcin &gt;&gt; s&gt;&gt;t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)pos[i].<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;n; i++)pos[s[i] - <span class=\"string\">&#x27;a&#x27;</span>].<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)<span class=\"built_in\">reverse</span>(pos[i].<span class=\"built_in\">begin</span>(),pos[i].<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t\tll ans = <span class=\"number\">1e11</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">\t\tll cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;n; i++) &#123;</span><br><span class=\"line\">\t\t\tll c = t[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t\tll m = <span class=\"number\">1e11</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; c; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[j].<span class=\"built_in\">empty</span>())<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\tm = <span class=\"built_in\">min</span>(m, pos[j].<span class=\"built_in\">back</span>());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &lt;n)</span><br><span class=\"line\">\t\t\t\tans = <span class=\"built_in\">min</span>(ans, cur + m - <span class=\"built_in\">q</span>(m));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[c].<span class=\"built_in\">empty</span>())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\tm = pos[c].<span class=\"built_in\">back</span>();</span><br><span class=\"line\">\t\t\tcur += m - <span class=\"built_in\">q</span>(m);</span><br><span class=\"line\">\t\t\tpos[c].<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">add</span>(m);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans == <span class=\"number\">1e11</span> + <span class=\"number\">7</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>2021年就这么结束了，不管是失败还是悲伤还是焦虑，亦或者是欢乐还是欣喜还是怀念，都已经过去了。</p>\n<p>可能会写点文字来怀念？</p>\n<p>不过现在应该做的事情只有一件</p>\n</blockquote>\n<h1 id=\"补题\"><a class=\"markdownIt-Anchor\" href=\"#补题\"></a> 补题。</h1>","more":"<h1 id=\"d-keep-the-average-high\"><a class=\"markdownIt-Anchor\" href=\"#d-keep-the-average-high\"></a> D. Keep the Average High</h1>\n<p>将式子变形一下</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>a</mi><mi>l</mi></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>a</mi><mi>r</mi></msub><mo>≥</mo><mi>x</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>⇒</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>l</mi></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>r</mi></msub><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a_l + a_{l+1} + \\ldots + a_r \\geq x \\cdot (r - l + 1) \\Rightarrow (a_l - x) + (a_{l+1} - x) + \\ldots + (a_r - x) \\geq 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.791661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p>然后就是挑一些最多的数让他满足所有连续子段和非负</p>\n<p>然后就有一个很<code>nb</code>的结论</p>\n<blockquote>\n<p>要满足上边的条件</p>\n<p>只需要所有长度为2和3的子段满足条件即可</p>\n</blockquote>\n<p>可以这样考虑：</p>\n<p>所有长度大于2或者3的子段都可以拆成一些2和3不相交子段的和</p>\n<p>稍微想一下奇偶应该就可以懂了</p>\n<p>然后我们是不是就可以用用DP了呢（</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[N][<span class=\"number\">2</span>][<span class=\"number\">2</span>];<span class=\"comment\">//dp数组，第一位表示到第i个能选的最大数量，第二位表示前一个有没有选，第三位表示当前位有没有选</span></span><br></pre></td></tr></table></figure>\n<p>转移就直接看代码吧 巨巧妙</p>\n<p>反正我这个智力是不太能想到的（</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll x;</span><br><span class=\"line\">ll dat[<span class=\"number\">50000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll dp[<span class=\"number\">50000</span> + <span class=\"number\">5</span>][<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)cin &gt;&gt; dat[i];</span><br><span class=\"line\">\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)dat[i] -= x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(dp));</span><br><span class=\"line\">\t\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">0</span>][<span class=\"number\">1</span>]=<span class=\"number\">1LL</span>+ <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"built_in\">max</span>(dp[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>], dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (dat[i - <span class=\"number\">1</span>] + dat[i] &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">1LL</span> + dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span> &amp;&amp; dat[i - <span class=\"number\">2</span>] + dat[i - <span class=\"number\">1</span>] + dat[i] &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tdp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"built_in\">max</span>(dp[i][<span class=\"number\">1</span>][<span class=\"number\">1</span>], <span class=\"number\">1</span> + dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tll ans = <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>], <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>], <span class=\"built_in\">max</span>(dp[n - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>], dp[n - <span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>])));</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"e-lexicographically-small-enough\"><a class=\"markdownIt-Anchor\" href=\"#e-lexicographically-small-enough\"></a> E. Lexicographically Small Enough</h1>\n<blockquote>\n<p>这B题说简单不简单，说难不难</p>\n<p>但是我看题解都想了好久</p>\n<p>我是废物！</p>\n</blockquote>\n<p>给你个字符串s和字符串t</p>\n<p>可以交换相邻的s字符，问最少次数令s字典序比t小</p>\n<p>其实他的本质就是让s按照某种意义重新排序，然后问冒泡排序的交换次数呗</p>\n<p>用树状数组维护逆序对</p>\n<p>然后对于每个t[i]我们有两种思路</p>\n<ul>\n<li>\n<p>一种是直接从i后边拉一个比t[i]小的字符直接结束</p>\n</li>\n<li>\n<p>一种是拉一个最近的和t[i]一样的字符</p>\n</li>\n</ul>\n<p>维护一个cur是到当前令其前缀相同的花费</p>\n<p>然后我从后边拉字符他的花费其实就是逆序对</p>\n<p>我们就可以跑贪心了 也许</p>\n<blockquote>\n<p>这玩意数据太大了 ans设成1e9+7居然都会挂掉</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll x;</span><br><span class=\"line\">vector&lt;ll&gt;pos[<span class=\"number\">26</span>];</span><br><span class=\"line\">ll sum[<span class=\"number\">100000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[<span class=\"number\">100000</span> + <span class=\"number\">5</span>], t[<span class=\"number\">100000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">lob</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> i &amp; -i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++)sum[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; i &lt; n; i = i | (i + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">\t\tsum[i] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">q</span><span class=\"params\">(ll i)</span> </span>&#123;</span><br><span class=\"line\">\tll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (;i&gt;=<span class=\"number\">0</span>; i=(i &amp; (i + <span class=\"number\">1</span>)) - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\tres += sum[i];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; n;</span><br><span class=\"line\">\t\t<span class=\"built_in\">init</span>();</span><br><span class=\"line\">\t\tcin &gt;&gt; s&gt;&gt;t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)pos[i].<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;n; i++)pos[s[i] - <span class=\"string\">&#x27;a&#x27;</span>].<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)<span class=\"built_in\">reverse</span>(pos[i].<span class=\"built_in\">begin</span>(),pos[i].<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t\tll ans = <span class=\"number\">1e11</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">\t\tll cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;n; i++) &#123;</span><br><span class=\"line\">\t\t\tll c = t[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t\tll m = <span class=\"number\">1e11</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; c; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[j].<span class=\"built_in\">empty</span>())<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\tm = <span class=\"built_in\">min</span>(m, pos[j].<span class=\"built_in\">back</span>());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &lt;n)</span><br><span class=\"line\">\t\t\t\tans = <span class=\"built_in\">min</span>(ans, cur + m - <span class=\"built_in\">q</span>(m));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[c].<span class=\"built_in\">empty</span>())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\tm = pos[c].<span class=\"built_in\">back</span>();</span><br><span class=\"line\">\t\t\tcur += m - <span class=\"built_in\">q</span>(m);</span><br><span class=\"line\">\t\t\tpos[c].<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">add</span>(m);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans == <span class=\"number\">1e11</span> + <span class=\"number\">7</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Gym103389F 地图压缩","date":"2021-11-04T16:45:04.000Z","_content":"\n> 训练的时候一看题目长的一批就根本没看，现在看看发现还是可做的啊。。\n\n# 题目简述\n\n给定一个n\\*n的矩阵，q次询问，每次给定一个矩形范围，问一个最小矩阵的面积，可以通过此矩阵循环覆盖给定的范围，多出的部分可以不计\n**例如**:ababa可以通过ab循环构成\n\n<!--more-->\n\n---\n\n# 思路\n\n如果一个子矩阵满足条件，把这玩意纵向扩展后肯定也可以满足条件，那么我们求可以横向循环满足的循环节和纵向的循环节长度，乘一下就行。\n用hash把这玩意压成一维，在找循环节就行了。\n\n> 这个就是找最长公共前后缀长度d，那么n-d就是循环节长度。\n---\n# Code\n\n```c++\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\n#include<vector>\n#include<math.h>\n#include<algorithm>\n#include <stdio.h>\n#include <queue>\n#include<bitset>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst ll maxn = 5e5+ 5;\nconst ll mod = 1e9 + 7;\null p1 = 131;\null p2 = 20111203;\nchar dat[3000][3000];\null h1[3000][3000], h2[3000][3000],pp1[3000],pp2[3000];\nll q;\null r[3000], c[3000];\nint main() {\n\tll n,q;\n\tcin >> n >> q;\n\tfor (int i = 1; i <=n; i++)cin >> dat[i]+1;\n\tpp1[0] = pp2[0] = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tpp1[i] = pp1[i - 1] * p1;\n\t\tpp2[i] = pp2[i - 1] * p2;\n\t}\n\tfor (int i = 1; i <=n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\th1[i][j] = h1[i - 1][j] * p1 + dat[i][j] - 'a';\n\t\t\th2[i][j] = h2[i][j-1] * p1 + dat[i][j] - 'a';\n\t\t}\n\t}\n\t//cin >> q;\n\twhile (q--) {\n\t\tll x1, x2, y1, y2;\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\tfor (int i = y1; i <= y2; i++)r[i] = h1[x2][i] - h1[x1 - 1][i] * pp1[x2 - x1 + 1];\n\t\tfor (int i = x1; i <= x2; i++)c[i] = h2[i][y2] - h2[i][y1-1] * pp1[y2 - y1 + 1];\n\t\tull s1 = 0, s2 = 0;\n\t\tll ans1 = -1, ans2 = -1;\n\t\tfor (int i = 0; i+y1<y2; i++) {\n\t\t\ts1 = s1 * p2 + r[i+y1];\n\t\t\ts2 = s2 + r[y2 - i]*pp2[i];\n\t\t\tif (s1 == s2)ans1 = i;\n\t\t}\n\t\tans1 = y2 - y1 - ans1;\n\t\ts1 = s2 = 0;\n\t\tfor (int i = 0; i + x1 < x2; i++) {\n\t\t\ts1 = s1 * p2 + c[i + x1];\n\t\t\ts2 = s2 + c[x2 - i] * pp2[i];\n\t\t\tif (s1 == s2)ans2 = i;\n\t\t}\n\t\tans2 = x2 - x1 - ans2;\n\t\tcout << ans2 * ans1 << '\\n';\n\t}\n}\n\n```\n\n\n\n这里考虑一下如果d==n的时候，其实答案是n而不是n-d，把ans预设为-1可以很巧妙的解决。\n\n结果写的时候天天犯病，对题解抄都nm能给抄歪来，hash也迷惑冲突，只能说base不能乱设了呃呃。\n","source":"_posts/03久远时光以前的补题记录/2021-11-5.md","raw":"---\ntitle: Gym103389F 地图压缩 \ndate: 2021-11-05 00:45:04\ntags: 字符串\ncategory: 补题\n---\n\n> 训练的时候一看题目长的一批就根本没看，现在看看发现还是可做的啊。。\n\n# 题目简述\n\n给定一个n\\*n的矩阵，q次询问，每次给定一个矩形范围，问一个最小矩阵的面积，可以通过此矩阵循环覆盖给定的范围，多出的部分可以不计\n**例如**:ababa可以通过ab循环构成\n\n<!--more-->\n\n---\n\n# 思路\n\n如果一个子矩阵满足条件，把这玩意纵向扩展后肯定也可以满足条件，那么我们求可以横向循环满足的循环节和纵向的循环节长度，乘一下就行。\n用hash把这玩意压成一维，在找循环节就行了。\n\n> 这个就是找最长公共前后缀长度d，那么n-d就是循环节长度。\n---\n# Code\n\n```c++\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\n#include<vector>\n#include<math.h>\n#include<algorithm>\n#include <stdio.h>\n#include <queue>\n#include<bitset>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst ll maxn = 5e5+ 5;\nconst ll mod = 1e9 + 7;\null p1 = 131;\null p2 = 20111203;\nchar dat[3000][3000];\null h1[3000][3000], h2[3000][3000],pp1[3000],pp2[3000];\nll q;\null r[3000], c[3000];\nint main() {\n\tll n,q;\n\tcin >> n >> q;\n\tfor (int i = 1; i <=n; i++)cin >> dat[i]+1;\n\tpp1[0] = pp2[0] = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tpp1[i] = pp1[i - 1] * p1;\n\t\tpp2[i] = pp2[i - 1] * p2;\n\t}\n\tfor (int i = 1; i <=n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\th1[i][j] = h1[i - 1][j] * p1 + dat[i][j] - 'a';\n\t\t\th2[i][j] = h2[i][j-1] * p1 + dat[i][j] - 'a';\n\t\t}\n\t}\n\t//cin >> q;\n\twhile (q--) {\n\t\tll x1, x2, y1, y2;\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\tfor (int i = y1; i <= y2; i++)r[i] = h1[x2][i] - h1[x1 - 1][i] * pp1[x2 - x1 + 1];\n\t\tfor (int i = x1; i <= x2; i++)c[i] = h2[i][y2] - h2[i][y1-1] * pp1[y2 - y1 + 1];\n\t\tull s1 = 0, s2 = 0;\n\t\tll ans1 = -1, ans2 = -1;\n\t\tfor (int i = 0; i+y1<y2; i++) {\n\t\t\ts1 = s1 * p2 + r[i+y1];\n\t\t\ts2 = s2 + r[y2 - i]*pp2[i];\n\t\t\tif (s1 == s2)ans1 = i;\n\t\t}\n\t\tans1 = y2 - y1 - ans1;\n\t\ts1 = s2 = 0;\n\t\tfor (int i = 0; i + x1 < x2; i++) {\n\t\t\ts1 = s1 * p2 + c[i + x1];\n\t\t\ts2 = s2 + c[x2 - i] * pp2[i];\n\t\t\tif (s1 == s2)ans2 = i;\n\t\t}\n\t\tans2 = x2 - x1 - ans2;\n\t\tcout << ans2 * ans1 << '\\n';\n\t}\n}\n\n```\n\n\n\n这里考虑一下如果d==n的时候，其实答案是n而不是n-d，把ans预设为-1可以很巧妙的解决。\n\n结果写的时候天天犯病，对题解抄都nm能给抄歪来，hash也迷惑冲突，只能说base不能乱设了呃呃。\n","slug":"03久远时光以前的补题记录/2021-11-5","published":1,"updated":"2021-11-05T02:06:31.797Z","_id":"clobly6d4000pzowb9c6o8ppa","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>训练的时候一看题目长的一批就根本没看，现在看看发现还是可做的啊。。</p>\n</blockquote>\n<h1 id=\"题目简述\"><a class=\"markdownIt-Anchor\" href=\"#题目简述\"></a> 题目简述</h1>\n<p>给定一个n*n的矩阵，q次询问，每次给定一个矩形范围，问一个最小矩阵的面积，可以通过此矩阵循环覆盖给定的范围，多出的部分可以不计<br />\n<strong>例如</strong>:ababa可以通过ab循环构成</p>\n<span id=\"more\"></span>\n<hr />\n<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h1>\n<p>如果一个子矩阵满足条件，把这玩意纵向扩展后肯定也可以满足条件，那么我们求可以横向循环满足的循环节和纵向的循环节长度，乘一下就行。<br />\n用hash把这玩意压成一维，在找循环节就行了。</p>\n<blockquote>\n<p>这个就是找最长公共前后缀长度d，那么n-d就是循环节长度。</p>\n</blockquote>\n<hr />\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> Code</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll maxn = <span class=\"number\">5e5</span>+ <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">ull p1 = <span class=\"number\">131</span>;</span><br><span class=\"line\">ull p2 = <span class=\"number\">20111203</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> dat[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>];</span><br><span class=\"line\">ull h1[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>], h2[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>],pp1[<span class=\"number\">3000</span>],pp2[<span class=\"number\">3000</span>];</span><br><span class=\"line\">ll q;</span><br><span class=\"line\">ull r[<span class=\"number\">3000</span>], c[<span class=\"number\">3000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tll n,q;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++)cin &gt;&gt; dat[i]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tpp1[<span class=\"number\">0</span>] = pp2[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\tpp1[i] = pp1[i - <span class=\"number\">1</span>] * p1;</span><br><span class=\"line\">\t\tpp2[i] = pp2[i - <span class=\"number\">1</span>] * p2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\th1[i][j] = h1[i - <span class=\"number\">1</span>][j] * p1 + dat[i][j] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t\th2[i][j] = h2[i][j<span class=\"number\">-1</span>] * p1 + dat[i][j] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//cin &gt;&gt; q;</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (q--) &#123;</span><br><span class=\"line\">\t\tll x1, x2, y1, y2;</span><br><span class=\"line\">\t\tcin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = y1; i &lt;= y2; i++)r[i] = h1[x2][i] - h1[x1 - <span class=\"number\">1</span>][i] * pp1[x2 - x1 + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = x1; i &lt;= x2; i++)c[i] = h2[i][y2] - h2[i][y1<span class=\"number\">-1</span>] * pp1[y2 - y1 + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tull s1 = <span class=\"number\">0</span>, s2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tll ans1 = <span class=\"number\">-1</span>, ans2 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i+y1&lt;y2; i++) &#123;</span><br><span class=\"line\">\t\t\ts1 = s1 * p2 + r[i+y1];</span><br><span class=\"line\">\t\t\ts2 = s2 + r[y2 - i]*pp2[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s1 == s2)ans1 = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans1 = y2 - y1 - ans1;</span><br><span class=\"line\">\t\ts1 = s2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i + x1 &lt; x2; i++) &#123;</span><br><span class=\"line\">\t\t\ts1 = s1 * p2 + c[i + x1];</span><br><span class=\"line\">\t\t\ts2 = s2 + c[x2 - i] * pp2[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s1 == s2)ans2 = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans2 = x2 - x1 - ans2;</span><br><span class=\"line\">\t\tcout &lt;&lt; ans2 * ans1 &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里考虑一下如果d==n的时候，其实答案是n而不是n-d，把ans预设为-1可以很巧妙的解决。</p>\n<p>结果写的时候天天犯病，对题解抄都nm能给抄歪来，hash也迷惑冲突，只能说base不能乱设了呃呃。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>训练的时候一看题目长的一批就根本没看，现在看看发现还是可做的啊。。</p>\n</blockquote>\n<h1 id=\"题目简述\"><a class=\"markdownIt-Anchor\" href=\"#题目简述\"></a> 题目简述</h1>\n<p>给定一个n*n的矩阵，q次询问，每次给定一个矩形范围，问一个最小矩阵的面积，可以通过此矩阵循环覆盖给定的范围，多出的部分可以不计<br />\n<strong>例如</strong>:ababa可以通过ab循环构成</p>","more":"<hr />\n<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h1>\n<p>如果一个子矩阵满足条件，把这玩意纵向扩展后肯定也可以满足条件，那么我们求可以横向循环满足的循环节和纵向的循环节长度，乘一下就行。<br />\n用hash把这玩意压成一维，在找循环节就行了。</p>\n<blockquote>\n<p>这个就是找最长公共前后缀长度d，那么n-d就是循环节长度。</p>\n</blockquote>\n<hr />\n<h1 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> Code</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll maxn = <span class=\"number\">5e5</span>+ <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">ull p1 = <span class=\"number\">131</span>;</span><br><span class=\"line\">ull p2 = <span class=\"number\">20111203</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> dat[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>];</span><br><span class=\"line\">ull h1[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>], h2[<span class=\"number\">3000</span>][<span class=\"number\">3000</span>],pp1[<span class=\"number\">3000</span>],pp2[<span class=\"number\">3000</span>];</span><br><span class=\"line\">ll q;</span><br><span class=\"line\">ull r[<span class=\"number\">3000</span>], c[<span class=\"number\">3000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tll n,q;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++)cin &gt;&gt; dat[i]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tpp1[<span class=\"number\">0</span>] = pp2[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\tpp1[i] = pp1[i - <span class=\"number\">1</span>] * p1;</span><br><span class=\"line\">\t\tpp2[i] = pp2[i - <span class=\"number\">1</span>] * p2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\th1[i][j] = h1[i - <span class=\"number\">1</span>][j] * p1 + dat[i][j] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t\th2[i][j] = h2[i][j<span class=\"number\">-1</span>] * p1 + dat[i][j] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//cin &gt;&gt; q;</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (q--) &#123;</span><br><span class=\"line\">\t\tll x1, x2, y1, y2;</span><br><span class=\"line\">\t\tcin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = y1; i &lt;= y2; i++)r[i] = h1[x2][i] - h1[x1 - <span class=\"number\">1</span>][i] * pp1[x2 - x1 + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = x1; i &lt;= x2; i++)c[i] = h2[i][y2] - h2[i][y1<span class=\"number\">-1</span>] * pp1[y2 - y1 + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tull s1 = <span class=\"number\">0</span>, s2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tll ans1 = <span class=\"number\">-1</span>, ans2 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i+y1&lt;y2; i++) &#123;</span><br><span class=\"line\">\t\t\ts1 = s1 * p2 + r[i+y1];</span><br><span class=\"line\">\t\t\ts2 = s2 + r[y2 - i]*pp2[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s1 == s2)ans1 = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans1 = y2 - y1 - ans1;</span><br><span class=\"line\">\t\ts1 = s2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i + x1 &lt; x2; i++) &#123;</span><br><span class=\"line\">\t\t\ts1 = s1 * p2 + c[i + x1];</span><br><span class=\"line\">\t\t\ts2 = s2 + c[x2 - i] * pp2[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s1 == s2)ans2 = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans2 = x2 - x1 - ans2;</span><br><span class=\"line\">\t\tcout &lt;&lt; ans2 * ans1 &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里考虑一下如果d==n的时候，其实答案是n而不是n-d，把ans预设为-1可以很巧妙的解决。</p>\n<p>结果写的时候天天犯病，对题解抄都nm能给抄歪来，hash也迷惑冲突，只能说base不能乱设了呃呃。</p>"},{"title":"2022 winter training 1-H","date":"2022-01-12T10:23:23.000Z","_content":"\n> 摆了，但是没有完全摆\n>\n> CF103495H\n\n# H. Reverse the String\n\n给定长1e5的字符串，你可以翻转其中一段连续子段，问能产生的字典序最小的字符串是啥\n\n**据说可以用SA写，我是没啥思路，题解是hash，就这样补了**\n\n<!--more-->\n\n## 思路\n\n考虑把字符串的字符排序，生成的新字符串必然是字典序最小的构造。\n\n那么我们从原字符串和新字符串第一个不同的点作为翻转的起点即可。\n\n然后枚举右端点，通过二分hash，求lcp来比较字符串大小即可。\n\nhash的话，正反跑一遍拼起来就完了，不过式子有一点折磨捏\n\n## CODE\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\n#include <iomanip>\n#include<set>\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nchar s[200000 + 5];\nchar s2[200000 + 5];\nll seed = 20111203;\nll mod = 1e9 + 7;\nll T;\nll h[200000 + 5];\nll r[200000 + 5];\nll poww[200000 + 5];\nll l;\nll q(ll L, ll R, ll x) {\n\tif (x < L)return h[x];\n\tif (x > R)return ((h[L - 1] * poww[x - L + 1])%mod +(r[L] - r[R+1] * poww[R - L + 1]%mod+mod)%mod * poww[x - R]%mod + (h[x] - (ull)h[R] * poww[x - R]%mod +mod)%mod)%mod;\n\telse return (h[L - 1] * poww[x - L + 1]%mod + (r[R-(x-L)] - r[R+ 1] * poww[(x - L)+1]%mod+mod)%mod)%mod;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(NULL);\n\tpoww[0] = 1;\n\tfor (int i = 1; i <= 100000 + 5; i++) {\n\t\tpoww[i] = poww[i - 1] * seed%mod;\n\t}\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> s + 1;\n\t\tl = strlen(s+1);\n\t\tfor (int i = 1, j = l; i <= l && j >= 1; i++,j--) {\n\t\t\th[i] =( h[i - 1] * seed%mod + s[i] - 'a')%mod;\n\t\t\tr[j] = (r[j + 1] * seed%mod + s[j] - 'a')%mod;\n\t\t\ts2[i] = s[i];\n\t\t}\n\t\tsort(s2 + 1, s2 + 1 + l);\n\t\tll r1 = 0;\n\t\tfor (int i = 1; i <= l; i++) {\n\t\t\tif (s[i] == s2[i])r1 = i;\n\t\t\telse break;\n\t\t}\n\t\tr1++;\n\t\t//cout << q(2, 4, 2);\n\t\tif (r1 > l)cout << s + 1 << '\\n';\n\t\telse {\n\t\t\tll mx = r1;\n\t\t\tfor (int i = r1; i <= l; i++) {\n\t\t\t\tll L = 0, R = l;\n\t\t\t\twhile (L<R)\n\t\t\t\t{\n\t\t\t\t\tll m = L + R >> 1;\n\t\t\t\t\tif (q(r1, i, m) == q(r1, mx, m))L = m+1;\n\t\t\t\t\telse R = m;\n\t\t\t\t}\n\t\t\t\tif (L > l)continue;\n\t\t\t\tif (q(r1, i, L) < q(r1, mx, L))mx = i;\n\t\t\t}\n\t\t\tfor (int i = 1; i < r1; i++)cout << s[i];\n\t\t\tfor (int i = mx; i >= r1; i--)cout << s[i];\n\t\t\tfor (int i = mx + 1; i <= l; i++)cout << s[i];\n\t\t\tcout << '\\n';\n\t\t}\n\t\t\n\t}\n}\n```\n\n","source":"_posts/03久远时光以前的补题记录/寒假补题1-H.md","raw":"---\ntitle: 2022 winter training 1-H\ndate: 2022-01-12 18:23:23\ntags: 字符串\ncategory: 补题\n---\n\n> 摆了，但是没有完全摆\n>\n> CF103495H\n\n# H. Reverse the String\n\n给定长1e5的字符串，你可以翻转其中一段连续子段，问能产生的字典序最小的字符串是啥\n\n**据说可以用SA写，我是没啥思路，题解是hash，就这样补了**\n\n<!--more-->\n\n## 思路\n\n考虑把字符串的字符排序，生成的新字符串必然是字典序最小的构造。\n\n那么我们从原字符串和新字符串第一个不同的点作为翻转的起点即可。\n\n然后枚举右端点，通过二分hash，求lcp来比较字符串大小即可。\n\nhash的话，正反跑一遍拼起来就完了，不过式子有一点折磨捏\n\n## CODE\n\n```c++\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<unordered_map>\n#include <iomanip>\n#include<set>\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nchar s[200000 + 5];\nchar s2[200000 + 5];\nll seed = 20111203;\nll mod = 1e9 + 7;\nll T;\nll h[200000 + 5];\nll r[200000 + 5];\nll poww[200000 + 5];\nll l;\nll q(ll L, ll R, ll x) {\n\tif (x < L)return h[x];\n\tif (x > R)return ((h[L - 1] * poww[x - L + 1])%mod +(r[L] - r[R+1] * poww[R - L + 1]%mod+mod)%mod * poww[x - R]%mod + (h[x] - (ull)h[R] * poww[x - R]%mod +mod)%mod)%mod;\n\telse return (h[L - 1] * poww[x - L + 1]%mod + (r[R-(x-L)] - r[R+ 1] * poww[(x - L)+1]%mod+mod)%mod)%mod;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(NULL);\n\tpoww[0] = 1;\n\tfor (int i = 1; i <= 100000 + 5; i++) {\n\t\tpoww[i] = poww[i - 1] * seed%mod;\n\t}\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tcin >> s + 1;\n\t\tl = strlen(s+1);\n\t\tfor (int i = 1, j = l; i <= l && j >= 1; i++,j--) {\n\t\t\th[i] =( h[i - 1] * seed%mod + s[i] - 'a')%mod;\n\t\t\tr[j] = (r[j + 1] * seed%mod + s[j] - 'a')%mod;\n\t\t\ts2[i] = s[i];\n\t\t}\n\t\tsort(s2 + 1, s2 + 1 + l);\n\t\tll r1 = 0;\n\t\tfor (int i = 1; i <= l; i++) {\n\t\t\tif (s[i] == s2[i])r1 = i;\n\t\t\telse break;\n\t\t}\n\t\tr1++;\n\t\t//cout << q(2, 4, 2);\n\t\tif (r1 > l)cout << s + 1 << '\\n';\n\t\telse {\n\t\t\tll mx = r1;\n\t\t\tfor (int i = r1; i <= l; i++) {\n\t\t\t\tll L = 0, R = l;\n\t\t\t\twhile (L<R)\n\t\t\t\t{\n\t\t\t\t\tll m = L + R >> 1;\n\t\t\t\t\tif (q(r1, i, m) == q(r1, mx, m))L = m+1;\n\t\t\t\t\telse R = m;\n\t\t\t\t}\n\t\t\t\tif (L > l)continue;\n\t\t\t\tif (q(r1, i, L) < q(r1, mx, L))mx = i;\n\t\t\t}\n\t\t\tfor (int i = 1; i < r1; i++)cout << s[i];\n\t\t\tfor (int i = mx; i >= r1; i--)cout << s[i];\n\t\t\tfor (int i = mx + 1; i <= l; i++)cout << s[i];\n\t\t\tcout << '\\n';\n\t\t}\n\t\t\n\t}\n}\n```\n\n","slug":"03久远时光以前的补题记录/寒假补题1-H","published":1,"updated":"2022-01-12T10:32:52.631Z","_id":"clobly6d6000szowb0uo8d8b8","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>摆了，但是没有完全摆</p>\n<p>CF103495H</p>\n</blockquote>\n<h1 id=\"h-reverse-the-string\"><a class=\"markdownIt-Anchor\" href=\"#h-reverse-the-string\"></a> H. Reverse the String</h1>\n<p>给定长1e5的字符串，你可以翻转其中一段连续子段，问能产生的字典序最小的字符串是啥</p>\n<p><strong>据说可以用SA写，我是没啥思路，题解是hash，就这样补了</strong></p>\n<span id=\"more\"></span>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h2>\n<p>考虑把字符串的字符排序，生成的新字符串必然是字典序最小的构造。</p>\n<p>那么我们从原字符串和新字符串第一个不同的点作为翻转的起点即可。</p>\n<p>然后枚举右端点，通过二分hash，求lcp来比较字符串大小即可。</p>\n<p>hash的话，正反跑一遍拼起来就完了，不过式子有一点折磨捏</p>\n<h2 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> CODE</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s2[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll seed = <span class=\"number\">20111203</span>;</span><br><span class=\"line\">ll mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll h[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll r[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll poww[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll l;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">q</span><span class=\"params\">(ll L, ll R, ll x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &lt; L)<span class=\"keyword\">return</span> h[x];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &gt; R)<span class=\"keyword\">return</span> ((h[L - <span class=\"number\">1</span>] * poww[x - L + <span class=\"number\">1</span>])%mod +(r[L] - r[R+<span class=\"number\">1</span>] * poww[R - L + <span class=\"number\">1</span>]%mod+mod)%mod * poww[x - R]%mod + (h[x] - (ull)h[R] * poww[x - R]%mod +mod)%mod)%mod;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\"><span class=\"keyword\">return</span></span> (h[L - <span class=\"number\">1</span>] * poww[x - L + <span class=\"number\">1</span>]%mod + (r[R-(x-L)] - r[R+ <span class=\"number\">1</span>] * poww[(x - L)+<span class=\"number\">1</span>]%mod+mod)%mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\tpoww[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100000</span> + <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\tpoww[i] = poww[i - <span class=\"number\">1</span>] * seed%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; s + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tl = <span class=\"built_in\">strlen</span>(s+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, j = l; i &lt;= l &amp;&amp; j &gt;= <span class=\"number\">1</span>; i++,j--) &#123;</span><br><span class=\"line\">\t\t\th[i] =( h[i - <span class=\"number\">1</span>] * seed%mod + s[i] - <span class=\"string\">&#x27;a&#x27;</span>)%mod;</span><br><span class=\"line\">\t\t\tr[j] = (r[j + <span class=\"number\">1</span>] * seed%mod + s[j] - <span class=\"string\">&#x27;a&#x27;</span>)%mod;</span><br><span class=\"line\">\t\t\ts2[i] = s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(s2 + <span class=\"number\">1</span>, s2 + <span class=\"number\">1</span> + l);</span><br><span class=\"line\">\t\tll r1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= l; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s[i] == s2[i])r1 = i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tr1++;</span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; q(2, 4, 2);</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (r1 &gt; l)cout &lt;&lt; s + <span class=\"number\">1</span> &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll mx = r1;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = r1; i &lt;= l; i++) &#123;</span><br><span class=\"line\">\t\t\t\tll L = <span class=\"number\">0</span>, R = l;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (L&lt;R)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tll m = L + R &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">q</span>(r1, i, m) == <span class=\"built_in\">q</span>(r1, mx, m))L = m+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> R = m;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (L &gt; l)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">q</span>(r1, i, L) &lt; <span class=\"built_in\">q</span>(r1, mx, L))mx = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; r1; i++)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mx; i &gt;= r1; i--)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mx + <span class=\"number\">1</span>; i &lt;= l; i++)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>摆了，但是没有完全摆</p>\n<p>CF103495H</p>\n</blockquote>\n<h1 id=\"h-reverse-the-string\"><a class=\"markdownIt-Anchor\" href=\"#h-reverse-the-string\"></a> H. Reverse the String</h1>\n<p>给定长1e5的字符串，你可以翻转其中一段连续子段，问能产生的字典序最小的字符串是啥</p>\n<p><strong>据说可以用SA写，我是没啥思路，题解是hash，就这样补了</strong></p>","more":"<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h2>\n<p>考虑把字符串的字符排序，生成的新字符串必然是字典序最小的构造。</p>\n<p>那么我们从原字符串和新字符串第一个不同的点作为翻转的起点即可。</p>\n<p>然后枚举右端点，通过二分hash，求lcp来比较字符串大小即可。</p>\n<p>hash的话，正反跑一遍拼起来就完了，不过式子有一点折磨捏</p>\n<h2 id=\"code\"><a class=\"markdownIt-Anchor\" href=\"#code\"></a> CODE</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unordered_map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ull;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s2[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll seed = <span class=\"number\">20111203</span>;</span><br><span class=\"line\">ll mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\">ll T;</span><br><span class=\"line\">ll h[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll r[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll poww[<span class=\"number\">200000</span> + <span class=\"number\">5</span>];</span><br><span class=\"line\">ll l;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">q</span><span class=\"params\">(ll L, ll R, ll x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &lt; L)<span class=\"keyword\">return</span> h[x];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &gt; R)<span class=\"keyword\">return</span> ((h[L - <span class=\"number\">1</span>] * poww[x - L + <span class=\"number\">1</span>])%mod +(r[L] - r[R+<span class=\"number\">1</span>] * poww[R - L + <span class=\"number\">1</span>]%mod+mod)%mod * poww[x - R]%mod + (h[x] - (ull)h[R] * poww[x - R]%mod +mod)%mod)%mod;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\"><span class=\"keyword\">return</span></span> (h[L - <span class=\"number\">1</span>] * poww[x - L + <span class=\"number\">1</span>]%mod + (r[R-(x-L)] - r[R+ <span class=\"number\">1</span>] * poww[(x - L)+<span class=\"number\">1</span>]%mod+mod)%mod)%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\tpoww[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100000</span> + <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\tpoww[i] = poww[i - <span class=\"number\">1</span>] * seed%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; s + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tl = <span class=\"built_in\">strlen</span>(s+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, j = l; i &lt;= l &amp;&amp; j &gt;= <span class=\"number\">1</span>; i++,j--) &#123;</span><br><span class=\"line\">\t\t\th[i] =( h[i - <span class=\"number\">1</span>] * seed%mod + s[i] - <span class=\"string\">&#x27;a&#x27;</span>)%mod;</span><br><span class=\"line\">\t\t\tr[j] = (r[j + <span class=\"number\">1</span>] * seed%mod + s[j] - <span class=\"string\">&#x27;a&#x27;</span>)%mod;</span><br><span class=\"line\">\t\t\ts2[i] = s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(s2 + <span class=\"number\">1</span>, s2 + <span class=\"number\">1</span> + l);</span><br><span class=\"line\">\t\tll r1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= l; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s[i] == s2[i])r1 = i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tr1++;</span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; q(2, 4, 2);</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (r1 &gt; l)cout &lt;&lt; s + <span class=\"number\">1</span> &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tll mx = r1;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = r1; i &lt;= l; i++) &#123;</span><br><span class=\"line\">\t\t\t\tll L = <span class=\"number\">0</span>, R = l;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (L&lt;R)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tll m = L + R &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">q</span>(r1, i, m) == <span class=\"built_in\">q</span>(r1, mx, m))L = m+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> R = m;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (L &gt; l)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">q</span>(r1, i, L) &lt; <span class=\"built_in\">q</span>(r1, mx, L))mx = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; r1; i++)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mx; i &gt;= r1; i--)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = mx + <span class=\"number\">1</span>; i &lt;= l; i++)cout &lt;&lt; s[i];</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"hexo博客搭建教程(?","date":"2021-11-07T08:01:02.000Z","_content":"\n> 有咩有一种可能,这玩意是写来总结一下当时搭博客是有多么折磨的一件事的捏\n\n介绍一下怎么用hexo搭建博客并部署\n\n<!-- more -->\n\n# 首先是作为准备工作的首先\n\n## 下载安装\n\n- 我们需要\n    1. 装一个git工具\n    2. 装一个node.js\n    3. 装一个hexo\n\ngit工具和node.js直接去官网上下就行了捏\n\n[DownloadGit](https://gitforwindows.org/)\n\n[Node.js](https://nodejs.org/en/download/)\n\n下好了之后我们就可以用Git带的gitbush工具开始整活了  \n\n首先到你想作为blog的文件夹里右键打开gitbush，或者直接`cd`,输入\n\n```bash\nnpm install -g hexo\n```\n\n之后可以用\n\n```bash\nhexo -v\n```\n\n来查版本号，看看是不是真的装好了，喜闻乐见了属于是  \n\n\n\n## Github方面的工作\n\n**新建仓库**\n\n这个部分有2种\n\n- 想使用Github pages功能来部署博客的，域名是 GitHub用户名+github.io\n- 想使用cloudflare pages来部署的，域名是 自定+pages.dev\n\n不过其实都行，反正最后可以自定义域名（\n\n第一种：在github上新建一个仓库，仓库名字是 `你的Github用户名.github.io`，然后选public\n\n第二种对仓库名没有要求。  \n\n\n\n**SSH key**\n\n>  这个部分是让每次push不用输账号密码了，省去了很多折磨的部分捏\n\n\n\n首先在Gitbush里输入\n\n```bash\ngit config --global user.name \"yourname\" \t// 你的Github用户名\ngit config --global user.email \"youremail\"\t// 你的Github邮箱\n```\n\n然后创建SSH\n\n```bash\nssh-keygen -t rsa -C \"youremail\"\n```\n\n然后他就会生成一个`.ssh`的文件夹，打开这个文件夹\n\n找到`id_rsa.pub`，把里边的内容复制一哈\n\n最后打开你的Github，找到setting里边有一个SSH keys，直接Add SSH key，把你复制的内容粘进去\n\n用这个看看你有没有成功\n\n```bash\nssh -T git@github.com\n```\n\n他应该会说\n\n```bash\nHi XXX! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n---\n\n# 其次是开始部署的其次\n\n> 这里也有两种选择捏，顺带一提俺是部署到Cloudflare pages上边了\n\n## 在本地使用hexo\n\n> 不管怎么说，部署之前我们首先得在本地能跑吧\n\n在你选定的文件夹里\n\n```bash\nhexo init myblog\t//myblog叫啥都行\n```\n\n然后你会发现多了一个叫myblog的文件夹，这个就是你以后写博客，整活的根目录了\n\n`cd`进这个文件夹\n\n```bash\nhexo g\t\t\t//生成页面\nhexo s\t\t\t//在本地开启服务器预览\n```\n\n这时候你就可以在`localhost:4000`里看到自己的博客了，他有个预制\n\n一般来说ctrl+c可以关掉服务，不行的话上cmd把占用了4000端口的进程kill掉也行\n\n```bash\nhexo s -p 5000\t//可以把端口设定到5000，4000端口冲突了也能这样\n```\n\n----\n\n然后就是激动人心的部署到网站上了捏，可以\n\n- 部署到Github Pages\n- 部署到Cloudflare Pages\n\n## 部署到Github Pages\n\n打开你hexo init新建的文件夹，找到`_config.yml`\n\n在里边找到deploy，改一改\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n  branch: master\n  // repo里边把YourgithubName替换成你自己的\n  // branch里边把master换成你那个仓库主分支的名字\n```\n\n然后还要装一个\n\n```bash\nnpm install hexo-deployer-git --save\t// 有时候装了新主题报错的话，把这个重新装一下就行了捏\n```\n\n最后就迎来了我们激动人心的时刻\n\n```bash\nhexo clean\t// 清除原来生成在public里的文件\nhexo g\t// 生成\nhexo d\t// 部署\n```\n\n就可以了\n\n---\n\n## 部署到Cloudflare Pages\n\n首先，在本地使用hexo的那部分都要搞，\n\n**不用改deploy里边的东西**\n\n然后，我们要注册一个[Cloudflare](https://dash.cloudflare.com/)的账号，点开`网页`选项，创建项目\n\n按照提示绑上你的GitHub账号，选择你作为存博客的那个仓库，\n\n然后自己定一个你要的项目名字，他会部署到 名字.pages.dev上边\n\n构建选项这样写就完事儿了\n\n![ee](c)\n\n**以后你每次就把整个文件夹push到你的Github上，他会自动构建，一个月有500次，完全够用了捏**\n\n---\n\n# 最后是个性化以及使用方法的最后\n\n> 我们已经搞的差不多了，现在是不是该写自己的第一篇博客了？\n\n输入\n\n```bash\nhexo n 博客名\n```\n\n你会发现在`source/_post`文件夹内出现了一篇markdown，就可以在里边写了捏\n\n这时，好奇的你也许会发现他开头有个类似于\n\n```markdown\n---\ntitle: xxx\ndate: \ntag: \ncategory: \n---\n```\n\n之类的东西，这个是标定一些你文章的属性的东西，具体来说其实还是要看你用的主题是如何规定的，自己查人主题文档去捏。\n\ntag和category可以写多级,不过tag好像没有上下级的层次，category则是从上到下\n\n```markdown\ncategory:\n- a\n- b\n```\n\n这样就把你文章放在了a大类下的b小分类下\n\n---\n\n然后是各种个性化\n\n换主题啊，自定义域名啊啥的，我懒得写了，自己上网查得了\n\n找主题上https://hexo.io/themes/就行\n\n","source":"_posts/05杂项/hexo博客搭建.md","raw":"---\ntitle: hexo博客搭建教程(?\ndate: 2021-11-07 16:01:02\ntags: hexo\ncategory: 杂项\n---\n\n> 有咩有一种可能,这玩意是写来总结一下当时搭博客是有多么折磨的一件事的捏\n\n介绍一下怎么用hexo搭建博客并部署\n\n<!-- more -->\n\n# 首先是作为准备工作的首先\n\n## 下载安装\n\n- 我们需要\n    1. 装一个git工具\n    2. 装一个node.js\n    3. 装一个hexo\n\ngit工具和node.js直接去官网上下就行了捏\n\n[DownloadGit](https://gitforwindows.org/)\n\n[Node.js](https://nodejs.org/en/download/)\n\n下好了之后我们就可以用Git带的gitbush工具开始整活了  \n\n首先到你想作为blog的文件夹里右键打开gitbush，或者直接`cd`,输入\n\n```bash\nnpm install -g hexo\n```\n\n之后可以用\n\n```bash\nhexo -v\n```\n\n来查版本号，看看是不是真的装好了，喜闻乐见了属于是  \n\n\n\n## Github方面的工作\n\n**新建仓库**\n\n这个部分有2种\n\n- 想使用Github pages功能来部署博客的，域名是 GitHub用户名+github.io\n- 想使用cloudflare pages来部署的，域名是 自定+pages.dev\n\n不过其实都行，反正最后可以自定义域名（\n\n第一种：在github上新建一个仓库，仓库名字是 `你的Github用户名.github.io`，然后选public\n\n第二种对仓库名没有要求。  \n\n\n\n**SSH key**\n\n>  这个部分是让每次push不用输账号密码了，省去了很多折磨的部分捏\n\n\n\n首先在Gitbush里输入\n\n```bash\ngit config --global user.name \"yourname\" \t// 你的Github用户名\ngit config --global user.email \"youremail\"\t// 你的Github邮箱\n```\n\n然后创建SSH\n\n```bash\nssh-keygen -t rsa -C \"youremail\"\n```\n\n然后他就会生成一个`.ssh`的文件夹，打开这个文件夹\n\n找到`id_rsa.pub`，把里边的内容复制一哈\n\n最后打开你的Github，找到setting里边有一个SSH keys，直接Add SSH key，把你复制的内容粘进去\n\n用这个看看你有没有成功\n\n```bash\nssh -T git@github.com\n```\n\n他应该会说\n\n```bash\nHi XXX! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n---\n\n# 其次是开始部署的其次\n\n> 这里也有两种选择捏，顺带一提俺是部署到Cloudflare pages上边了\n\n## 在本地使用hexo\n\n> 不管怎么说，部署之前我们首先得在本地能跑吧\n\n在你选定的文件夹里\n\n```bash\nhexo init myblog\t//myblog叫啥都行\n```\n\n然后你会发现多了一个叫myblog的文件夹，这个就是你以后写博客，整活的根目录了\n\n`cd`进这个文件夹\n\n```bash\nhexo g\t\t\t//生成页面\nhexo s\t\t\t//在本地开启服务器预览\n```\n\n这时候你就可以在`localhost:4000`里看到自己的博客了，他有个预制\n\n一般来说ctrl+c可以关掉服务，不行的话上cmd把占用了4000端口的进程kill掉也行\n\n```bash\nhexo s -p 5000\t//可以把端口设定到5000，4000端口冲突了也能这样\n```\n\n----\n\n然后就是激动人心的部署到网站上了捏，可以\n\n- 部署到Github Pages\n- 部署到Cloudflare Pages\n\n## 部署到Github Pages\n\n打开你hexo init新建的文件夹，找到`_config.yml`\n\n在里边找到deploy，改一改\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n  branch: master\n  // repo里边把YourgithubName替换成你自己的\n  // branch里边把master换成你那个仓库主分支的名字\n```\n\n然后还要装一个\n\n```bash\nnpm install hexo-deployer-git --save\t// 有时候装了新主题报错的话，把这个重新装一下就行了捏\n```\n\n最后就迎来了我们激动人心的时刻\n\n```bash\nhexo clean\t// 清除原来生成在public里的文件\nhexo g\t// 生成\nhexo d\t// 部署\n```\n\n就可以了\n\n---\n\n## 部署到Cloudflare Pages\n\n首先，在本地使用hexo的那部分都要搞，\n\n**不用改deploy里边的东西**\n\n然后，我们要注册一个[Cloudflare](https://dash.cloudflare.com/)的账号，点开`网页`选项，创建项目\n\n按照提示绑上你的GitHub账号，选择你作为存博客的那个仓库，\n\n然后自己定一个你要的项目名字，他会部署到 名字.pages.dev上边\n\n构建选项这样写就完事儿了\n\n![ee](c)\n\n**以后你每次就把整个文件夹push到你的Github上，他会自动构建，一个月有500次，完全够用了捏**\n\n---\n\n# 最后是个性化以及使用方法的最后\n\n> 我们已经搞的差不多了，现在是不是该写自己的第一篇博客了？\n\n输入\n\n```bash\nhexo n 博客名\n```\n\n你会发现在`source/_post`文件夹内出现了一篇markdown，就可以在里边写了捏\n\n这时，好奇的你也许会发现他开头有个类似于\n\n```markdown\n---\ntitle: xxx\ndate: \ntag: \ncategory: \n---\n```\n\n之类的东西，这个是标定一些你文章的属性的东西，具体来说其实还是要看你用的主题是如何规定的，自己查人主题文档去捏。\n\ntag和category可以写多级,不过tag好像没有上下级的层次，category则是从上到下\n\n```markdown\ncategory:\n- a\n- b\n```\n\n这样就把你文章放在了a大类下的b小分类下\n\n---\n\n然后是各种个性化\n\n换主题啊，自定义域名啊啥的，我懒得写了，自己上网查得了\n\n找主题上https://hexo.io/themes/就行\n\n","slug":"05杂项/hexo博客搭建","published":1,"updated":"2021-11-08T14:05:53.281Z","_id":"clobly6d7000wzowbcolp5stv","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>有咩有一种可能,这玩意是写来总结一下当时搭博客是有多么折磨的一件事的捏</p>\n</blockquote>\n<p>介绍一下怎么用hexo搭建博客并部署</p>\n<span id=\"more\"></span>\n<h1 id=\"首先是作为准备工作的首先\"><a class=\"markdownIt-Anchor\" href=\"#首先是作为准备工作的首先\"></a> 首先是作为准备工作的首先</h1>\n<h2 id=\"下载安装\"><a class=\"markdownIt-Anchor\" href=\"#下载安装\"></a> 下载安装</h2>\n<ul>\n<li>我们需要\n<ol>\n<li>装一个git工具</li>\n<li>装一个node.js</li>\n<li>装一个hexo</li>\n</ol>\n</li>\n</ul>\n<p>git工具和node.js直接去官网上下就行了捏</p>\n<p><a href=\"https://gitforwindows.org/\">DownloadGit</a></p>\n<p><a href=\"https://nodejs.org/en/download/\">Node.js</a></p>\n<p>下好了之后我们就可以用Git带的gitbush工具开始整活了</p>\n<p>首先到你想作为blog的文件夹里右键打开gitbush，或者直接<code>cd</code>,输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<p>之后可以用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>来查版本号，看看是不是真的装好了，喜闻乐见了属于是</p>\n<h2 id=\"github方面的工作\"><a class=\"markdownIt-Anchor\" href=\"#github方面的工作\"></a> Github方面的工作</h2>\n<p><strong>新建仓库</strong></p>\n<p>这个部分有2种</p>\n<ul>\n<li>想使用Github pages功能来部署博客的，域名是 <a href=\"http://xn--GitHub+github-1p8v876mxlyd.io\">GitHub用户名+github.io</a></li>\n<li>想使用cloudflare pages来部署的，域名是 自定+pages.dev</li>\n</ul>\n<p>不过其实都行，反正最后可以自定义域名（</p>\n<p>第一种：在github上新建一个仓库，仓库名字是 <code>你的Github用户名.github.io</code>，然后选public</p>\n<p>第二种对仓库名没有要求。</p>\n<p><strong>SSH key</strong></p>\n<blockquote>\n<p>这个部分是让每次push不用输账号密码了，省去了很多折磨的部分捏</p>\n</blockquote>\n<p>首先在Gitbush里输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;yourname&quot;</span> \t// 你的Github用户名</span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;youremail&quot;</span>\t// 你的Github邮箱</span><br></pre></td></tr></table></figure>\n<p>然后创建SSH</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>\n<p>然后他就会生成一个<code>.ssh</code>的文件夹，打开这个文件夹</p>\n<p>找到<code>id_rsa.pub</code>，把里边的内容复制一哈</p>\n<p>最后打开你的Github，找到setting里边有一个SSH keys，直接Add SSH key，把你复制的内容粘进去</p>\n<p>用这个看看你有没有成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>他应该会说</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hi XXX! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"其次是开始部署的其次\"><a class=\"markdownIt-Anchor\" href=\"#其次是开始部署的其次\"></a> 其次是开始部署的其次</h1>\n<blockquote>\n<p>这里也有两种选择捏，顺带一提俺是部署到Cloudflare pages上边了</p>\n</blockquote>\n<h2 id=\"在本地使用hexo\"><a class=\"markdownIt-Anchor\" href=\"#在本地使用hexo\"></a> 在本地使用hexo</h2>\n<blockquote>\n<p>不管怎么说，部署之前我们首先得在本地能跑吧</p>\n</blockquote>\n<p>在你选定的文件夹里</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myblog\t//myblog叫啥都行</span><br></pre></td></tr></table></figure>\n<p>然后你会发现多了一个叫myblog的文件夹，这个就是你以后写博客，整活的根目录了</p>\n<p><code>cd</code>进这个文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g\t\t\t//生成页面</span><br><span class=\"line\">hexo s\t\t\t//在本地开启服务器预览</span><br></pre></td></tr></table></figure>\n<p>这时候你就可以在<code>localhost:4000</code>里看到自己的博客了，他有个预制</p>\n<p>一般来说ctrl+c可以关掉服务，不行的话上cmd把占用了4000端口的进程kill掉也行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -p 5000\t//可以把端口设定到5000，4000端口冲突了也能这样</span><br></pre></td></tr></table></figure>\n<hr />\n<p>然后就是激动人心的部署到网站上了捏，可以</p>\n<ul>\n<li>部署到Github Pages</li>\n<li>部署到Cloudflare Pages</li>\n</ul>\n<h2 id=\"部署到github-pages\"><a class=\"markdownIt-Anchor\" href=\"#部署到github-pages\"></a> 部署到Github Pages</h2>\n<p>打开你hexo init新建的文件夹，找到<code>_config.yml</code></p>\n<p>在里边找到deploy，改一改</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"string\">//</span> <span class=\"string\">repo里边把YourgithubName替换成你自己的</span></span><br><span class=\"line\">  <span class=\"string\">//</span> <span class=\"string\">branch里边把master换成你那个仓库主分支的名字</span></span><br></pre></td></tr></table></figure>\n<p>然后还要装一个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save\t// 有时候装了新主题报错的话，把这个重新装一下就行了捏</span><br></pre></td></tr></table></figure>\n<p>最后就迎来了我们激动人心的时刻</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean\t// 清除原来生成在public里的文件</span><br><span class=\"line\">hexo g\t// 生成</span><br><span class=\"line\">hexo d\t// 部署</span><br></pre></td></tr></table></figure>\n<p>就可以了</p>\n<hr />\n<h2 id=\"部署到cloudflare-pages\"><a class=\"markdownIt-Anchor\" href=\"#部署到cloudflare-pages\"></a> 部署到Cloudflare Pages</h2>\n<p>首先，在本地使用hexo的那部分都要搞，</p>\n<p><strong>不用改deploy里边的东西</strong></p>\n<p>然后，我们要注册一个<a href=\"https://dash.cloudflare.com/\">Cloudflare</a>的账号，点开<code>网页</code>选项，创建项目</p>\n<p>按照提示绑上你的GitHub账号，选择你作为存博客的那个仓库，</p>\n<p>然后自己定一个你要的项目名字，他会部署到 名字.pages.dev上边</p>\n<p>构建选项这样写就完事儿了</p>\n<p><img src=\"c\" alt=\"ee\" /></p>\n<p><strong>以后你每次就把整个文件夹push到你的Github上，他会自动构建，一个月有500次，完全够用了捏</strong></p>\n<hr />\n<h1 id=\"最后是个性化以及使用方法的最后\"><a class=\"markdownIt-Anchor\" href=\"#最后是个性化以及使用方法的最后\"></a> 最后是个性化以及使用方法的最后</h1>\n<blockquote>\n<p>我们已经搞的差不多了，现在是不是该写自己的第一篇博客了？</p>\n</blockquote>\n<p>输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n 博客名</span><br></pre></td></tr></table></figure>\n<p>你会发现在<code>source/_post</code>文件夹内出现了一篇markdown，就可以在里边写了捏</p>\n<p>这时，好奇的你也许会发现他开头有个类似于</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\">date: </span><br><span class=\"line\">tag: </span><br><span class=\"line\"><span class=\"section\">category: </span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<p>之类的东西，这个是标定一些你文章的属性的东西，具体来说其实还是要看你用的主题是如何规定的，自己查人主题文档去捏。</p>\n<p>tag和category可以写多级,不过tag好像没有上下级的层次，category则是从上到下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">category:</span><br><span class=\"line\"><span class=\"bullet\">-</span> a</span><br><span class=\"line\"><span class=\"bullet\">-</span> b</span><br></pre></td></tr></table></figure>\n<p>这样就把你文章放在了a大类下的b小分类下</p>\n<hr />\n<p>然后是各种个性化</p>\n<p>换主题啊，自定义域名啊啥的，我懒得写了，自己上网查得了</p>\n<p>找主题上https://hexo.io/themes/就行</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>有咩有一种可能,这玩意是写来总结一下当时搭博客是有多么折磨的一件事的捏</p>\n</blockquote>\n<p>介绍一下怎么用hexo搭建博客并部署</p>","more":"<h1 id=\"首先是作为准备工作的首先\"><a class=\"markdownIt-Anchor\" href=\"#首先是作为准备工作的首先\"></a> 首先是作为准备工作的首先</h1>\n<h2 id=\"下载安装\"><a class=\"markdownIt-Anchor\" href=\"#下载安装\"></a> 下载安装</h2>\n<ul>\n<li>我们需要\n<ol>\n<li>装一个git工具</li>\n<li>装一个node.js</li>\n<li>装一个hexo</li>\n</ol>\n</li>\n</ul>\n<p>git工具和node.js直接去官网上下就行了捏</p>\n<p><a href=\"https://gitforwindows.org/\">DownloadGit</a></p>\n<p><a href=\"https://nodejs.org/en/download/\">Node.js</a></p>\n<p>下好了之后我们就可以用Git带的gitbush工具开始整活了</p>\n<p>首先到你想作为blog的文件夹里右键打开gitbush，或者直接<code>cd</code>,输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<p>之后可以用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>来查版本号，看看是不是真的装好了，喜闻乐见了属于是</p>\n<h2 id=\"github方面的工作\"><a class=\"markdownIt-Anchor\" href=\"#github方面的工作\"></a> Github方面的工作</h2>\n<p><strong>新建仓库</strong></p>\n<p>这个部分有2种</p>\n<ul>\n<li>想使用Github pages功能来部署博客的，域名是 <a href=\"http://xn--GitHub+github-1p8v876mxlyd.io\">GitHub用户名+github.io</a></li>\n<li>想使用cloudflare pages来部署的，域名是 自定+pages.dev</li>\n</ul>\n<p>不过其实都行，反正最后可以自定义域名（</p>\n<p>第一种：在github上新建一个仓库，仓库名字是 <code>你的Github用户名.github.io</code>，然后选public</p>\n<p>第二种对仓库名没有要求。</p>\n<p><strong>SSH key</strong></p>\n<blockquote>\n<p>这个部分是让每次push不用输账号密码了，省去了很多折磨的部分捏</p>\n</blockquote>\n<p>首先在Gitbush里输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;yourname&quot;</span> \t// 你的Github用户名</span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;youremail&quot;</span>\t// 你的Github邮箱</span><br></pre></td></tr></table></figure>\n<p>然后创建SSH</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>\n<p>然后他就会生成一个<code>.ssh</code>的文件夹，打开这个文件夹</p>\n<p>找到<code>id_rsa.pub</code>，把里边的内容复制一哈</p>\n<p>最后打开你的Github，找到setting里边有一个SSH keys，直接Add SSH key，把你复制的内容粘进去</p>\n<p>用这个看看你有没有成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>他应该会说</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hi XXX! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"其次是开始部署的其次\"><a class=\"markdownIt-Anchor\" href=\"#其次是开始部署的其次\"></a> 其次是开始部署的其次</h1>\n<blockquote>\n<p>这里也有两种选择捏，顺带一提俺是部署到Cloudflare pages上边了</p>\n</blockquote>\n<h2 id=\"在本地使用hexo\"><a class=\"markdownIt-Anchor\" href=\"#在本地使用hexo\"></a> 在本地使用hexo</h2>\n<blockquote>\n<p>不管怎么说，部署之前我们首先得在本地能跑吧</p>\n</blockquote>\n<p>在你选定的文件夹里</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myblog\t//myblog叫啥都行</span><br></pre></td></tr></table></figure>\n<p>然后你会发现多了一个叫myblog的文件夹，这个就是你以后写博客，整活的根目录了</p>\n<p><code>cd</code>进这个文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g\t\t\t//生成页面</span><br><span class=\"line\">hexo s\t\t\t//在本地开启服务器预览</span><br></pre></td></tr></table></figure>\n<p>这时候你就可以在<code>localhost:4000</code>里看到自己的博客了，他有个预制</p>\n<p>一般来说ctrl+c可以关掉服务，不行的话上cmd把占用了4000端口的进程kill掉也行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -p 5000\t//可以把端口设定到5000，4000端口冲突了也能这样</span><br></pre></td></tr></table></figure>\n<hr />\n<p>然后就是激动人心的部署到网站上了捏，可以</p>\n<ul>\n<li>部署到Github Pages</li>\n<li>部署到Cloudflare Pages</li>\n</ul>\n<h2 id=\"部署到github-pages\"><a class=\"markdownIt-Anchor\" href=\"#部署到github-pages\"></a> 部署到Github Pages</h2>\n<p>打开你hexo init新建的文件夹，找到<code>_config.yml</code></p>\n<p>在里边找到deploy，改一改</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"string\">//</span> <span class=\"string\">repo里边把YourgithubName替换成你自己的</span></span><br><span class=\"line\">  <span class=\"string\">//</span> <span class=\"string\">branch里边把master换成你那个仓库主分支的名字</span></span><br></pre></td></tr></table></figure>\n<p>然后还要装一个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save\t// 有时候装了新主题报错的话，把这个重新装一下就行了捏</span><br></pre></td></tr></table></figure>\n<p>最后就迎来了我们激动人心的时刻</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean\t// 清除原来生成在public里的文件</span><br><span class=\"line\">hexo g\t// 生成</span><br><span class=\"line\">hexo d\t// 部署</span><br></pre></td></tr></table></figure>\n<p>就可以了</p>\n<hr />\n<h2 id=\"部署到cloudflare-pages\"><a class=\"markdownIt-Anchor\" href=\"#部署到cloudflare-pages\"></a> 部署到Cloudflare Pages</h2>\n<p>首先，在本地使用hexo的那部分都要搞，</p>\n<p><strong>不用改deploy里边的东西</strong></p>\n<p>然后，我们要注册一个<a href=\"https://dash.cloudflare.com/\">Cloudflare</a>的账号，点开<code>网页</code>选项，创建项目</p>\n<p>按照提示绑上你的GitHub账号，选择你作为存博客的那个仓库，</p>\n<p>然后自己定一个你要的项目名字，他会部署到 名字.pages.dev上边</p>\n<p>构建选项这样写就完事儿了</p>\n<p><img src=\"c\" alt=\"ee\" /></p>\n<p><strong>以后你每次就把整个文件夹push到你的Github上，他会自动构建，一个月有500次，完全够用了捏</strong></p>\n<hr />\n<h1 id=\"最后是个性化以及使用方法的最后\"><a class=\"markdownIt-Anchor\" href=\"#最后是个性化以及使用方法的最后\"></a> 最后是个性化以及使用方法的最后</h1>\n<blockquote>\n<p>我们已经搞的差不多了，现在是不是该写自己的第一篇博客了？</p>\n</blockquote>\n<p>输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n 博客名</span><br></pre></td></tr></table></figure>\n<p>你会发现在<code>source/_post</code>文件夹内出现了一篇markdown，就可以在里边写了捏</p>\n<p>这时，好奇的你也许会发现他开头有个类似于</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\">date: </span><br><span class=\"line\">tag: </span><br><span class=\"line\"><span class=\"section\">category: </span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<p>之类的东西，这个是标定一些你文章的属性的东西，具体来说其实还是要看你用的主题是如何规定的，自己查人主题文档去捏。</p>\n<p>tag和category可以写多级,不过tag好像没有上下级的层次，category则是从上到下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">category:</span><br><span class=\"line\"><span class=\"bullet\">-</span> a</span><br><span class=\"line\"><span class=\"bullet\">-</span> b</span><br></pre></td></tr></table></figure>\n<p>这样就把你文章放在了a大类下的b小分类下</p>\n<hr />\n<p>然后是各种个性化</p>\n<p>换主题啊，自定义域名啊啥的，我懒得写了，自己上网查得了</p>\n<p>找主题上https://hexo.io/themes/就行</p>"},{"title":"重参数化与Gumbel-Softmax","date":"2023-10-29T15:06:58.000Z","_content":"\n> 研究SAC的时候没搞太懂，花了好几天研究这个问题，记录一下\n\n参考：\n\n[漫谈重参数：从正态分布到Gumbel Softmax - 科学空间|Scientific Spaces (kexue.fm)](https://kexue.fm/archives/6705)\n\n[VAE中的重参数化技巧-reparameterization trick - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/344938643)\n\n<!-- more -->\n\n# 引入\n\n考虑形如下形式的损失函数：\n$$\n\\mathbb{E} _{p(z)}[f_\\theta (z)]\n$$\n在连续问题或z的取值空间很大的离散问题中，我们很难或者不可能遍历所有的z，因此需要采样(Monte Carlo)。\n\n\n\n若z的分布与我们需要求梯度的参数$ \\theta $无关，则：\n$$\n\\nabla _\\theta \\mathbb{E} _{p(z)}[f_\\theta (z)] &=& \\nabla _\\theta[\\int _zp(z)f_\\theta(z)dz]\\\\\n\n&=& \\int_zp(z)[\\nabla_\\theta f_\\theta(z)]dz\\\\\n &=&\\mathbb{E}_{p(z)}[\\nabla_\\theta f_\\theta(z)]\n$$\n\n\n然而，若问题变为：\n$$\n\\mathbb E_{p_\\theta (z)}[f_\\theta(z)]\n$$\n计算梯度：\n$$\n\\nabla _\\theta \\mathbb{E} _{p_\\theta(z)}[f_\\theta (z)]&=&\\nabla _\\theta[\\int _zp_\\theta(z)f_\\theta(z)dz]\\\\&=&\\int_z\\nabla_\\theta[p_\\theta(z)f_\\theta(z)]dz\\\\&=&\\int_zf_\\theta(z)\\nabla_\\theta p_\\theta(z)dz+\\int_zp_\\theta(z)\\nabla_\\theta f_\\theta (z) dz\n$$\n由于我们需要计算分布p的梯度，第一项无法变成期望的形式，因此也无法进行采样。\n\n\n\n为了解决这个问题，可以使用**重参数化技巧与Gumbel-Softmax**\n\n\n\n# Reparameterization\n\n## 原理\n\n考虑连续情况：\n$$\nL_\\theta=\\int _zp_\\theta(z)f(z)dz\n$$\n我们需要在进行采样的同时保留$ \\theta $的梯度，为此，我们考虑先从无参分布q中进行采样，然后通过某种变换生成z：\n$$\n\\epsilon \\sim q(\\epsilon)\\\\\nz=g_\\theta(\\epsilon)\n$$\n此时式子变为：\n$$\nL_\\theta=\\mathbb E_{\\epsilon\\sim q(\\epsilon)}[f(g_\\theta(\\epsilon))]\n$$\n此时我们把随机采样和梯度传播解耦了，可以直接反向传播loss\n\n\n\n## 实现\n\n以SAC为例，原本需要从$ \\mathcal{N} (\\mu_\\theta, \\sigma^2_\\theta) $中进行抽样。我们进行重参数化：\n$$\n\\epsilon\\sim\\mathcal N(0,1)\\\\\nz=\\epsilon\\times\\sigma_\\theta+\\mu_\\theta\\\\\n\\Rightarrow L_\\theta=\\mathbb E_{\\epsilon\\sim\\mathcal N(0,1)}[f(\\epsilon\\times\\sigma_\\theta+\\mu_\\theta)]\n$$\n然后就可以直接进行反向传播更新网络参数\n\n\n\n# Gumbel-Softmax\n\n## 原理\n\n现在我们考虑离散情况：\n$$\nL_\\theta=\\sum_yp_\\theta(y)f(y)\n$$\n显然我们是可以通过这个求和操作直接计算出Loss的，\n\n然而若取值空间非常巨大，我们依旧需要通过采样来估算这个期望。\n\n\n\n和上文一样，我们考虑如何分离随机采样：\n\n**引入Gumbel-Max：**\n$$\n\\mathop{\\arg\\max}_i(\\log p_i-\\log(-\\log\\epsilon_i))_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n$$\n现在已经通过这个一样重参数过程将随机性转移到了均匀分布上，但是由于我们使用了不可导的argmax，还是会丢失梯度信息。\n\n**因此，我们引入其光光滑似版本，Gumbel-Softmax：**\n$$\n\\mathop{softmax}_i((\\log p_i-\\log(-\\log\\epsilon_i)/\\tau)_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n$$\ntau为退火参数，越小则输出越接近One-Hot输出，然而此时会导致梯度消失。因此训练时可以从1开始，慢慢衰减。\n\n\n\n## 证明\n\n要证明Gumbel-Max抽样和原始分布一样，需要证明输出i的概率为pi，此处证明输出1的概率为p1，即：\n$$\n\\log p_1 -\\log(-\\log \\epsilon_1)>\\log p_i-\\log (-\\log \\epsilon_i)\\ ,\\forall i\\neq1\n$$\n化简得：\n$$\n\\epsilon_i<\\epsilon_1^{p_i/p_1}\\leq1\n$$\n成立概率为：\n$$\n\\epsilon _1^{(p_2+p_3+\\cdots+p_k)/p_1}=\\epsilon^{(1/p_1)-1}\n\\\\\n\\int_0^1\\epsilon_1^{(1/p_1)-1}d\\epsilon_1=p_1\n$$\n\n证毕。\n\n\n\n## 实现\n\n>  pytorch自带Gumbel-Softmax函数，看看代码\n\n```python\ngumbels = (\n        -torch.empty_like(logits, memory_format=torch.legacy_contiguous_format).exponential_().log()\n    )  # ~Gumbel(0,1)\n    gumbels = (logits + gumbels) / tau  # ~Gumbel(logits,tau)\n    y_soft = gumbels.softmax(dim)\n\n    if hard:\n        # Straight through.\n        index = y_soft.max(dim, keepdim=True)[1]\n        y_hard = torch.zeros_like(logits, memory_format=torch.legacy_contiguous_format).scatter_(dim, index, 1.0)\n        ret = y_hard - y_soft.detach() + y_soft\n    else:\n        # Reparametrization trick.\n        ret = y_soft\n    return ret\n```\n\n我们看到，pytorch除了输出类似One-Hot版本，还支持一个hard模式，这步` ret = y_hard - y_soft.detach() + y_soft`通过分离计算图的方式让前向传播和反向传播不同，反向传播时仍然计算的是`y_soft`的梯度。\n","source":"_posts/04学习/Gumbel Softmax.md","raw":"---\ntitle: 重参数化与Gumbel-Softmax\ndate: 2023-10-29 23:06:58\ntags: RL\ncategories:\n- DRL\n---\n\n> 研究SAC的时候没搞太懂，花了好几天研究这个问题，记录一下\n\n参考：\n\n[漫谈重参数：从正态分布到Gumbel Softmax - 科学空间|Scientific Spaces (kexue.fm)](https://kexue.fm/archives/6705)\n\n[VAE中的重参数化技巧-reparameterization trick - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/344938643)\n\n<!-- more -->\n\n# 引入\n\n考虑形如下形式的损失函数：\n$$\n\\mathbb{E} _{p(z)}[f_\\theta (z)]\n$$\n在连续问题或z的取值空间很大的离散问题中，我们很难或者不可能遍历所有的z，因此需要采样(Monte Carlo)。\n\n\n\n若z的分布与我们需要求梯度的参数$ \\theta $无关，则：\n$$\n\\nabla _\\theta \\mathbb{E} _{p(z)}[f_\\theta (z)] &=& \\nabla _\\theta[\\int _zp(z)f_\\theta(z)dz]\\\\\n\n&=& \\int_zp(z)[\\nabla_\\theta f_\\theta(z)]dz\\\\\n &=&\\mathbb{E}_{p(z)}[\\nabla_\\theta f_\\theta(z)]\n$$\n\n\n然而，若问题变为：\n$$\n\\mathbb E_{p_\\theta (z)}[f_\\theta(z)]\n$$\n计算梯度：\n$$\n\\nabla _\\theta \\mathbb{E} _{p_\\theta(z)}[f_\\theta (z)]&=&\\nabla _\\theta[\\int _zp_\\theta(z)f_\\theta(z)dz]\\\\&=&\\int_z\\nabla_\\theta[p_\\theta(z)f_\\theta(z)]dz\\\\&=&\\int_zf_\\theta(z)\\nabla_\\theta p_\\theta(z)dz+\\int_zp_\\theta(z)\\nabla_\\theta f_\\theta (z) dz\n$$\n由于我们需要计算分布p的梯度，第一项无法变成期望的形式，因此也无法进行采样。\n\n\n\n为了解决这个问题，可以使用**重参数化技巧与Gumbel-Softmax**\n\n\n\n# Reparameterization\n\n## 原理\n\n考虑连续情况：\n$$\nL_\\theta=\\int _zp_\\theta(z)f(z)dz\n$$\n我们需要在进行采样的同时保留$ \\theta $的梯度，为此，我们考虑先从无参分布q中进行采样，然后通过某种变换生成z：\n$$\n\\epsilon \\sim q(\\epsilon)\\\\\nz=g_\\theta(\\epsilon)\n$$\n此时式子变为：\n$$\nL_\\theta=\\mathbb E_{\\epsilon\\sim q(\\epsilon)}[f(g_\\theta(\\epsilon))]\n$$\n此时我们把随机采样和梯度传播解耦了，可以直接反向传播loss\n\n\n\n## 实现\n\n以SAC为例，原本需要从$ \\mathcal{N} (\\mu_\\theta, \\sigma^2_\\theta) $中进行抽样。我们进行重参数化：\n$$\n\\epsilon\\sim\\mathcal N(0,1)\\\\\nz=\\epsilon\\times\\sigma_\\theta+\\mu_\\theta\\\\\n\\Rightarrow L_\\theta=\\mathbb E_{\\epsilon\\sim\\mathcal N(0,1)}[f(\\epsilon\\times\\sigma_\\theta+\\mu_\\theta)]\n$$\n然后就可以直接进行反向传播更新网络参数\n\n\n\n# Gumbel-Softmax\n\n## 原理\n\n现在我们考虑离散情况：\n$$\nL_\\theta=\\sum_yp_\\theta(y)f(y)\n$$\n显然我们是可以通过这个求和操作直接计算出Loss的，\n\n然而若取值空间非常巨大，我们依旧需要通过采样来估算这个期望。\n\n\n\n和上文一样，我们考虑如何分离随机采样：\n\n**引入Gumbel-Max：**\n$$\n\\mathop{\\arg\\max}_i(\\log p_i-\\log(-\\log\\epsilon_i))_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n$$\n现在已经通过这个一样重参数过程将随机性转移到了均匀分布上，但是由于我们使用了不可导的argmax，还是会丢失梯度信息。\n\n**因此，我们引入其光光滑似版本，Gumbel-Softmax：**\n$$\n\\mathop{softmax}_i((\\log p_i-\\log(-\\log\\epsilon_i)/\\tau)_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n$$\ntau为退火参数，越小则输出越接近One-Hot输出，然而此时会导致梯度消失。因此训练时可以从1开始，慢慢衰减。\n\n\n\n## 证明\n\n要证明Gumbel-Max抽样和原始分布一样，需要证明输出i的概率为pi，此处证明输出1的概率为p1，即：\n$$\n\\log p_1 -\\log(-\\log \\epsilon_1)>\\log p_i-\\log (-\\log \\epsilon_i)\\ ,\\forall i\\neq1\n$$\n化简得：\n$$\n\\epsilon_i<\\epsilon_1^{p_i/p_1}\\leq1\n$$\n成立概率为：\n$$\n\\epsilon _1^{(p_2+p_3+\\cdots+p_k)/p_1}=\\epsilon^{(1/p_1)-1}\n\\\\\n\\int_0^1\\epsilon_1^{(1/p_1)-1}d\\epsilon_1=p_1\n$$\n\n证毕。\n\n\n\n## 实现\n\n>  pytorch自带Gumbel-Softmax函数，看看代码\n\n```python\ngumbels = (\n        -torch.empty_like(logits, memory_format=torch.legacy_contiguous_format).exponential_().log()\n    )  # ~Gumbel(0,1)\n    gumbels = (logits + gumbels) / tau  # ~Gumbel(logits,tau)\n    y_soft = gumbels.softmax(dim)\n\n    if hard:\n        # Straight through.\n        index = y_soft.max(dim, keepdim=True)[1]\n        y_hard = torch.zeros_like(logits, memory_format=torch.legacy_contiguous_format).scatter_(dim, index, 1.0)\n        ret = y_hard - y_soft.detach() + y_soft\n    else:\n        # Reparametrization trick.\n        ret = y_soft\n    return ret\n```\n\n我们看到，pytorch除了输出类似One-Hot版本，还支持一个hard模式，这步` ret = y_hard - y_soft.detach() + y_soft`通过分离计算图的方式让前向传播和反向传播不同，反向传播时仍然计算的是`y_soft`的梯度。\n","slug":"04学习/Gumbel Softmax","published":1,"updated":"2023-10-29T15:09:34.069Z","_id":"clobly6d8000zzowbe13y6vmr","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>研究SAC的时候没搞太懂，花了好几天研究这个问题，记录一下</p>\n</blockquote>\n<p>参考：</p>\n<p><a href=\"https://kexue.fm/archives/6705\">漫谈重参数：从正态分布到Gumbel Softmax - 科学空间|Scientific Spaces (kexue.fm)</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/344938643\">VAE中的重参数化技巧-reparameterization trick - 知乎 (zhihu.com)</a></p>\n<span id=\"more\"></span>\n<h1 id=\"引入\"><a class=\"markdownIt-Anchor\" href=\"#引入\"></a> 引入</h1>\n<p>考虑形如下形式的损失函数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E} _{p(z)}[f_\\theta (z)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>在连续问题或z的取值空间很大的离散问题中，我们很难或者不可能遍历所有的z，因此需要采样(Monte Carlo)。</p>\n<p>若z的分布与我们需要求梯度的参数$ \\theta $无关，则：</p>\n\\nabla _\\theta \\mathbb{E} _{p(z)}[f_\\theta (z)] &=& \\nabla _\\theta[\\int _zp(z)f_\\theta(z)dz]\\\\\n\n&=& \\int_zp(z)[\\nabla_\\theta f_\\theta(z)]dz\\\\\n &=&\\mathbb{E}_{p(z)}[\\nabla_\\theta f_\\theta(z)]\n\n<p>然而，若问题变为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb E_{p_\\theta (z)}[f_\\theta(z)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>计算梯度：</p>\n\\nabla _\\theta \\mathbb{E} _{p_\\theta(z)}[f_\\theta (z)]&=&\\nabla _\\theta[\\int _zp_\\theta(z)f_\\theta(z)dz]\\\\&=&\\int_z\\nabla_\\theta[p_\\theta(z)f_\\theta(z)]dz\\\\&=&\\int_zf_\\theta(z)\\nabla_\\theta p_\\theta(z)dz+\\int_zp_\\theta(z)\\nabla_\\theta f_\\theta (z) dz\n\n<p>由于我们需要计算分布p的梯度，第一项无法变成期望的形式，因此也无法进行采样。</p>\n<p>为了解决这个问题，可以使用<strong>重参数化技巧与Gumbel-Softmax</strong></p>\n<h1 id=\"reparameterization\"><a class=\"markdownIt-Anchor\" href=\"#reparameterization\"></a> Reparameterization</h1>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\"></a> 原理</h2>\n<p>考虑连续情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mo>∫</mo><mi>z</mi></msub><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\int _zp_\\theta(z)f(z)dz\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27195em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.6105579999999999em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></p>\n<p>我们需要在进行采样的同时保留$ \\theta $的梯度，为此，我们考虑先从无参分布q中进行采样，然后通过某种变换生成z：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>z</mi><mo>=</mo><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\epsilon \\sim q(\\epsilon)\\\\\nz=g_\\theta(\\epsilon)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>此时式子变为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>ϵ</mi><mo>∼</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\mathbb E_{\\epsilon\\sim q(\\epsilon)}[f(g_\\theta(\\epsilon))]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>此时我们把随机采样和梯度传播解耦了，可以直接反向传播loss</p>\n<h2 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> 实现</h2>\n<p>以SAC为例，原本需要从$ \\mathcal{N} (\\mu_\\theta, \\sigma^2_\\theta) $中进行抽样。我们进行重参数化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant=\"script\">N</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>z</mi><mo>=</mo><mi>ϵ</mi><mo>×</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo>+</mo><msub><mi>μ</mi><mi>θ</mi></msub><mspace linebreak=\"newline\"></mspace><mo>⇒</mo><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant=\"script\">N</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo>×</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo>+</mo><msub><mi>μ</mi><mi>θ</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\epsilon\\sim\\mathcal N(0,1)\\\\\nz=\\epsilon\\times\\sigma_\\theta+\\mu_\\theta\\\\\n\\Rightarrow L_\\theta=\\mathbb E_{\\epsilon\\sim\\mathcal N(0,1)}[f(\\epsilon\\times\\sigma_\\theta+\\mu_\\theta)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.14736em;\">N</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>然后就可以直接进行反向传播更新网络参数</p>\n<h1 id=\"gumbel-softmax\"><a class=\"markdownIt-Anchor\" href=\"#gumbel-softmax\"></a> Gumbel-Softmax</h1>\n<h2 id=\"原理-2\"><a class=\"markdownIt-Anchor\" href=\"#原理-2\"></a> 原理</h2>\n<p>现在我们考虑离散情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\sum_yp_\\theta(y)f(y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4361180000000004em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>显然我们是可以通过这个求和操作直接计算出Loss的，</p>\n<p>然而若取值空间非常巨大，我们依旧需要通过采样来估算这个期望。</p>\n<p>和上文一样，我们考虑如何分离随机采样：</p>\n<p><strong>引入Gumbel-Max：</strong></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo></mo><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><msubsup><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo separator=\"true\">,</mo><mtext> </mtext><msub><mi>ϵ</mi><mi>i</mi></msub><mo>∼</mo><mi>U</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathop{\\arg\\max}_i(\\log p_i-\\log(-\\log\\epsilon_i))_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">max</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21752399999999997em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>现在已经通过这个一样重参数过程将随机性转移到了均匀分布上，但是由于我们使用了不可导的argmax，还是会丢失梯度信息。</p>\n<p><strong>因此，我们引入其光光滑似版本，Gumbel-Softmax：</strong></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mo><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>τ</mi><msubsup><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo separator=\"true\">,</mo><mtext> </mtext><msub><mi>ϵ</mi><mi>i</mi></msub><mo>∼</mo><mi>U</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathop{softmax}_i((\\log p_i-\\log(-\\log\\epsilon_i)/\\tau)_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathdefault\">so</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">ma</span><span class=\"mord mathdefault\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21752399999999997em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathdefault\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>tau为退火参数，越小则输出越接近One-Hot输出，然而此时会导致梯度消失。因此训练时可以从1开始，慢慢衰减。</p>\n<h2 id=\"证明\"><a class=\"markdownIt-Anchor\" href=\"#证明\"></a> 证明</h2>\n<p>要证明Gumbel-Max抽样和原始分布一样，需要证明输出i的概率为pi，此处证明输出1的概率为p1，即：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mn>1</mn></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mi mathvariant=\"normal\">≠</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\log p_1 -\\log(-\\log \\epsilon_1)&gt;\\log p_i-\\log (-\\log \\epsilon_i)\\ ,\\forall i\\neq1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>化简得：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ϵ</mi><mi>i</mi></msub><mo>&lt;</mo><msubsup><mi>ϵ</mi><mn>1</mn><mrow><msub><mi>p</mi><mi>i</mi></msub><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub></mrow></msubsup><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\epsilon_i&lt;\\epsilon_1^{p_i/p_1}\\leq1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.311108em;vertical-align:-0.266308em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>成立概率为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>ϵ</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>2</mn></msub><mo>+</mo><msub><mi>p</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>p</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub></mrow></msubsup><mo>=</mo><msup><mi>ϵ</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak=\"newline\"></mspace><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msubsup><mi>ϵ</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></msubsup><mi>d</mi><msub><mi>ϵ</mi><mn>1</mn></msub><mo>=</mo><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\epsilon _1^{(p_2+p_3+\\cdots+p_k)/p_1}=\\epsilon^{(1/p_1)-1}\n\\\\\n\\int_0^1\\epsilon_1^{(1/p_1)-1}d\\epsilon_1=p_1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.311108em;vertical-align:-0.266308em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"minner mtight\">⋯</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4759580000000003em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5640080000000003em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.8129000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">d</span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>证毕。</p>\n<h2 id=\"实现-2\"><a class=\"markdownIt-Anchor\" href=\"#实现-2\"></a> 实现</h2>\n<blockquote>\n<p>pytorch自带Gumbel-Softmax函数，看看代码</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gumbels = (</span><br><span class=\"line\">        -torch.empty_like(logits, memory_format=torch.legacy_contiguous_format).exponential_().log()</span><br><span class=\"line\">    )  <span class=\"comment\"># ~Gumbel(0,1)</span></span><br><span class=\"line\">    gumbels = (logits + gumbels) / tau  <span class=\"comment\"># ~Gumbel(logits,tau)</span></span><br><span class=\"line\">    y_soft = gumbels.softmax(dim)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> hard:</span><br><span class=\"line\">        <span class=\"comment\"># Straight through.</span></span><br><span class=\"line\">        index = y_soft.<span class=\"built_in\">max</span>(dim, keepdim=<span class=\"literal\">True</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">        y_hard = torch.zeros_like(logits, memory_format=torch.legacy_contiguous_format).scatter_(dim, index, <span class=\"number\">1.0</span>)</span><br><span class=\"line\">        ret = y_hard - y_soft.detach() + y_soft</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Reparametrization trick.</span></span><br><span class=\"line\">        ret = y_soft</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br></pre></td></tr></table></figure>\n<p>我们看到，pytorch除了输出类似One-Hot版本，还支持一个hard模式，这步<code>ret = y_hard - y_soft.detach() + y_soft</code>通过分离计算图的方式让前向传播和反向传播不同，反向传播时仍然计算的是<code>y_soft</code>的梯度。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>研究SAC的时候没搞太懂，花了好几天研究这个问题，记录一下</p>\n</blockquote>\n<p>参考：</p>\n<p><a href=\"https://kexue.fm/archives/6705\">漫谈重参数：从正态分布到Gumbel Softmax - 科学空间|Scientific Spaces (kexue.fm)</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/344938643\">VAE中的重参数化技巧-reparameterization trick - 知乎 (zhihu.com)</a></p>","more":"<h1 id=\"引入\"><a class=\"markdownIt-Anchor\" href=\"#引入\"></a> 引入</h1>\n<p>考虑形如下形式的损失函数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{E} _{p(z)}[f_\\theta (z)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>在连续问题或z的取值空间很大的离散问题中，我们很难或者不可能遍历所有的z，因此需要采样(Monte Carlo)。</p>\n<p>若z的分布与我们需要求梯度的参数$ \\theta $无关，则：</p>\n\\nabla _\\theta \\mathbb{E} _{p(z)}[f_\\theta (z)] &=& \\nabla _\\theta[\\int _zp(z)f_\\theta(z)dz]\\\\\n\n&=& \\int_zp(z)[\\nabla_\\theta f_\\theta(z)]dz\\\\\n &=&\\mathbb{E}_{p(z)}[\\nabla_\\theta f_\\theta(z)]\n\n<p>然而，若问题变为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">E</mi><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msub><mi>f</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb E_{p_\\theta (z)}[f_\\theta(z)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>计算梯度：</p>\n\\nabla _\\theta \\mathbb{E} _{p_\\theta(z)}[f_\\theta (z)]&=&\\nabla _\\theta[\\int _zp_\\theta(z)f_\\theta(z)dz]\\\\&=&\\int_z\\nabla_\\theta[p_\\theta(z)f_\\theta(z)]dz\\\\&=&\\int_zf_\\theta(z)\\nabla_\\theta p_\\theta(z)dz+\\int_zp_\\theta(z)\\nabla_\\theta f_\\theta (z) dz\n\n<p>由于我们需要计算分布p的梯度，第一项无法变成期望的形式，因此也无法进行采样。</p>\n<p>为了解决这个问题，可以使用<strong>重参数化技巧与Gumbel-Softmax</strong></p>\n<h1 id=\"reparameterization\"><a class=\"markdownIt-Anchor\" href=\"#reparameterization\"></a> Reparameterization</h1>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\"></a> 原理</h2>\n<p>考虑连续情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mo>∫</mo><mi>z</mi></msub><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mi>d</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\int _zp_\\theta(z)f(z)dz\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27195em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.6105579999999999em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></p>\n<p>我们需要在进行采样的同时保留$ \\theta $的梯度，为此，我们考虑先从无参分布q中进行采样，然后通过某种变换生成z：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>z</mi><mo>=</mo><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\epsilon \\sim q(\\epsilon)\\\\\nz=g_\\theta(\\epsilon)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>此时式子变为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>ϵ</mi><mo>∼</mo><mi>q</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\mathbb E_{\\epsilon\\sim q(\\epsilon)}[f(g_\\theta(\\epsilon))]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>此时我们把随机采样和梯度传播解耦了，可以直接反向传播loss</p>\n<h2 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\"></a> 实现</h2>\n<p>以SAC为例，原本需要从$ \\mathcal{N} (\\mu_\\theta, \\sigma^2_\\theta) $中进行抽样。我们进行重参数化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant=\"script\">N</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>z</mi><mo>=</mo><mi>ϵ</mi><mo>×</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo>+</mo><msub><mi>μ</mi><mi>θ</mi></msub><mspace linebreak=\"newline\"></mspace><mo>⇒</mo><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant=\"script\">N</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>ϵ</mi><mo>×</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo>+</mo><msub><mi>μ</mi><mi>θ</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\epsilon\\sim\\mathcal N(0,1)\\\\\nz=\\epsilon\\times\\sigma_\\theta+\\mu_\\theta\\\\\n\\Rightarrow L_\\theta=\\mathbb E_{\\epsilon\\sim\\mathcal N(0,1)}[f(\\epsilon\\times\\sigma_\\theta+\\mu_\\theta)]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.14736em;\">N</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">ϵ</span><span class=\"mrel mtight\">∼</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.14736em;\">N</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>然后就可以直接进行反向传播更新网络参数</p>\n<h1 id=\"gumbel-softmax\"><a class=\"markdownIt-Anchor\" href=\"#gumbel-softmax\"></a> Gumbel-Softmax</h1>\n<h2 id=\"原理-2\"><a class=\"markdownIt-Anchor\" href=\"#原理-2\"></a> 原理</h2>\n<p>现在我们考虑离散情况：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>θ</mi></msub><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L_\\theta=\\sum_yp_\\theta(y)f(y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4361180000000004em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>显然我们是可以通过这个求和操作直接计算出Loss的，</p>\n<p>然而若取值空间非常巨大，我们依旧需要通过采样来估算这个期望。</p>\n<p>和上文一样，我们考虑如何分离随机采样：</p>\n<p><strong>引入Gumbel-Max：</strong></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo></mo><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><msubsup><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo separator=\"true\">,</mo><mtext> </mtext><msub><mi>ϵ</mi><mi>i</mi></msub><mo>∼</mo><mi>U</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathop{\\arg\\max}_i(\\log p_i-\\log(-\\log\\epsilon_i))_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">max</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21752399999999997em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>现在已经通过这个一样重参数过程将随机性转移到了均匀分布上，但是由于我们使用了不可导的argmax，还是会丢失梯度信息。</p>\n<p><strong>因此，我们引入其光光滑似版本，Gumbel-Softmax：</strong></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mo><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>τ</mi><msubsup><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mo separator=\"true\">,</mo><mtext> </mtext><msub><mi>ϵ</mi><mi>i</mi></msub><mo>∼</mo><mi>U</mi><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathop{softmax}_i((\\log p_i-\\log(-\\log\\epsilon_i)/\\tau)_{i=1}^k,\\ \\epsilon_i\\sim U[0,1]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathdefault\">so</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">ma</span><span class=\"mord mathdefault\">x</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21752399999999997em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathdefault\" style=\"margin-right:0.1132em;\">τ</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\"> </span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>tau为退火参数，越小则输出越接近One-Hot输出，然而此时会导致梯度消失。因此训练时可以从1开始，慢慢衰减。</p>\n<h2 id=\"证明\"><a class=\"markdownIt-Anchor\" href=\"#证明\"></a> 证明</h2>\n<p>要证明Gumbel-Max抽样和原始分布一样，需要证明输出i的概率为pi，此处证明输出1的概率为p1，即：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mn>1</mn></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∀</mi><mi>i</mi><mi mathvariant=\"normal\">≠</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\log p_1 -\\log(-\\log \\epsilon_1)&gt;\\log p_i-\\log (-\\log \\epsilon_i)\\ ,\\forall i\\neq1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>化简得：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ϵ</mi><mi>i</mi></msub><mo>&lt;</mo><msubsup><mi>ϵ</mi><mn>1</mn><mrow><msub><mi>p</mi><mi>i</mi></msub><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub></mrow></msubsup><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\epsilon_i&lt;\\epsilon_1^{p_i/p_1}\\leq1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.311108em;vertical-align:-0.266308em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>成立概率为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>ϵ</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>2</mn></msub><mo>+</mo><msub><mi>p</mi><mn>3</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>p</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub></mrow></msubsup><mo>=</mo><msup><mi>ϵ</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak=\"newline\"></mspace><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msubsup><mi>ϵ</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow></msubsup><mi>d</mi><msub><mi>ϵ</mi><mn>1</mn></msub><mo>=</mo><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\epsilon _1^{(p_2+p_3+\\cdots+p_k)/p_1}=\\epsilon^{(1/p_1)-1}\n\\\\\n\\int_0^1\\epsilon_1^{(1/p_1)-1}d\\epsilon_1=p_1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.311108em;vertical-align:-0.266308em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"minner mtight\">⋯</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4759580000000003em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5640080000000003em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span><span style=\"top:-3.8129000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.433692em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">/</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">d</span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>证毕。</p>\n<h2 id=\"实现-2\"><a class=\"markdownIt-Anchor\" href=\"#实现-2\"></a> 实现</h2>\n<blockquote>\n<p>pytorch自带Gumbel-Softmax函数，看看代码</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gumbels = (</span><br><span class=\"line\">        -torch.empty_like(logits, memory_format=torch.legacy_contiguous_format).exponential_().log()</span><br><span class=\"line\">    )  <span class=\"comment\"># ~Gumbel(0,1)</span></span><br><span class=\"line\">    gumbels = (logits + gumbels) / tau  <span class=\"comment\"># ~Gumbel(logits,tau)</span></span><br><span class=\"line\">    y_soft = gumbels.softmax(dim)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> hard:</span><br><span class=\"line\">        <span class=\"comment\"># Straight through.</span></span><br><span class=\"line\">        index = y_soft.<span class=\"built_in\">max</span>(dim, keepdim=<span class=\"literal\">True</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">        y_hard = torch.zeros_like(logits, memory_format=torch.legacy_contiguous_format).scatter_(dim, index, <span class=\"number\">1.0</span>)</span><br><span class=\"line\">        ret = y_hard - y_soft.detach() + y_soft</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Reparametrization trick.</span></span><br><span class=\"line\">        ret = y_soft</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br></pre></td></tr></table></figure>\n<p>我们看到，pytorch除了输出类似One-Hot版本，还支持一个hard模式，这步<code>ret = y_hard - y_soft.detach() + y_soft</code>通过分离计算图的方式让前向传播和反向传播不同，反向传播时仍然计算的是<code>y_soft</code>的梯度。</p>"},{"title":"c++ primer 读书笔记(1)","date":"2022-06-15T19:46:12.000Z","_content":"\n> \n包含以下内容：\n- 异常\n- IO流\n- 泛型\n\n<!-- more -->\n\n# 异常处理\n\n## throw try catch\n\nthrow可以抛出异常。\n\ntry代码块后需要跟着catch代码块用于获取并处理抛出的异常。会进入第一个符合catch获取异常的代码块。\n\n如果try语句有多层调用，会先找该层有没有适合的catch语句，再寻找上一层的，以此类推。如果都没有则会转到`terminate`的函数，导致程序非正常退出。\n\n当然如果没有try还发生了异常会直接`terminate`。\n\n```c++\ntry{\n    throw runtime_error(\"RE\");\n} catch(runtime_error err){\n    ...\n}\n```\n\n## 标准异常库\n\n定义了以下几种异常类型\n\n| 异常类型         | 内容     |\n| ---------------- | -------- |\n| exception        | 常见异常 |\n| runtime_error    | 运行时异常 |\n| range_error      |  RE:结果超出了有意义的值域        |\n| overflow_error   | RE:计算上溢         |\n| underflow_error  | RE:计算下溢         |\n| logic_error      |  逻辑错误        |\n| domain_error     | LE:参数对应结果不存在         |\n| invalid_argument | LE:无效参数         |\n| length_error     |  LE:创建一个超出该类型最大长度对象        |\n| out_of_range |LE:使用超出有效范围的值\t\t\t|\n\n除了exception,bad_alloc,bad_cast对象不能提供初始值，其他异常类型需要提供一个字符串(string/const char*)初始化，用于提供该异常的错误相关信息。\n\n异常的what成员函数返回该字符串初始值。不能返回的由编译器决定内容。\n\n# 调试帮助\n\n## assert\n\nassert是一个宏。\n\n代码`assert(expr);`的行为是先对expr求值，若expr为假，则输出信息并终止程序，若为真则什么都不做。\n\n如果使用了`#define`定义了`NDEBUG`，则assert什么都不做。\n\n## 一些变量\n\n`__func__`:当前调试的函数名\n\n`__FILE__`：当前文件名的字符串字面值\n\n`__LINE__`:当前行号的int\n\n`__TIME__`:文件编译时间字符串字面值\n\n`__DATE__`:文件编译日期字符串字面值\n\n---\n\n# IO\n\n##   头文件\n\n- `<iostream>`\n- `<fstream>`\n- `<sstream>`\n\n流对象会有状态`iostate`。\n\n`rdstate()`方法能获取流对象当前的状态。\n\n`setstate()`设置状态\n\n`good()`看流对象是否错误\n\n`clear()`恢复错误状态\n\n以及一堆东西用来管理。\n\n## 缓冲区\n\n输出流的内容可能会被输入到缓冲区中。等一个时间再写。\n\n`endl`会插入一个换行然后刷新\n\n`flush`刷新\n\n`ends`插入一个空字符然后刷新\n\n使用`unitbuf`操作符后会让流在之后的每次写操作后flush\n\n用`nounitbuf`后恢复\n\n## 关联\n\n`tie()`方法传入一个类引用/指针。\n\n如果输入流关联到输出流时，任何从输入流读数据的操作都会先刷新关联的输出流。\n\n## 文件流\n\n`fstream`\n\n初始化`fstream fs(s,mode);`传入文件名s，打开为文件流。模式为mode，该参数可选。\n\n`open()`方法，用fstream打开文件\n\n`close()`方法，关闭文件流\n\n`is_open()`方法，指出关联文件是否打开而且没有关闭。\n\n\n\n`ifstream`和`ofstream`文件输入输出流。\n\n如果`open()`失败了会置位`failbit`\n\n可以直接`if(fs)`来检测是否打开成功。\n\n## 流，文件模式\n\n可以指定文件模式\n\n| 文件模式 | 干嘛的                   |\n| -------- | ------------------------ |\n| in       | 读方式                   |\n| out      | 写方式                   |\n| app      | 写操作前定位到文件末尾   |\n| ate      | 打开文件后定位到文件末尾 |\n| trunc    | 截断文件                 |\n| binary   | 二进制io                 |\n\n- out模式只能设定给`ofstream`或者`fstream`\n\n- in模式只能给`ifstream` `fstream`\n\n- 没用`trunc`就可以用`app`\n\n**用`ostream`打开文件时文件内容会被扔掉**\n\n**除非指定app模式**\n\n```c++\nofstream out(\"a.txt\", ofstream::out | ofstream::app);\n```\n\n## sstream\n\n`stringstream`用string初始化咯。\n\n`str()`方法返回流保存string的拷贝\n\n`str(s)`方法把s拷贝到流里边然后返回void\n\n---\n\n# 泛型\n\n>  这部分感觉书的意思是stl风格的泛型算法？\n\n## 谓词\n\n> 谓词是一个可以调用的表达式，其返回结果是一个能作为条件的值。\n\nstl中接受一元或者二元谓词。\n\n举个例子，`sort()`函数的重载之一，接受的第三个参数就是谓词。\n\n也就是`sort(it.begin(),it.end(),cmp)；`中的cmp就是一个二元谓词，其是一个比较函数，返回`bool`类型。\n\n## lambda表达式\n\n谓词接受的参数个数是严格确定的，但是有时候谓词的内容可能是高度相似的，这是重写多个谓词不太合理，又不能把这部分单独设置成一个函数参数，就该用lambda了。\n\n```C++\n//结构\n[capture list](param list) -> return type {function body}\n```\n\nlambda表达式是一种可调用对象，函数，函数指针，以及重载了函数调用运算符的类也是可调用对象。\n\n我们可以忽略参数列表和返回类型，但是**必须**包含捕获列表和函数体。\n\n忽略返回类型的时候返回类型是自动推断的。\n\n```c++\nauto f = []{return -1;}\n```\n\n这时f就是一个可调用对象。\n\n用`f();`来调用。\n\n### 捕获列表\n\n在捕获列表中添加变量名，lambda的函数体内才能访问这些变量。\n\n```c++\n\tint a = 1;\n\tauto f = [a]() ->int {return a; };\n\tcout << f();\n```\n\n但是lambda的捕获列表是一如既往的延迟调用的。在定义的时候就复制了一份捕获列表内容。\n\n```c++\n\tint a = 1;\n\tauto f = [a]() ->int {return a; };\n\ta=2;\n\tcout << f();\n//依旧输出a\n```\n\n把列表内改为引用可以很显然地解决这个问题。\n\n还有一些更抽象的用法（隐式捕获）：\n\n- [=]可以捕获所有的变量\n- [&]可以捕获所有变量的引用\n\nf可以在别的函数里边定义：\n\n```c++\n\ntemplate <typename T>\nint func(T t) {\n\treturn int(t());\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tint a = 1;\n\tauto f = [&a] {return a; };\n\tcout<<func(f);\n\ta = 2;\n\tcout << func(f);\n}\n//输出1，2\n```\n\n### 可变lambda\n\n要是想改变捕获的被拷贝的变量，要加上mutable关键字。\n\n```c++\nint a = 0;\nauto f = [a] () mutable {return ++a;}\na = 10;\nf();//这时返回1，参数列表里边的a作为被拷贝变量被保存了。\n```\n\n感觉这个时候捕获列表复制之后，就变成了一个同名的作用域不一样的局部变量？\n\n\n\nlambda就是可以就地声明匿名函数，让调用更加方便了！\n\n当然新写一个class重载`()`操作符搞一个仿函数也是一样的效果，大概。\n\n## bind函数\n\n`bind`函数被定义在`<functional>`内。\n\n作用是接受一个可调用对象以及一个参数列表，生成一个新的可调用对象来适应这些参数列表。\n\n```c++\nauto newCallable = bind(callable , arg_list);\n```\n\n相当于调用`newCallable`的时候这玩意把`arg_list`里的参数传给`callale`\n\n`_n`占位符意味着`newCallable`里的第n个参数。\n\n`_n`被定义在`std::placeholders`命名空间里边。\n\n```c++\nauto f1 = [](int a,int b){\n    return a-b;\n}\nauto f2 = bind(f1,2,_1);\nf(1);//返回2-1=1\n```\n\n## 迭代器\n\nio流也有迭代器。\n\n`istream_iterator`和`ostream_iterator`\n\n## 泛型！\n\n要构造支持很多种类型的泛型算法，就需要用到迭代器，迭代器抽象了那些访问读写操作，程序只需要操作迭代器而不用关心传入的东西的类型。\n\n- 输入迭代器(==,!=,++,*,->)\n- 输出迭代器(++,**)\n- 前向迭代器(支持多次扫描)\n- 双向迭代器(支持正反读写,--)\n- 随即访问迭代器(支持随即访问,能比较两个迭代器位置关系,+=，+，-，-=，下标[]等)\n\n### 算法命名规范\n\n除了传入首尾迭代器以外\n\n**使用重载来加入一个谓词参数**：\n\n```c++\nsort(beg, end);\nsort(beg, end, comp);\n```\n\n**_if版本**\n\n```c++\nfind(beg, end, val);\nfind_if(beg, end, perd);//第一个perd为真\n```\n\n**_copy版本**\n\n用于区分拷贝版和非拷贝版本\n","source":"_posts/04学习/cpp(1).md","raw":"---\ntitle: c++ primer 读书笔记(1)\ndate: 2022-06-16 03:46:12\ntags: 语言\ncategories:\n- c++\n---\n\n> \n包含以下内容：\n- 异常\n- IO流\n- 泛型\n\n<!-- more -->\n\n# 异常处理\n\n## throw try catch\n\nthrow可以抛出异常。\n\ntry代码块后需要跟着catch代码块用于获取并处理抛出的异常。会进入第一个符合catch获取异常的代码块。\n\n如果try语句有多层调用，会先找该层有没有适合的catch语句，再寻找上一层的，以此类推。如果都没有则会转到`terminate`的函数，导致程序非正常退出。\n\n当然如果没有try还发生了异常会直接`terminate`。\n\n```c++\ntry{\n    throw runtime_error(\"RE\");\n} catch(runtime_error err){\n    ...\n}\n```\n\n## 标准异常库\n\n定义了以下几种异常类型\n\n| 异常类型         | 内容     |\n| ---------------- | -------- |\n| exception        | 常见异常 |\n| runtime_error    | 运行时异常 |\n| range_error      |  RE:结果超出了有意义的值域        |\n| overflow_error   | RE:计算上溢         |\n| underflow_error  | RE:计算下溢         |\n| logic_error      |  逻辑错误        |\n| domain_error     | LE:参数对应结果不存在         |\n| invalid_argument | LE:无效参数         |\n| length_error     |  LE:创建一个超出该类型最大长度对象        |\n| out_of_range |LE:使用超出有效范围的值\t\t\t|\n\n除了exception,bad_alloc,bad_cast对象不能提供初始值，其他异常类型需要提供一个字符串(string/const char*)初始化，用于提供该异常的错误相关信息。\n\n异常的what成员函数返回该字符串初始值。不能返回的由编译器决定内容。\n\n# 调试帮助\n\n## assert\n\nassert是一个宏。\n\n代码`assert(expr);`的行为是先对expr求值，若expr为假，则输出信息并终止程序，若为真则什么都不做。\n\n如果使用了`#define`定义了`NDEBUG`，则assert什么都不做。\n\n## 一些变量\n\n`__func__`:当前调试的函数名\n\n`__FILE__`：当前文件名的字符串字面值\n\n`__LINE__`:当前行号的int\n\n`__TIME__`:文件编译时间字符串字面值\n\n`__DATE__`:文件编译日期字符串字面值\n\n---\n\n# IO\n\n##   头文件\n\n- `<iostream>`\n- `<fstream>`\n- `<sstream>`\n\n流对象会有状态`iostate`。\n\n`rdstate()`方法能获取流对象当前的状态。\n\n`setstate()`设置状态\n\n`good()`看流对象是否错误\n\n`clear()`恢复错误状态\n\n以及一堆东西用来管理。\n\n## 缓冲区\n\n输出流的内容可能会被输入到缓冲区中。等一个时间再写。\n\n`endl`会插入一个换行然后刷新\n\n`flush`刷新\n\n`ends`插入一个空字符然后刷新\n\n使用`unitbuf`操作符后会让流在之后的每次写操作后flush\n\n用`nounitbuf`后恢复\n\n## 关联\n\n`tie()`方法传入一个类引用/指针。\n\n如果输入流关联到输出流时，任何从输入流读数据的操作都会先刷新关联的输出流。\n\n## 文件流\n\n`fstream`\n\n初始化`fstream fs(s,mode);`传入文件名s，打开为文件流。模式为mode，该参数可选。\n\n`open()`方法，用fstream打开文件\n\n`close()`方法，关闭文件流\n\n`is_open()`方法，指出关联文件是否打开而且没有关闭。\n\n\n\n`ifstream`和`ofstream`文件输入输出流。\n\n如果`open()`失败了会置位`failbit`\n\n可以直接`if(fs)`来检测是否打开成功。\n\n## 流，文件模式\n\n可以指定文件模式\n\n| 文件模式 | 干嘛的                   |\n| -------- | ------------------------ |\n| in       | 读方式                   |\n| out      | 写方式                   |\n| app      | 写操作前定位到文件末尾   |\n| ate      | 打开文件后定位到文件末尾 |\n| trunc    | 截断文件                 |\n| binary   | 二进制io                 |\n\n- out模式只能设定给`ofstream`或者`fstream`\n\n- in模式只能给`ifstream` `fstream`\n\n- 没用`trunc`就可以用`app`\n\n**用`ostream`打开文件时文件内容会被扔掉**\n\n**除非指定app模式**\n\n```c++\nofstream out(\"a.txt\", ofstream::out | ofstream::app);\n```\n\n## sstream\n\n`stringstream`用string初始化咯。\n\n`str()`方法返回流保存string的拷贝\n\n`str(s)`方法把s拷贝到流里边然后返回void\n\n---\n\n# 泛型\n\n>  这部分感觉书的意思是stl风格的泛型算法？\n\n## 谓词\n\n> 谓词是一个可以调用的表达式，其返回结果是一个能作为条件的值。\n\nstl中接受一元或者二元谓词。\n\n举个例子，`sort()`函数的重载之一，接受的第三个参数就是谓词。\n\n也就是`sort(it.begin(),it.end(),cmp)；`中的cmp就是一个二元谓词，其是一个比较函数，返回`bool`类型。\n\n## lambda表达式\n\n谓词接受的参数个数是严格确定的，但是有时候谓词的内容可能是高度相似的，这是重写多个谓词不太合理，又不能把这部分单独设置成一个函数参数，就该用lambda了。\n\n```C++\n//结构\n[capture list](param list) -> return type {function body}\n```\n\nlambda表达式是一种可调用对象，函数，函数指针，以及重载了函数调用运算符的类也是可调用对象。\n\n我们可以忽略参数列表和返回类型，但是**必须**包含捕获列表和函数体。\n\n忽略返回类型的时候返回类型是自动推断的。\n\n```c++\nauto f = []{return -1;}\n```\n\n这时f就是一个可调用对象。\n\n用`f();`来调用。\n\n### 捕获列表\n\n在捕获列表中添加变量名，lambda的函数体内才能访问这些变量。\n\n```c++\n\tint a = 1;\n\tauto f = [a]() ->int {return a; };\n\tcout << f();\n```\n\n但是lambda的捕获列表是一如既往的延迟调用的。在定义的时候就复制了一份捕获列表内容。\n\n```c++\n\tint a = 1;\n\tauto f = [a]() ->int {return a; };\n\ta=2;\n\tcout << f();\n//依旧输出a\n```\n\n把列表内改为引用可以很显然地解决这个问题。\n\n还有一些更抽象的用法（隐式捕获）：\n\n- [=]可以捕获所有的变量\n- [&]可以捕获所有变量的引用\n\nf可以在别的函数里边定义：\n\n```c++\n\ntemplate <typename T>\nint func(T t) {\n\treturn int(t());\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tint a = 1;\n\tauto f = [&a] {return a; };\n\tcout<<func(f);\n\ta = 2;\n\tcout << func(f);\n}\n//输出1，2\n```\n\n### 可变lambda\n\n要是想改变捕获的被拷贝的变量，要加上mutable关键字。\n\n```c++\nint a = 0;\nauto f = [a] () mutable {return ++a;}\na = 10;\nf();//这时返回1，参数列表里边的a作为被拷贝变量被保存了。\n```\n\n感觉这个时候捕获列表复制之后，就变成了一个同名的作用域不一样的局部变量？\n\n\n\nlambda就是可以就地声明匿名函数，让调用更加方便了！\n\n当然新写一个class重载`()`操作符搞一个仿函数也是一样的效果，大概。\n\n## bind函数\n\n`bind`函数被定义在`<functional>`内。\n\n作用是接受一个可调用对象以及一个参数列表，生成一个新的可调用对象来适应这些参数列表。\n\n```c++\nauto newCallable = bind(callable , arg_list);\n```\n\n相当于调用`newCallable`的时候这玩意把`arg_list`里的参数传给`callale`\n\n`_n`占位符意味着`newCallable`里的第n个参数。\n\n`_n`被定义在`std::placeholders`命名空间里边。\n\n```c++\nauto f1 = [](int a,int b){\n    return a-b;\n}\nauto f2 = bind(f1,2,_1);\nf(1);//返回2-1=1\n```\n\n## 迭代器\n\nio流也有迭代器。\n\n`istream_iterator`和`ostream_iterator`\n\n## 泛型！\n\n要构造支持很多种类型的泛型算法，就需要用到迭代器，迭代器抽象了那些访问读写操作，程序只需要操作迭代器而不用关心传入的东西的类型。\n\n- 输入迭代器(==,!=,++,*,->)\n- 输出迭代器(++,**)\n- 前向迭代器(支持多次扫描)\n- 双向迭代器(支持正反读写,--)\n- 随即访问迭代器(支持随即访问,能比较两个迭代器位置关系,+=，+，-，-=，下标[]等)\n\n### 算法命名规范\n\n除了传入首尾迭代器以外\n\n**使用重载来加入一个谓词参数**：\n\n```c++\nsort(beg, end);\nsort(beg, end, comp);\n```\n\n**_if版本**\n\n```c++\nfind(beg, end, val);\nfind_if(beg, end, perd);//第一个perd为真\n```\n\n**_copy版本**\n\n用于区分拷贝版和非拷贝版本\n","slug":"04学习/cpp(1)","published":1,"updated":"2022-06-16T11:57:39.855Z","_id":"clobly6da0013zowbf72sf8q8","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote></blockquote>\n<p>包含以下内容：</p>\n<ul>\n<li>异常</li>\n<li>IO流</li>\n<li>泛型</li>\n</ul>\n<span id=\"more\"></span>\n<h1 id=\"异常处理\"><a class=\"markdownIt-Anchor\" href=\"#异常处理\"></a> 异常处理</h1>\n<h2 id=\"throw-try-catch\"><a class=\"markdownIt-Anchor\" href=\"#throw-try-catch\"></a> throw try catch</h2>\n<p>throw可以抛出异常。</p>\n<p>try代码块后需要跟着catch代码块用于获取并处理抛出的异常。会进入第一个符合catch获取异常的代码块。</p>\n<p>如果try语句有多层调用，会先找该层有没有适合的catch语句，再寻找上一层的，以此类推。如果都没有则会转到<code>terminate</code>的函数，导致程序非正常退出。</p>\n<p>当然如果没有try还发生了异常会直接<code>terminate</code>。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"built_in\">runtime_error</span>(<span class=\"string\">&quot;RE&quot;</span>);</span><br><span class=\"line\">&#125; <span class=\"built_in\"><span class=\"keyword\">catch</span></span>(runtime_error err)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"标准异常库\"><a class=\"markdownIt-Anchor\" href=\"#标准异常库\"></a> 标准异常库</h2>\n<p>定义了以下几种异常类型</p>\n<table>\n<thead>\n<tr>\n<th>异常类型</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exception</td>\n<td>常见异常</td>\n</tr>\n<tr>\n<td>runtime_error</td>\n<td>运行时异常</td>\n</tr>\n<tr>\n<td>range_error</td>\n<td>RE:结果超出了有意义的值域</td>\n</tr>\n<tr>\n<td>overflow_error</td>\n<td>RE:计算上溢</td>\n</tr>\n<tr>\n<td>underflow_error</td>\n<td>RE:计算下溢</td>\n</tr>\n<tr>\n<td>logic_error</td>\n<td>逻辑错误</td>\n</tr>\n<tr>\n<td>domain_error</td>\n<td>LE:参数对应结果不存在</td>\n</tr>\n<tr>\n<td>invalid_argument</td>\n<td>LE:无效参数</td>\n</tr>\n<tr>\n<td>length_error</td>\n<td>LE:创建一个超出该类型最大长度对象</td>\n</tr>\n<tr>\n<td>out_of_range</td>\n<td>LE:使用超出有效范围的值</td>\n</tr>\n</tbody>\n</table>\n<p>除了exception,bad_alloc,bad_cast对象不能提供初始值，其他异常类型需要提供一个字符串(string/const char*)初始化，用于提供该异常的错误相关信息。</p>\n<p>异常的what成员函数返回该字符串初始值。不能返回的由编译器决定内容。</p>\n<h1 id=\"调试帮助\"><a class=\"markdownIt-Anchor\" href=\"#调试帮助\"></a> 调试帮助</h1>\n<h2 id=\"assert\"><a class=\"markdownIt-Anchor\" href=\"#assert\"></a> assert</h2>\n<p>assert是一个宏。</p>\n<p>代码<code>assert(expr);</code>的行为是先对expr求值，若expr为假，则输出信息并终止程序，若为真则什么都不做。</p>\n<p>如果使用了<code>#define</code>定义了<code>NDEBUG</code>，则assert什么都不做。</p>\n<h2 id=\"一些变量\"><a class=\"markdownIt-Anchor\" href=\"#一些变量\"></a> 一些变量</h2>\n<p><code>__func__</code>:当前调试的函数名</p>\n<p><code>__FILE__</code>：当前文件名的字符串字面值</p>\n<p><code>__LINE__</code>:当前行号的int</p>\n<p><code>__TIME__</code>:文件编译时间字符串字面值</p>\n<p><code>__DATE__</code>:文件编译日期字符串字面值</p>\n<hr />\n<h1 id=\"io\"><a class=\"markdownIt-Anchor\" href=\"#io\"></a> IO</h1>\n<h2 id=\"头文件\"><a class=\"markdownIt-Anchor\" href=\"#头文件\"></a> 头文件</h2>\n<ul>\n<li><code>&lt;iostream&gt;</code></li>\n<li><code>&lt;fstream&gt;</code></li>\n<li><code>&lt;sstream&gt;</code></li>\n</ul>\n<p>流对象会有状态<code>iostate</code>。</p>\n<p><code>rdstate()</code>方法能获取流对象当前的状态。</p>\n<p><code>setstate()</code>设置状态</p>\n<p><code>good()</code>看流对象是否错误</p>\n<p><code>clear()</code>恢复错误状态</p>\n<p>以及一堆东西用来管理。</p>\n<h2 id=\"缓冲区\"><a class=\"markdownIt-Anchor\" href=\"#缓冲区\"></a> 缓冲区</h2>\n<p>输出流的内容可能会被输入到缓冲区中。等一个时间再写。</p>\n<p><code>endl</code>会插入一个换行然后刷新</p>\n<p><code>flush</code>刷新</p>\n<p><code>ends</code>插入一个空字符然后刷新</p>\n<p>使用<code>unitbuf</code>操作符后会让流在之后的每次写操作后flush</p>\n<p>用<code>nounitbuf</code>后恢复</p>\n<h2 id=\"关联\"><a class=\"markdownIt-Anchor\" href=\"#关联\"></a> 关联</h2>\n<p><code>tie()</code>方法传入一个类引用/指针。</p>\n<p>如果输入流关联到输出流时，任何从输入流读数据的操作都会先刷新关联的输出流。</p>\n<h2 id=\"文件流\"><a class=\"markdownIt-Anchor\" href=\"#文件流\"></a> 文件流</h2>\n<p><code>fstream</code></p>\n<p>初始化<code>fstream fs(s,mode);</code>传入文件名s，打开为文件流。模式为mode，该参数可选。</p>\n<p><code>open()</code>方法，用fstream打开文件</p>\n<p><code>close()</code>方法，关闭文件流</p>\n<p><code>is_open()</code>方法，指出关联文件是否打开而且没有关闭。</p>\n<p><code>ifstream</code>和<code>ofstream</code>文件输入输出流。</p>\n<p>如果<code>open()</code>失败了会置位<code>failbit</code></p>\n<p>可以直接<code>if(fs)</code>来检测是否打开成功。</p>\n<h2 id=\"流文件模式\"><a class=\"markdownIt-Anchor\" href=\"#流文件模式\"></a> 流，文件模式</h2>\n<p>可以指定文件模式</p>\n<table>\n<thead>\n<tr>\n<th>文件模式</th>\n<th>干嘛的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>读方式</td>\n</tr>\n<tr>\n<td>out</td>\n<td>写方式</td>\n</tr>\n<tr>\n<td>app</td>\n<td>写操作前定位到文件末尾</td>\n</tr>\n<tr>\n<td>ate</td>\n<td>打开文件后定位到文件末尾</td>\n</tr>\n<tr>\n<td>trunc</td>\n<td>截断文件</td>\n</tr>\n<tr>\n<td>binary</td>\n<td>二进制io</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>out模式只能设定给<code>ofstream</code>或者<code>fstream</code></p>\n</li>\n<li>\n<p>in模式只能给<code>ifstream</code> <code>fstream</code></p>\n</li>\n<li>\n<p>没用<code>trunc</code>就可以用<code>app</code></p>\n</li>\n</ul>\n<p><strong>用<code>ostream</code>打开文件时文件内容会被扔掉</strong></p>\n<p><strong>除非指定app模式</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ofstream <span class=\"title\">out</span><span class=\"params\">(<span class=\"string\">&quot;a.txt&quot;</span>, ofstream::out | ofstream::app)</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"sstream\"><a class=\"markdownIt-Anchor\" href=\"#sstream\"></a> sstream</h2>\n<p><code>stringstream</code>用string初始化咯。</p>\n<p><code>str()</code>方法返回流保存string的拷贝</p>\n<p><code>str(s)</code>方法把s拷贝到流里边然后返回void</p>\n<hr />\n<h1 id=\"泛型\"><a class=\"markdownIt-Anchor\" href=\"#泛型\"></a> 泛型</h1>\n<blockquote>\n<p>这部分感觉书的意思是stl风格的泛型算法？</p>\n</blockquote>\n<h2 id=\"谓词\"><a class=\"markdownIt-Anchor\" href=\"#谓词\"></a> 谓词</h2>\n<blockquote>\n<p>谓词是一个可以调用的表达式，其返回结果是一个能作为条件的值。</p>\n</blockquote>\n<p>stl中接受一元或者二元谓词。</p>\n<p>举个例子，<code>sort()</code>函数的重载之一，接受的第三个参数就是谓词。</p>\n<p>也就是<code>sort(it.begin(),it.end(),cmp)；</code>中的cmp就是一个二元谓词，其是一个比较函数，返回<code>bool</code>类型。</p>\n<h2 id=\"lambda表达式\"><a class=\"markdownIt-Anchor\" href=\"#lambda表达式\"></a> lambda表达式</h2>\n<p>谓词接受的参数个数是严格确定的，但是有时候谓词的内容可能是高度相似的，这是重写多个谓词不太合理，又不能把这部分单独设置成一个函数参数，就该用lambda了。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构</span></span><br><span class=\"line\">[capture list](param list) -&gt; <span class=\"keyword\">return</span> type &#123;function body&#125;</span><br></pre></td></tr></table></figure>\n<p>lambda表达式是一种可调用对象，函数，函数指针，以及重载了函数调用运算符的类也是可调用对象。</p>\n<p>我们可以忽略参数列表和返回类型，但是<strong>必须</strong>包含捕获列表和函数体。</p>\n<p>忽略返回类型的时候返回类型是自动推断的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> f = []&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>这时f就是一个可调用对象。</p>\n<p>用<code>f();</code>来调用。</p>\n<h3 id=\"捕获列表\"><a class=\"markdownIt-Anchor\" href=\"#捕获列表\"></a> 捕获列表</h3>\n<p>在捕获列表中添加变量名，lambda的函数体内才能访问这些变量。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f = [a]() -&gt;<span class=\"keyword\">int</span> &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">f</span>();</span><br></pre></td></tr></table></figure>\n<p>但是lambda的捕获列表是一如既往的延迟调用的。在定义的时候就复制了一份捕获列表内容。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> f = [a]() -&gt;<span class=\"keyword\">int</span> &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">\ta=<span class=\"number\">2</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">f</span>();</span><br><span class=\"line\"><span class=\"comment\">//依旧输出a</span></span><br></pre></td></tr></table></figure>\n<p>把列表内改为引用可以很显然地解决这个问题。</p>\n<p>还有一些更抽象的用法（隐式捕获）：</p>\n<ul>\n<li>[=]可以捕获所有的变量</li>\n<li>[&amp;]可以捕获所有变量的引用</li>\n</ul>\n<p>f可以在别的函数里边定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">func</span><span class=\"params\">(T t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\"><span class=\"keyword\">int</span></span>(<span class=\"built_in\">t</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> f = [&amp;a] &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">\tcout&lt;&lt;<span class=\"built_in\">func</span>(f);</span><br><span class=\"line\">\ta = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">func</span>(f);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//输出1，2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"可变lambda\"><a class=\"markdownIt-Anchor\" href=\"#可变lambda\"></a> 可变lambda</h3>\n<p>要是想改变捕获的被拷贝的变量，要加上mutable关键字。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f = [a] () <span class=\"keyword\">mutable</span> &#123;<span class=\"keyword\">return</span> ++a;&#125;</span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">f</span>();<span class=\"comment\">//这时返回1，参数列表里边的a作为被拷贝变量被保存了。</span></span><br></pre></td></tr></table></figure>\n<p>感觉这个时候捕获列表复制之后，就变成了一个同名的作用域不一样的局部变量？</p>\n<p>lambda就是可以就地声明匿名函数，让调用更加方便了！</p>\n<p>当然新写一个class重载<code>()</code>操作符搞一个仿函数也是一样的效果，大概。</p>\n<h2 id=\"bind函数\"><a class=\"markdownIt-Anchor\" href=\"#bind函数\"></a> bind函数</h2>\n<p><code>bind</code>函数被定义在<code>&lt;functional&gt;</code>内。</p>\n<p>作用是接受一个可调用对象以及一个参数列表，生成一个新的可调用对象来适应这些参数列表。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> newCallable = <span class=\"built_in\">bind</span>(callable , arg_list);</span><br></pre></td></tr></table></figure>\n<p>相当于调用<code>newCallable</code>的时候这玩意把<code>arg_list</code>里的参数传给<code>callale</code></p>\n<p><code>_n</code>占位符意味着<code>newCallable</code>里的第n个参数。</p>\n<p><code>_n</code>被定义在<code>std::placeholders</code>命名空间里边。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> f1 = [](<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f2 = <span class=\"built_in\">bind</span>(f1,<span class=\"number\">2</span>,_1);</span><br><span class=\"line\"><span class=\"built_in\">f</span>(<span class=\"number\">1</span>);<span class=\"comment\">//返回2-1=1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"迭代器\"><a class=\"markdownIt-Anchor\" href=\"#迭代器\"></a> 迭代器</h2>\n<p>io流也有迭代器。</p>\n<p><code>istream_iterator</code>和<code>ostream_iterator</code></p>\n<h2 id=\"泛型-2\"><a class=\"markdownIt-Anchor\" href=\"#泛型-2\"></a> 泛型！</h2>\n<p>要构造支持很多种类型的泛型算法，就需要用到迭代器，迭代器抽象了那些访问读写操作，程序只需要操作迭代器而不用关心传入的东西的类型。</p>\n<ul>\n<li>输入迭代器(==,!=,++,*,-&gt;)</li>\n<li>输出迭代器(++,**)</li>\n<li>前向迭代器(支持多次扫描)</li>\n<li>双向迭代器(支持正反读写,–)</li>\n<li>随即访问迭代器(支持随即访问,能比较两个迭代器位置关系,+=，+，-，-=，下标[]等)</li>\n</ul>\n<h3 id=\"算法命名规范\"><a class=\"markdownIt-Anchor\" href=\"#算法命名规范\"></a> 算法命名规范</h3>\n<p>除了传入首尾迭代器以外</p>\n<p><strong>使用重载来加入一个谓词参数</strong>：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span>(beg, end);</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(beg, end, comp);</span><br></pre></td></tr></table></figure>\n<p><strong>_if版本</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span>(beg, end, val);</span><br><span class=\"line\"><span class=\"built_in\">find_if</span>(beg, end, perd);<span class=\"comment\">//第一个perd为真</span></span><br></pre></td></tr></table></figure>\n<p><strong>_copy版本</strong></p>\n<p>用于区分拷贝版和非拷贝版本</p>\n","site":{"data":{}},"excerpt":"<blockquote></blockquote>\n<p>包含以下内容：</p>\n<ul>\n<li>异常</li>\n<li>IO流</li>\n<li>泛型</li>\n</ul>","more":"<h1 id=\"异常处理\"><a class=\"markdownIt-Anchor\" href=\"#异常处理\"></a> 异常处理</h1>\n<h2 id=\"throw-try-catch\"><a class=\"markdownIt-Anchor\" href=\"#throw-try-catch\"></a> throw try catch</h2>\n<p>throw可以抛出异常。</p>\n<p>try代码块后需要跟着catch代码块用于获取并处理抛出的异常。会进入第一个符合catch获取异常的代码块。</p>\n<p>如果try语句有多层调用，会先找该层有没有适合的catch语句，再寻找上一层的，以此类推。如果都没有则会转到<code>terminate</code>的函数，导致程序非正常退出。</p>\n<p>当然如果没有try还发生了异常会直接<code>terminate</code>。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"built_in\">runtime_error</span>(<span class=\"string\">&quot;RE&quot;</span>);</span><br><span class=\"line\">&#125; <span class=\"built_in\"><span class=\"keyword\">catch</span></span>(runtime_error err)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"标准异常库\"><a class=\"markdownIt-Anchor\" href=\"#标准异常库\"></a> 标准异常库</h2>\n<p>定义了以下几种异常类型</p>\n<table>\n<thead>\n<tr>\n<th>异常类型</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exception</td>\n<td>常见异常</td>\n</tr>\n<tr>\n<td>runtime_error</td>\n<td>运行时异常</td>\n</tr>\n<tr>\n<td>range_error</td>\n<td>RE:结果超出了有意义的值域</td>\n</tr>\n<tr>\n<td>overflow_error</td>\n<td>RE:计算上溢</td>\n</tr>\n<tr>\n<td>underflow_error</td>\n<td>RE:计算下溢</td>\n</tr>\n<tr>\n<td>logic_error</td>\n<td>逻辑错误</td>\n</tr>\n<tr>\n<td>domain_error</td>\n<td>LE:参数对应结果不存在</td>\n</tr>\n<tr>\n<td>invalid_argument</td>\n<td>LE:无效参数</td>\n</tr>\n<tr>\n<td>length_error</td>\n<td>LE:创建一个超出该类型最大长度对象</td>\n</tr>\n<tr>\n<td>out_of_range</td>\n<td>LE:使用超出有效范围的值</td>\n</tr>\n</tbody>\n</table>\n<p>除了exception,bad_alloc,bad_cast对象不能提供初始值，其他异常类型需要提供一个字符串(string/const char*)初始化，用于提供该异常的错误相关信息。</p>\n<p>异常的what成员函数返回该字符串初始值。不能返回的由编译器决定内容。</p>\n<h1 id=\"调试帮助\"><a class=\"markdownIt-Anchor\" href=\"#调试帮助\"></a> 调试帮助</h1>\n<h2 id=\"assert\"><a class=\"markdownIt-Anchor\" href=\"#assert\"></a> assert</h2>\n<p>assert是一个宏。</p>\n<p>代码<code>assert(expr);</code>的行为是先对expr求值，若expr为假，则输出信息并终止程序，若为真则什么都不做。</p>\n<p>如果使用了<code>#define</code>定义了<code>NDEBUG</code>，则assert什么都不做。</p>\n<h2 id=\"一些变量\"><a class=\"markdownIt-Anchor\" href=\"#一些变量\"></a> 一些变量</h2>\n<p><code>__func__</code>:当前调试的函数名</p>\n<p><code>__FILE__</code>：当前文件名的字符串字面值</p>\n<p><code>__LINE__</code>:当前行号的int</p>\n<p><code>__TIME__</code>:文件编译时间字符串字面值</p>\n<p><code>__DATE__</code>:文件编译日期字符串字面值</p>\n<hr />\n<h1 id=\"io\"><a class=\"markdownIt-Anchor\" href=\"#io\"></a> IO</h1>\n<h2 id=\"头文件\"><a class=\"markdownIt-Anchor\" href=\"#头文件\"></a> 头文件</h2>\n<ul>\n<li><code>&lt;iostream&gt;</code></li>\n<li><code>&lt;fstream&gt;</code></li>\n<li><code>&lt;sstream&gt;</code></li>\n</ul>\n<p>流对象会有状态<code>iostate</code>。</p>\n<p><code>rdstate()</code>方法能获取流对象当前的状态。</p>\n<p><code>setstate()</code>设置状态</p>\n<p><code>good()</code>看流对象是否错误</p>\n<p><code>clear()</code>恢复错误状态</p>\n<p>以及一堆东西用来管理。</p>\n<h2 id=\"缓冲区\"><a class=\"markdownIt-Anchor\" href=\"#缓冲区\"></a> 缓冲区</h2>\n<p>输出流的内容可能会被输入到缓冲区中。等一个时间再写。</p>\n<p><code>endl</code>会插入一个换行然后刷新</p>\n<p><code>flush</code>刷新</p>\n<p><code>ends</code>插入一个空字符然后刷新</p>\n<p>使用<code>unitbuf</code>操作符后会让流在之后的每次写操作后flush</p>\n<p>用<code>nounitbuf</code>后恢复</p>\n<h2 id=\"关联\"><a class=\"markdownIt-Anchor\" href=\"#关联\"></a> 关联</h2>\n<p><code>tie()</code>方法传入一个类引用/指针。</p>\n<p>如果输入流关联到输出流时，任何从输入流读数据的操作都会先刷新关联的输出流。</p>\n<h2 id=\"文件流\"><a class=\"markdownIt-Anchor\" href=\"#文件流\"></a> 文件流</h2>\n<p><code>fstream</code></p>\n<p>初始化<code>fstream fs(s,mode);</code>传入文件名s，打开为文件流。模式为mode，该参数可选。</p>\n<p><code>open()</code>方法，用fstream打开文件</p>\n<p><code>close()</code>方法，关闭文件流</p>\n<p><code>is_open()</code>方法，指出关联文件是否打开而且没有关闭。</p>\n<p><code>ifstream</code>和<code>ofstream</code>文件输入输出流。</p>\n<p>如果<code>open()</code>失败了会置位<code>failbit</code></p>\n<p>可以直接<code>if(fs)</code>来检测是否打开成功。</p>\n<h2 id=\"流文件模式\"><a class=\"markdownIt-Anchor\" href=\"#流文件模式\"></a> 流，文件模式</h2>\n<p>可以指定文件模式</p>\n<table>\n<thead>\n<tr>\n<th>文件模式</th>\n<th>干嘛的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>读方式</td>\n</tr>\n<tr>\n<td>out</td>\n<td>写方式</td>\n</tr>\n<tr>\n<td>app</td>\n<td>写操作前定位到文件末尾</td>\n</tr>\n<tr>\n<td>ate</td>\n<td>打开文件后定位到文件末尾</td>\n</tr>\n<tr>\n<td>trunc</td>\n<td>截断文件</td>\n</tr>\n<tr>\n<td>binary</td>\n<td>二进制io</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>out模式只能设定给<code>ofstream</code>或者<code>fstream</code></p>\n</li>\n<li>\n<p>in模式只能给<code>ifstream</code> <code>fstream</code></p>\n</li>\n<li>\n<p>没用<code>trunc</code>就可以用<code>app</code></p>\n</li>\n</ul>\n<p><strong>用<code>ostream</code>打开文件时文件内容会被扔掉</strong></p>\n<p><strong>除非指定app模式</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ofstream <span class=\"title\">out</span><span class=\"params\">(<span class=\"string\">&quot;a.txt&quot;</span>, ofstream::out | ofstream::app)</span></span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"sstream\"><a class=\"markdownIt-Anchor\" href=\"#sstream\"></a> sstream</h2>\n<p><code>stringstream</code>用string初始化咯。</p>\n<p><code>str()</code>方法返回流保存string的拷贝</p>\n<p><code>str(s)</code>方法把s拷贝到流里边然后返回void</p>\n<hr />\n<h1 id=\"泛型\"><a class=\"markdownIt-Anchor\" href=\"#泛型\"></a> 泛型</h1>\n<blockquote>\n<p>这部分感觉书的意思是stl风格的泛型算法？</p>\n</blockquote>\n<h2 id=\"谓词\"><a class=\"markdownIt-Anchor\" href=\"#谓词\"></a> 谓词</h2>\n<blockquote>\n<p>谓词是一个可以调用的表达式，其返回结果是一个能作为条件的值。</p>\n</blockquote>\n<p>stl中接受一元或者二元谓词。</p>\n<p>举个例子，<code>sort()</code>函数的重载之一，接受的第三个参数就是谓词。</p>\n<p>也就是<code>sort(it.begin(),it.end(),cmp)；</code>中的cmp就是一个二元谓词，其是一个比较函数，返回<code>bool</code>类型。</p>\n<h2 id=\"lambda表达式\"><a class=\"markdownIt-Anchor\" href=\"#lambda表达式\"></a> lambda表达式</h2>\n<p>谓词接受的参数个数是严格确定的，但是有时候谓词的内容可能是高度相似的，这是重写多个谓词不太合理，又不能把这部分单独设置成一个函数参数，就该用lambda了。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构</span></span><br><span class=\"line\">[capture list](param list) -&gt; <span class=\"keyword\">return</span> type &#123;function body&#125;</span><br></pre></td></tr></table></figure>\n<p>lambda表达式是一种可调用对象，函数，函数指针，以及重载了函数调用运算符的类也是可调用对象。</p>\n<p>我们可以忽略参数列表和返回类型，但是<strong>必须</strong>包含捕获列表和函数体。</p>\n<p>忽略返回类型的时候返回类型是自动推断的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> f = []&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>这时f就是一个可调用对象。</p>\n<p>用<code>f();</code>来调用。</p>\n<h3 id=\"捕获列表\"><a class=\"markdownIt-Anchor\" href=\"#捕获列表\"></a> 捕获列表</h3>\n<p>在捕获列表中添加变量名，lambda的函数体内才能访问这些变量。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f = [a]() -&gt;<span class=\"keyword\">int</span> &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"built_in\">f</span>();</span><br></pre></td></tr></table></figure>\n<p>但是lambda的捕获列表是一如既往的延迟调用的。在定义的时候就复制了一份捕获列表内容。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> f = [a]() -&gt;<span class=\"keyword\">int</span> &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">\ta=<span class=\"number\">2</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">f</span>();</span><br><span class=\"line\"><span class=\"comment\">//依旧输出a</span></span><br></pre></td></tr></table></figure>\n<p>把列表内改为引用可以很显然地解决这个问题。</p>\n<p>还有一些更抽象的用法（隐式捕获）：</p>\n<ul>\n<li>[=]可以捕获所有的变量</li>\n<li>[&amp;]可以捕获所有变量的引用</li>\n</ul>\n<p>f可以在别的函数里边定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">func</span><span class=\"params\">(T t)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\"><span class=\"keyword\">int</span></span>(<span class=\"built_in\">t</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> f = [&amp;a] &#123;<span class=\"keyword\">return</span> a; &#125;;</span><br><span class=\"line\">\tcout&lt;&lt;<span class=\"built_in\">func</span>(f);</span><br><span class=\"line\">\ta = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">func</span>(f);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//输出1，2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"可变lambda\"><a class=\"markdownIt-Anchor\" href=\"#可变lambda\"></a> 可变lambda</h3>\n<p>要是想改变捕获的被拷贝的变量，要加上mutable关键字。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f = [a] () <span class=\"keyword\">mutable</span> &#123;<span class=\"keyword\">return</span> ++a;&#125;</span><br><span class=\"line\">a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">f</span>();<span class=\"comment\">//这时返回1，参数列表里边的a作为被拷贝变量被保存了。</span></span><br></pre></td></tr></table></figure>\n<p>感觉这个时候捕获列表复制之后，就变成了一个同名的作用域不一样的局部变量？</p>\n<p>lambda就是可以就地声明匿名函数，让调用更加方便了！</p>\n<p>当然新写一个class重载<code>()</code>操作符搞一个仿函数也是一样的效果，大概。</p>\n<h2 id=\"bind函数\"><a class=\"markdownIt-Anchor\" href=\"#bind函数\"></a> bind函数</h2>\n<p><code>bind</code>函数被定义在<code>&lt;functional&gt;</code>内。</p>\n<p>作用是接受一个可调用对象以及一个参数列表，生成一个新的可调用对象来适应这些参数列表。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> newCallable = <span class=\"built_in\">bind</span>(callable , arg_list);</span><br></pre></td></tr></table></figure>\n<p>相当于调用<code>newCallable</code>的时候这玩意把<code>arg_list</code>里的参数传给<code>callale</code></p>\n<p><code>_n</code>占位符意味着<code>newCallable</code>里的第n个参数。</p>\n<p><code>_n</code>被定义在<code>std::placeholders</code>命名空间里边。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> f1 = [](<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> f2 = <span class=\"built_in\">bind</span>(f1,<span class=\"number\">2</span>,_1);</span><br><span class=\"line\"><span class=\"built_in\">f</span>(<span class=\"number\">1</span>);<span class=\"comment\">//返回2-1=1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"迭代器\"><a class=\"markdownIt-Anchor\" href=\"#迭代器\"></a> 迭代器</h2>\n<p>io流也有迭代器。</p>\n<p><code>istream_iterator</code>和<code>ostream_iterator</code></p>\n<h2 id=\"泛型-2\"><a class=\"markdownIt-Anchor\" href=\"#泛型-2\"></a> 泛型！</h2>\n<p>要构造支持很多种类型的泛型算法，就需要用到迭代器，迭代器抽象了那些访问读写操作，程序只需要操作迭代器而不用关心传入的东西的类型。</p>\n<ul>\n<li>输入迭代器(==,!=,++,*,-&gt;)</li>\n<li>输出迭代器(++,**)</li>\n<li>前向迭代器(支持多次扫描)</li>\n<li>双向迭代器(支持正反读写,–)</li>\n<li>随即访问迭代器(支持随即访问,能比较两个迭代器位置关系,+=，+，-，-=，下标[]等)</li>\n</ul>\n<h3 id=\"算法命名规范\"><a class=\"markdownIt-Anchor\" href=\"#算法命名规范\"></a> 算法命名规范</h3>\n<p>除了传入首尾迭代器以外</p>\n<p><strong>使用重载来加入一个谓词参数</strong>：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span>(beg, end);</span><br><span class=\"line\"><span class=\"built_in\">sort</span>(beg, end, comp);</span><br></pre></td></tr></table></figure>\n<p><strong>_if版本</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span>(beg, end, val);</span><br><span class=\"line\"><span class=\"built_in\">find_if</span>(beg, end, perd);<span class=\"comment\">//第一个perd为真</span></span><br></pre></td></tr></table></figure>\n<p><strong>_copy版本</strong></p>\n<p>用于区分拷贝版和非拷贝版本</p>"},{"title":"JAVA快速入门(1)","date":"2022-04-24T20:30:00.000Z","_content":"\n# 引言\n\n为了应付大作业，特地速成一哈JVAV\n\n省略了一堆东西\n\n估计过几天会继续写后篇，到时候再看吧。\n\n内容包括\n\n- 语法快速入门（这玩意和cpp大部分很像所以没咋写）\n- 面向对象基础\n- 杂项\n- 一些核心类\n- ？\n<!-- more -->\n\n---\n\n# 声明\n\n## 和cpp不同的部分\n\n```java\nint[] a = new int[5];\t//数组\nvar a = new int[5];\t\t//自动类型推导\n```\n\nps.\n\n**任何数组都是引用类型！**\n\n**string也是！**\n\n**实例化的对象也是！**\n\n这时候要判断是不是相等要用\n\n`a.equals(b)`的方法\n\n这个时候赋值是引用类型参数绑定\n\n感觉有点像指针。。还有那个python的原理\n\n---\n\n# 方法\n\n## 可变参数\n\n类似函数传入数组，用`类型...`定义\n\n```java\nclass Group {\n    private String[] names;\n\n    public void setNames(String... names) {\n        this.names = names;\n    }\n}\n```\n\n传入可以直接传入多个string\n\n\n\n## 构造方法\n\n类构造时调用的方法\t~~构造函数~~\n\n可以重载\n\n```java\nclass Group {\n    public Group{}\n}\n```\n\n\n\n## 实例化\n\n```java\nA a = new A();\n```\n\n----\n\n# 类的一些东西\n\n## 继承\n\njava是单继承的，用`extends`关键字\n\n```java\nclass B extends A{\n}\n```\n\n经典`protected`类型，令子类可以访问父类的内容\n\n**很显然，子类不应该定义和父类重名的字段，private也不行**\n\n\n\n## super\n\n`super`代表了父类，`super();`即父类的构造方法\n\n实例化类的时候，会默认调用一个无参的`super();`\n\n如果此时父类没有无参构造方法会报错\n\n解决方法是手动在类构造函数上加一句父类对应的`super(xxxx);`\n\n**子类不会继承任何父类的构造方法**\n\n\n\n## 阻止继承\n\n感觉暂时用不上\n\n```java\npublic sealed class A permits B, C {\n}\n```\n\n用`sealed`和`permits`可以让只有指定的类才能继承该类\n\n\n\n## 上/下转型\n\n**继承树object>a>b**\n\n向上：\n\n直接用引用变量指向子类实例就行\n\n```java\nA a = new B();\n```\n\n向下：\n\n父类类型强转到子类类型\n\n```java\nA a = new B();\nB b = new B();\nb = (B)a;\n```\n\n`instanceof`为操作符，判断一个东西是不是指定类型\n\n```java\nObject obj = \"hello\";\nif (obj instanceof String) {\n    String s = (String) obj;\n}\n//或者可以直接一起转型\nObject obj = \"hello\";\nif (obj instanceof String s) {// 可以直接使用变量s            \n\tSystem.out.println(s.toUpperCase());\n}\n```\n\n\n\n这种转型有时候我们在方法中传递形参为父类，又想调用子类的方法时，在确定了传入实参为子类后可以进行一个强转。\n\n\n\n# 多态\n\n## override\n\n首先说明方法签名：\n\n- 方法名\n- 参数列表\n\n如果子类的一个方法方法签名和父类的完全一致，则子类会覆写父类的方法\n\n使用`@Override`修饰，编译器还会帮助检查是否为覆写而非重载\n\n`@Override`并非必须\n\n**java调用方法时根据的是对象真正的类型而不是引用的类型进行调用**\n\n\n\n## 多态\n\n> 多态是指，针对某个类型的方法调用，其真正执行的方法取决于运行时期实际类型的方法\n\n如果调用父类被覆写了的方法\n\n可以使用`super.方法名()`来调用\n\n`final` 感觉类似const\n\nfinal修饰的类无法继承，final修饰的方法不会被覆写，final修饰的变量初始化之后无法更改\n\n\n## 抽象类\n\n类似cpp里边的虚函数，其实就是父类单纯提供方法签名而不实现任何功能，即抽象方法的时候用的。\n\n这样就能构成多态。\n\n使用`abstract\t`修饰就完了，定义了抽象方法的类也要一样地修饰，这就是抽象类\n\n~~和cpp一样~~抽象类无法实例化\n\n```java\nabstract class Person {\n    public abstract void run();\n}\n```\n\n\n\n所有这些东西的主要思想其实就是呃（抄的）\n\n- 上层代码只定义规范（例如：`abstract class Person`）；\n- 不需要子类就可以实现业务逻辑（正常编译）；\n- 具体的业务逻辑由不同的子类实现，调用者并不关心。\n\n----\n\n# 接口\n\n## 接口本质是更抽象的抽象类\n\n如果一个抽象类没有字段，所有方法全部都是抽象方法，就可以用接口改写。\n\n使用`interface`声明，这里边的东西直接默认是`public abstract`\n\n```java\ninterface A {\n    void run();\n    String asdf();\n}\n```\n\n那么我们该如何使用这玩意呢\n\n使用`implements`实现,\n\n而且一个类可以实现多个接口\n\n```java\nclass Student implements Person, Hello { // 实现了两个interface\n    ...\n}\n```\n\n\n\n## 有关接口继承\n\n这玩意看着好复杂....\n\n一个`interface`可以继承自另一个`interface`。`interface`继承自`interface`使用`extends`，它相当于扩展了接口的方法。\n\n我们还可以定义`default`方法，\n\n这个相当于抽象类中有具体实现的那些方法。\n\n这样继承这个接口的所有子类也可以直接用这个方法。\n\n```java\ninterface A {\n    void run();\n    default String asdf();\n}\n\nclass B implements A{\n    void run(){\n        asdf();\n    }\n}\n```\n\n---\n\n# 一些杂项\n\n## 静态字段\n\n**静态字段啥的跟cpp类里边的差不多，静态方法是可以直接用方法名调用，类似正常的函数，但是他显然不能访问实例的非静态字段**\n\n使用`static`修饰，懂得都懂（\n\n\n\n## 包\n\n~~类似命名空间~~\n\n> Java定义了一种名字空间，称之为包：`package`。一个类总是属于某个包，类名（比如`Person`）只是一个简写，真正的完整类名是`包名.类名`。\n\n位于同一个包的类，可以访问包作用域的字段和方法。不用`public`、`protected`、`private`修饰的字段和方法就是包作用域。\n\n\n\n## import\n\n使用`import`语句，导入包中的类或者子包\n\n在写`import`的时候，可以使用`*`，表示把这个包下面的所有`class`都导入进来（但不包括子包的`class`）\n\n还有一种`import static`的语法，它可以导入可以导入一个类的静态字段和静态方法。\n\n\n\n## 作用域\n\n感觉不用写。\n\n一个是java支持嵌套类，内部的类也可以访问``private`\n\n\n\n## 内部类\n\n嵌套类，可以声明可以匿名\n\n在方法内部定义一个匿名类，这玩意其实就是一个东西继承自某个父类，然后重写一下里边的方法？\n\n```\nRunnable r = new 父类类名() {\n    // 实现必要的抽象方法...\n};\n```\n\n\n\n## classpath和jar\n\n~~不会~~\n\njar包相当于zip包，其实就是把编译好的一堆`.class`文件打包到一起便于管理\n\n\n\n## 模块\n\n应该是依赖管理之类的，懒得看了\n\n----\n\n# JAVA的一些核心类\n\n> 怎么都nm4点了，写完这段歇了（\n\n## String\n\n```java\nString s = \"eee\";\n```\n\n**首字母大写（**\n\n`String`不可变\n\n由于是**引用**类型，我们要用`s1.equals(s2)`这种来判断是否相同\n\n`equalsIgnoreCase()`方法忽略大小写比较\n\n一堆方法啊。。\n\n直接抄了。\n\n```java\n// 是否包含子串:\n\"Hello\".contains(\"ll\"); // true\n\n\"Hello\".indexOf(\"l\"); // 2\n\"Hello\".lastIndexOf(\"l\"); // 3\n\"Hello\".startsWith(\"He\"); // true\n\"Hello\".endsWith(\"lo\"); // true\n\n\"Hello\".substring(2); // \"llo\"\n\"Hello\".substring(2, 4); //\"ll\"\n// 使用trim()方法可以移除字符串首尾空白字符。空白字符包括空格，\\t，\\r，\\n：\n\"  \\tHello\\r\\n \".trim(); // \"Hello\"\n\n\"\".isEmpty(); // true，因为字符串长度为0\n\"  \".isEmpty(); // false，因为字符串长度不为0\n\"  \\n\".isBlank(); // true，因为只包含空白字符\n\" Hello \".isBlank(); // false，因为包含非空白字符\n\nString s = \"hello\";\ns.replace('l', 'w'); // \"hewwo\"，所有字符'l'被替换为'w'\ns.replace(\"ll\", \"~~\"); // \"he~~o\"，所有子串\"ll\"被替换为\"~~\"\n\nreplace还支持正则，没学过\n    \n    \nString[] arr = {\"A\", \"B\", \"C\"};\nString s = String.join(\"***\", arr); // \"A***B***C\"\n\n\nString.valueOf(123); // \"123\"\nString.valueOf(45.67); // \"45.67\"\nString.valueOf(true); // \"true\"\nString.valueOf(new Object()); // 类似java.lang.Object@636be97c\n\nchar[] cs = \"Hello\".toCharArray(); // String -> char[]\nString s = new String(cs); // char[] -> String\n```\n\n还要byte字符串编码啥的，这玩意我感觉需要就火速百度就完了。\n\n\n\n## StringBuilder\n\nString可以直接用+拼接，但是效率不高。\n\n如果要一直添加字符的话可以用这个玩意\n\n```java\nStringBuilder sb = new StringBuilder(1024);\nfor (int i = 0; i < 1000; i++) {\n    sb.append(',');\n    sb.append(i);\n}\nString s = sb.toString();\n```\n\n支持链式操作，就是说可以一直`.append().append()...`之类的\n\n还有个`insert`方法，要给插入的index和内容\n\n不过链式操作只要函数结束之后返回对象引用就行了吧（\n\n~~谁叫这玩意啥都是引用~~\n\n\n\n## 包装类型\n\n意思就是类似`int`这种基本类型用类进行了包装，可以使用引用和一些奇奇怪怪的方法。\n\n进行一个抄\n\n| 基本类型 | 对应的引用类型      |\n| :------- | :------------------ |\n| boolean  | java.lang.Boolean   |\n| byte     | java.lang.Byte      |\n| short    | java.lang.Short     |\n| int      | java.lang.Integer   |\n| long     | java.lang.Long      |\n| float    | java.lang.Float     |\n| double   | java.lang.Double    |\n| char     | java.lang.Character |\n\nint的转换示例\n\n```java\nint i = 100;\nInteger n = Integer.valueOf(i);\nint x = n.intValue();\n你甚至可以这么写\nInteger n = 100; // 编译器自动使用Integer.valueOf(int)\nint x = n; // 编译器自动使用Integer.intValue()\n```\n\n很显然这个`Integer.valueOf(i)`是静态方法，而且这玩意实现有优化，比`new Integer(i)`效率更高，因为他返回给引用的可能是以前就已经存在的实例\n\n当然，这些B东西都是不可更改的。。\n\n静态方法`parseInt()`可以把字符串解析成一个整数\n\n\n## 枚举类\n\n例如我要定义周一到周日这7天，而且我不想让这7天以外的符号和他进行操作，就可以用`enum`关键字声明\n\n```java\nenum Weekday {\n    SUN, MON, TUE, WED, THU, FRI, SAT;\n}\n\n本质来说感觉是这样，别问为啥例子变了，我也不知道\npublic final class Color extends Enum { // 继承自Enum，标记为final class\n    // 每个实例均为全局唯一:\n    public static final Color RED = new Color();\n    public static final Color GREEN = new Color();\n    public static final Color BLUE = new Color();\n    // private构造方法，确保外部无法调用new操作符:\n    private Color() {}\n}\n```\n\n我个人感觉这些其实就是抽象符号，而且拥有`static final`的属性\n\n这样就不会有类型外的值和非枚举类内的值相互比较了\n\n因为有`static`的属性，我们显然可以用`==`进行比较\n\n有方法`name()`返回常量名\n\n```java\nString s = Weekday.SUN.name(); // \"SUN\"\n```\n\n`ordinal()`返回定义的常量的顺序，从0开始计数\n\n```java\nint n = Weekday.MON.ordinal(); // 1\n```\n\n既然这玩意本质是类，我们也可以在里边改写构造方法，给它加上一些值\n\n```java\nenum Weekday {\n    MON(1), TUE(2), WED(3), THU(4), FRI(5), SAT(6), SUN(0);\n    \n    public final int dayValue;\n    \n    private Weekday(int dayValue) {\n        this.dayValue = dayValue;\n    }\n}\n```\n\n这样我们可以访问引用的`daValue`值获得信息。。\n\n\n\n## 记录类\n\n用来记录数据的不变类，写的更方便\n\n```java\npublic record A(int x, int y){}\n```\n\n可以改写构造方法加上判断\n\n\n\n## BigInteger\n\n高精度，用它给你的方法就完了。\n\n实例化的时候要用字符串\n\n## BigDecimal\n\n和上边那个差不多呃\n\n> 通过`BigDecimal`的`stripTrailingZeros()`方法，可以将一个`BigDecimal`格式化为一个相等的，但去掉了末尾0的`BigDecimal`\n\n\n\n## 工具类\n\n- Math：数学计算\n- Random：生成伪随机数\n- SecureRandom：生成安全的随机数\n\n呃这个感觉没啥好说的\n\n### Math\n\n```java\nMath.abs(-100); // 100\nMath.abs(-7.8); // 7.8\n\nMath.max(100, 99); // 100\nMath.min(1.2, 2.3); // 1.2\n\nMath.pow(2, 10); // 2的10次方=1024\nMath.sqrt(2); // 1.414...\nMath.exp(2); // 7.389...\nMath.log(4); // 1.386...\nMath.log10(100); // 2\nMath.sin(3.14); // 0.00159...\nMath.cos(3.14); // -0.9999...\nMath.tan(3.14); // -0.0015...\nMath.asin(1.0); // 1.57079...\nMath.acos(1.0); // 0.0\n\ndouble pi = Math.PI; // 3.14159...\ndouble e = Math.E; // 2.7182818...\nMath.sin(Math.PI / 6); // sin(π/6) = 0.5\n0-1\nMath.random(); // 0.53907... 每次都不一样\n```\n\n### Random\n\n```java\nRandom r = new Random(种子);\nr.nextInt(); // 2071575453,每次都不一样\nr.nextInt(10); // 5,生成一个[0,10)之间的int\nr.nextLong(); // 8811649292570369305,每次都不一样\nr.nextFloat(); // 0.54335...生成一个[0,1)之间的float\nr.nextDouble(); // 0.3716...生成一个[0,1)之间的double\nr.nextBytes();\n```\n\n### SecureRandom\n\n```java\nSecureRandom sr = new SecureRandom();\n```\n\n然后疯狂的用就完了\n\n----\n\nDONE！！！！！\n","source":"_posts/04学习/JAVA快速入门(1).md","raw":"---\ntitle: JAVA快速入门(1)\ndate: 2022-04-25 04:30:00\ntags: 语言\ncategories:\n- JAVA\n---\n\n# 引言\n\n为了应付大作业，特地速成一哈JVAV\n\n省略了一堆东西\n\n估计过几天会继续写后篇，到时候再看吧。\n\n内容包括\n\n- 语法快速入门（这玩意和cpp大部分很像所以没咋写）\n- 面向对象基础\n- 杂项\n- 一些核心类\n- ？\n<!-- more -->\n\n---\n\n# 声明\n\n## 和cpp不同的部分\n\n```java\nint[] a = new int[5];\t//数组\nvar a = new int[5];\t\t//自动类型推导\n```\n\nps.\n\n**任何数组都是引用类型！**\n\n**string也是！**\n\n**实例化的对象也是！**\n\n这时候要判断是不是相等要用\n\n`a.equals(b)`的方法\n\n这个时候赋值是引用类型参数绑定\n\n感觉有点像指针。。还有那个python的原理\n\n---\n\n# 方法\n\n## 可变参数\n\n类似函数传入数组，用`类型...`定义\n\n```java\nclass Group {\n    private String[] names;\n\n    public void setNames(String... names) {\n        this.names = names;\n    }\n}\n```\n\n传入可以直接传入多个string\n\n\n\n## 构造方法\n\n类构造时调用的方法\t~~构造函数~~\n\n可以重载\n\n```java\nclass Group {\n    public Group{}\n}\n```\n\n\n\n## 实例化\n\n```java\nA a = new A();\n```\n\n----\n\n# 类的一些东西\n\n## 继承\n\njava是单继承的，用`extends`关键字\n\n```java\nclass B extends A{\n}\n```\n\n经典`protected`类型，令子类可以访问父类的内容\n\n**很显然，子类不应该定义和父类重名的字段，private也不行**\n\n\n\n## super\n\n`super`代表了父类，`super();`即父类的构造方法\n\n实例化类的时候，会默认调用一个无参的`super();`\n\n如果此时父类没有无参构造方法会报错\n\n解决方法是手动在类构造函数上加一句父类对应的`super(xxxx);`\n\n**子类不会继承任何父类的构造方法**\n\n\n\n## 阻止继承\n\n感觉暂时用不上\n\n```java\npublic sealed class A permits B, C {\n}\n```\n\n用`sealed`和`permits`可以让只有指定的类才能继承该类\n\n\n\n## 上/下转型\n\n**继承树object>a>b**\n\n向上：\n\n直接用引用变量指向子类实例就行\n\n```java\nA a = new B();\n```\n\n向下：\n\n父类类型强转到子类类型\n\n```java\nA a = new B();\nB b = new B();\nb = (B)a;\n```\n\n`instanceof`为操作符，判断一个东西是不是指定类型\n\n```java\nObject obj = \"hello\";\nif (obj instanceof String) {\n    String s = (String) obj;\n}\n//或者可以直接一起转型\nObject obj = \"hello\";\nif (obj instanceof String s) {// 可以直接使用变量s            \n\tSystem.out.println(s.toUpperCase());\n}\n```\n\n\n\n这种转型有时候我们在方法中传递形参为父类，又想调用子类的方法时，在确定了传入实参为子类后可以进行一个强转。\n\n\n\n# 多态\n\n## override\n\n首先说明方法签名：\n\n- 方法名\n- 参数列表\n\n如果子类的一个方法方法签名和父类的完全一致，则子类会覆写父类的方法\n\n使用`@Override`修饰，编译器还会帮助检查是否为覆写而非重载\n\n`@Override`并非必须\n\n**java调用方法时根据的是对象真正的类型而不是引用的类型进行调用**\n\n\n\n## 多态\n\n> 多态是指，针对某个类型的方法调用，其真正执行的方法取决于运行时期实际类型的方法\n\n如果调用父类被覆写了的方法\n\n可以使用`super.方法名()`来调用\n\n`final` 感觉类似const\n\nfinal修饰的类无法继承，final修饰的方法不会被覆写，final修饰的变量初始化之后无法更改\n\n\n## 抽象类\n\n类似cpp里边的虚函数，其实就是父类单纯提供方法签名而不实现任何功能，即抽象方法的时候用的。\n\n这样就能构成多态。\n\n使用`abstract\t`修饰就完了，定义了抽象方法的类也要一样地修饰，这就是抽象类\n\n~~和cpp一样~~抽象类无法实例化\n\n```java\nabstract class Person {\n    public abstract void run();\n}\n```\n\n\n\n所有这些东西的主要思想其实就是呃（抄的）\n\n- 上层代码只定义规范（例如：`abstract class Person`）；\n- 不需要子类就可以实现业务逻辑（正常编译）；\n- 具体的业务逻辑由不同的子类实现，调用者并不关心。\n\n----\n\n# 接口\n\n## 接口本质是更抽象的抽象类\n\n如果一个抽象类没有字段，所有方法全部都是抽象方法，就可以用接口改写。\n\n使用`interface`声明，这里边的东西直接默认是`public abstract`\n\n```java\ninterface A {\n    void run();\n    String asdf();\n}\n```\n\n那么我们该如何使用这玩意呢\n\n使用`implements`实现,\n\n而且一个类可以实现多个接口\n\n```java\nclass Student implements Person, Hello { // 实现了两个interface\n    ...\n}\n```\n\n\n\n## 有关接口继承\n\n这玩意看着好复杂....\n\n一个`interface`可以继承自另一个`interface`。`interface`继承自`interface`使用`extends`，它相当于扩展了接口的方法。\n\n我们还可以定义`default`方法，\n\n这个相当于抽象类中有具体实现的那些方法。\n\n这样继承这个接口的所有子类也可以直接用这个方法。\n\n```java\ninterface A {\n    void run();\n    default String asdf();\n}\n\nclass B implements A{\n    void run(){\n        asdf();\n    }\n}\n```\n\n---\n\n# 一些杂项\n\n## 静态字段\n\n**静态字段啥的跟cpp类里边的差不多，静态方法是可以直接用方法名调用，类似正常的函数，但是他显然不能访问实例的非静态字段**\n\n使用`static`修饰，懂得都懂（\n\n\n\n## 包\n\n~~类似命名空间~~\n\n> Java定义了一种名字空间，称之为包：`package`。一个类总是属于某个包，类名（比如`Person`）只是一个简写，真正的完整类名是`包名.类名`。\n\n位于同一个包的类，可以访问包作用域的字段和方法。不用`public`、`protected`、`private`修饰的字段和方法就是包作用域。\n\n\n\n## import\n\n使用`import`语句，导入包中的类或者子包\n\n在写`import`的时候，可以使用`*`，表示把这个包下面的所有`class`都导入进来（但不包括子包的`class`）\n\n还有一种`import static`的语法，它可以导入可以导入一个类的静态字段和静态方法。\n\n\n\n## 作用域\n\n感觉不用写。\n\n一个是java支持嵌套类，内部的类也可以访问``private`\n\n\n\n## 内部类\n\n嵌套类，可以声明可以匿名\n\n在方法内部定义一个匿名类，这玩意其实就是一个东西继承自某个父类，然后重写一下里边的方法？\n\n```\nRunnable r = new 父类类名() {\n    // 实现必要的抽象方法...\n};\n```\n\n\n\n## classpath和jar\n\n~~不会~~\n\njar包相当于zip包，其实就是把编译好的一堆`.class`文件打包到一起便于管理\n\n\n\n## 模块\n\n应该是依赖管理之类的，懒得看了\n\n----\n\n# JAVA的一些核心类\n\n> 怎么都nm4点了，写完这段歇了（\n\n## String\n\n```java\nString s = \"eee\";\n```\n\n**首字母大写（**\n\n`String`不可变\n\n由于是**引用**类型，我们要用`s1.equals(s2)`这种来判断是否相同\n\n`equalsIgnoreCase()`方法忽略大小写比较\n\n一堆方法啊。。\n\n直接抄了。\n\n```java\n// 是否包含子串:\n\"Hello\".contains(\"ll\"); // true\n\n\"Hello\".indexOf(\"l\"); // 2\n\"Hello\".lastIndexOf(\"l\"); // 3\n\"Hello\".startsWith(\"He\"); // true\n\"Hello\".endsWith(\"lo\"); // true\n\n\"Hello\".substring(2); // \"llo\"\n\"Hello\".substring(2, 4); //\"ll\"\n// 使用trim()方法可以移除字符串首尾空白字符。空白字符包括空格，\\t，\\r，\\n：\n\"  \\tHello\\r\\n \".trim(); // \"Hello\"\n\n\"\".isEmpty(); // true，因为字符串长度为0\n\"  \".isEmpty(); // false，因为字符串长度不为0\n\"  \\n\".isBlank(); // true，因为只包含空白字符\n\" Hello \".isBlank(); // false，因为包含非空白字符\n\nString s = \"hello\";\ns.replace('l', 'w'); // \"hewwo\"，所有字符'l'被替换为'w'\ns.replace(\"ll\", \"~~\"); // \"he~~o\"，所有子串\"ll\"被替换为\"~~\"\n\nreplace还支持正则，没学过\n    \n    \nString[] arr = {\"A\", \"B\", \"C\"};\nString s = String.join(\"***\", arr); // \"A***B***C\"\n\n\nString.valueOf(123); // \"123\"\nString.valueOf(45.67); // \"45.67\"\nString.valueOf(true); // \"true\"\nString.valueOf(new Object()); // 类似java.lang.Object@636be97c\n\nchar[] cs = \"Hello\".toCharArray(); // String -> char[]\nString s = new String(cs); // char[] -> String\n```\n\n还要byte字符串编码啥的，这玩意我感觉需要就火速百度就完了。\n\n\n\n## StringBuilder\n\nString可以直接用+拼接，但是效率不高。\n\n如果要一直添加字符的话可以用这个玩意\n\n```java\nStringBuilder sb = new StringBuilder(1024);\nfor (int i = 0; i < 1000; i++) {\n    sb.append(',');\n    sb.append(i);\n}\nString s = sb.toString();\n```\n\n支持链式操作，就是说可以一直`.append().append()...`之类的\n\n还有个`insert`方法，要给插入的index和内容\n\n不过链式操作只要函数结束之后返回对象引用就行了吧（\n\n~~谁叫这玩意啥都是引用~~\n\n\n\n## 包装类型\n\n意思就是类似`int`这种基本类型用类进行了包装，可以使用引用和一些奇奇怪怪的方法。\n\n进行一个抄\n\n| 基本类型 | 对应的引用类型      |\n| :------- | :------------------ |\n| boolean  | java.lang.Boolean   |\n| byte     | java.lang.Byte      |\n| short    | java.lang.Short     |\n| int      | java.lang.Integer   |\n| long     | java.lang.Long      |\n| float    | java.lang.Float     |\n| double   | java.lang.Double    |\n| char     | java.lang.Character |\n\nint的转换示例\n\n```java\nint i = 100;\nInteger n = Integer.valueOf(i);\nint x = n.intValue();\n你甚至可以这么写\nInteger n = 100; // 编译器自动使用Integer.valueOf(int)\nint x = n; // 编译器自动使用Integer.intValue()\n```\n\n很显然这个`Integer.valueOf(i)`是静态方法，而且这玩意实现有优化，比`new Integer(i)`效率更高，因为他返回给引用的可能是以前就已经存在的实例\n\n当然，这些B东西都是不可更改的。。\n\n静态方法`parseInt()`可以把字符串解析成一个整数\n\n\n## 枚举类\n\n例如我要定义周一到周日这7天，而且我不想让这7天以外的符号和他进行操作，就可以用`enum`关键字声明\n\n```java\nenum Weekday {\n    SUN, MON, TUE, WED, THU, FRI, SAT;\n}\n\n本质来说感觉是这样，别问为啥例子变了，我也不知道\npublic final class Color extends Enum { // 继承自Enum，标记为final class\n    // 每个实例均为全局唯一:\n    public static final Color RED = new Color();\n    public static final Color GREEN = new Color();\n    public static final Color BLUE = new Color();\n    // private构造方法，确保外部无法调用new操作符:\n    private Color() {}\n}\n```\n\n我个人感觉这些其实就是抽象符号，而且拥有`static final`的属性\n\n这样就不会有类型外的值和非枚举类内的值相互比较了\n\n因为有`static`的属性，我们显然可以用`==`进行比较\n\n有方法`name()`返回常量名\n\n```java\nString s = Weekday.SUN.name(); // \"SUN\"\n```\n\n`ordinal()`返回定义的常量的顺序，从0开始计数\n\n```java\nint n = Weekday.MON.ordinal(); // 1\n```\n\n既然这玩意本质是类，我们也可以在里边改写构造方法，给它加上一些值\n\n```java\nenum Weekday {\n    MON(1), TUE(2), WED(3), THU(4), FRI(5), SAT(6), SUN(0);\n    \n    public final int dayValue;\n    \n    private Weekday(int dayValue) {\n        this.dayValue = dayValue;\n    }\n}\n```\n\n这样我们可以访问引用的`daValue`值获得信息。。\n\n\n\n## 记录类\n\n用来记录数据的不变类，写的更方便\n\n```java\npublic record A(int x, int y){}\n```\n\n可以改写构造方法加上判断\n\n\n\n## BigInteger\n\n高精度，用它给你的方法就完了。\n\n实例化的时候要用字符串\n\n## BigDecimal\n\n和上边那个差不多呃\n\n> 通过`BigDecimal`的`stripTrailingZeros()`方法，可以将一个`BigDecimal`格式化为一个相等的，但去掉了末尾0的`BigDecimal`\n\n\n\n## 工具类\n\n- Math：数学计算\n- Random：生成伪随机数\n- SecureRandom：生成安全的随机数\n\n呃这个感觉没啥好说的\n\n### Math\n\n```java\nMath.abs(-100); // 100\nMath.abs(-7.8); // 7.8\n\nMath.max(100, 99); // 100\nMath.min(1.2, 2.3); // 1.2\n\nMath.pow(2, 10); // 2的10次方=1024\nMath.sqrt(2); // 1.414...\nMath.exp(2); // 7.389...\nMath.log(4); // 1.386...\nMath.log10(100); // 2\nMath.sin(3.14); // 0.00159...\nMath.cos(3.14); // -0.9999...\nMath.tan(3.14); // -0.0015...\nMath.asin(1.0); // 1.57079...\nMath.acos(1.0); // 0.0\n\ndouble pi = Math.PI; // 3.14159...\ndouble e = Math.E; // 2.7182818...\nMath.sin(Math.PI / 6); // sin(π/6) = 0.5\n0-1\nMath.random(); // 0.53907... 每次都不一样\n```\n\n### Random\n\n```java\nRandom r = new Random(种子);\nr.nextInt(); // 2071575453,每次都不一样\nr.nextInt(10); // 5,生成一个[0,10)之间的int\nr.nextLong(); // 8811649292570369305,每次都不一样\nr.nextFloat(); // 0.54335...生成一个[0,1)之间的float\nr.nextDouble(); // 0.3716...生成一个[0,1)之间的double\nr.nextBytes();\n```\n\n### SecureRandom\n\n```java\nSecureRandom sr = new SecureRandom();\n```\n\n然后疯狂的用就完了\n\n----\n\nDONE！！！！！\n","slug":"04学习/JAVA快速入门(1)","published":1,"updated":"2022-06-15T19:51:33.157Z","_id":"clobly6db0015zowbfjat382a","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"引言\"><a class=\"markdownIt-Anchor\" href=\"#引言\"></a> 引言</h1>\n<p>为了应付大作业，特地速成一哈JVAV</p>\n<p>省略了一堆东西</p>\n<p>估计过几天会继续写后篇，到时候再看吧。</p>\n<p>内容包括</p>\n<ul>\n<li>语法快速入门（这玩意和cpp大部分很像所以没咋写）</li>\n<li>面向对象基础</li>\n<li>杂项</li>\n<li>一些核心类</li>\n<li>？</li>\n</ul>\n<span id=\"more\"></span>\n<hr />\n<h1 id=\"声明\"><a class=\"markdownIt-Anchor\" href=\"#声明\"></a> 声明</h1>\n<h2 id=\"和cpp不同的部分\"><a class=\"markdownIt-Anchor\" href=\"#和cpp不同的部分\"></a> 和cpp不同的部分</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];\t<span class=\"comment\">//数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];\t\t<span class=\"comment\">//自动类型推导</span></span><br></pre></td></tr></table></figure>\n<p>ps.</p>\n<p><strong>任何数组都是引用类型！</strong></p>\n<p><strong>string也是！</strong></p>\n<p><strong>实例化的对象也是！</strong></p>\n<p>这时候要判断是不是相等要用</p>\n<p><code>a.equals(b)</code>的方法</p>\n<p>这个时候赋值是引用类型参数绑定</p>\n<p>感觉有点像指针。。还有那个python的原理</p>\n<hr />\n<h1 id=\"方法\"><a class=\"markdownIt-Anchor\" href=\"#方法\"></a> 方法</h1>\n<h2 id=\"可变参数\"><a class=\"markdownIt-Anchor\" href=\"#可变参数\"></a> 可变参数</h2>\n<p>类似函数传入数组，用<code>类型...</code>定义</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Group</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] names;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNames</span><span class=\"params\">(String... names)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.names = names;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>传入可以直接传入多个string</p>\n<h2 id=\"构造方法\"><a class=\"markdownIt-Anchor\" href=\"#构造方法\"></a> 构造方法</h2>\n<p>类构造时调用的方法\t<s>构造函数</s></p>\n<p>可以重载</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Group</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Group&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实例化\"><a class=\"markdownIt-Anchor\" href=\"#实例化\"></a> 实例化</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> A();</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"类的一些东西\"><a class=\"markdownIt-Anchor\" href=\"#类的一些东西\"></a> 类的一些东西</h1>\n<h2 id=\"继承\"><a class=\"markdownIt-Anchor\" href=\"#继承\"></a> 继承</h2>\n<p>java是单继承的，用<code>extends</code>关键字</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>经典<code>protected</code>类型，令子类可以访问父类的内容</p>\n<p><strong>很显然，子类不应该定义和父类重名的字段，private也不行</strong></p>\n<h2 id=\"super\"><a class=\"markdownIt-Anchor\" href=\"#super\"></a> super</h2>\n<p><code>super</code>代表了父类，<code>super();</code>即父类的构造方法</p>\n<p>实例化类的时候，会默认调用一个无参的<code>super();</code></p>\n<p>如果此时父类没有无参构造方法会报错</p>\n<p>解决方法是手动在类构造函数上加一句父类对应的<code>super(xxxx);</code></p>\n<p><strong>子类不会继承任何父类的构造方法</strong></p>\n<h2 id=\"阻止继承\"><a class=\"markdownIt-Anchor\" href=\"#阻止继承\"></a> 阻止继承</h2>\n<p>感觉暂时用不上</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> sealed <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"title\">permits</span> <span class=\"title\">B</span>, <span class=\"title\">C</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>用<code>sealed</code>和<code>permits</code>可以让只有指定的类才能继承该类</p>\n<h2 id=\"上下转型\"><a class=\"markdownIt-Anchor\" href=\"#上下转型\"></a> 上/下转型</h2>\n<p><strong>继承树object&gt;a&gt;b</strong></p>\n<p>向上：</p>\n<p>直接用引用变量指向子类实例就行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> B();</span><br></pre></td></tr></table></figure>\n<p>向下：</p>\n<p>父类类型强转到子类类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">B b = <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">b = (B)a;</span><br></pre></td></tr></table></figure>\n<p><code>instanceof</code>为操作符，判断一个东西是不是指定类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object obj = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">    String s = (String) obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//或者可以直接一起转型</span></span><br><span class=\"line\">Object obj = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String s) &#123;<span class=\"comment\">// 可以直接使用变量s            </span></span><br><span class=\"line\">\tSystem.out.println(s.toUpperCase());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种转型有时候我们在方法中传递形参为父类，又想调用子类的方法时，在确定了传入实参为子类后可以进行一个强转。</p>\n<h1 id=\"多态\"><a class=\"markdownIt-Anchor\" href=\"#多态\"></a> 多态</h1>\n<h2 id=\"override\"><a class=\"markdownIt-Anchor\" href=\"#override\"></a> override</h2>\n<p>首先说明方法签名：</p>\n<ul>\n<li>方法名</li>\n<li>参数列表</li>\n</ul>\n<p>如果子类的一个方法方法签名和父类的完全一致，则子类会覆写父类的方法</p>\n<p>使用<code>@Override</code>修饰，编译器还会帮助检查是否为覆写而非重载</p>\n<p><code>@Override</code>并非必须</p>\n<p><strong>java调用方法时根据的是对象真正的类型而不是引用的类型进行调用</strong></p>\n<h2 id=\"多态-2\"><a class=\"markdownIt-Anchor\" href=\"#多态-2\"></a> 多态</h2>\n<blockquote>\n<p>多态是指，针对某个类型的方法调用，其真正执行的方法取决于运行时期实际类型的方法</p>\n</blockquote>\n<p>如果调用父类被覆写了的方法</p>\n<p>可以使用<code>super.方法名()</code>来调用</p>\n<p><code>final</code> 感觉类似const</p>\n<p>final修饰的类无法继承，final修饰的方法不会被覆写，final修饰的变量初始化之后无法更改</p>\n<h2 id=\"抽象类\"><a class=\"markdownIt-Anchor\" href=\"#抽象类\"></a> 抽象类</h2>\n<p>类似cpp里边的虚函数，其实就是父类单纯提供方法签名而不实现任何功能，即抽象方法的时候用的。</p>\n<p>这样就能构成多态。</p>\n<p>使用<code>abstract</code>修饰就完了，定义了抽象方法的类也要一样地修饰，这就是抽象类</p>\n<p><s>和cpp一样</s>抽象类无法实例化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有这些东西的主要思想其实就是呃（抄的）</p>\n<ul>\n<li>上层代码只定义规范（例如：<code>abstract class Person</code>）；</li>\n<li>不需要子类就可以实现业务逻辑（正常编译）；</li>\n<li>具体的业务逻辑由不同的子类实现，调用者并不关心。</li>\n</ul>\n<hr />\n<h1 id=\"接口\"><a class=\"markdownIt-Anchor\" href=\"#接口\"></a> 接口</h1>\n<h2 id=\"接口本质是更抽象的抽象类\"><a class=\"markdownIt-Anchor\" href=\"#接口本质是更抽象的抽象类\"></a> 接口本质是更抽象的抽象类</h2>\n<p>如果一个抽象类没有字段，所有方法全部都是抽象方法，就可以用接口改写。</p>\n<p>使用<code>interface</code>声明，这里边的东西直接默认是<code>public abstract</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">asdf</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么我们该如何使用这玩意呢</p>\n<p>使用<code>implements</code>实现,</p>\n<p>而且一个类可以实现多个接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Person</span>, <span class=\"title\">Hello</span> </span>&#123; <span class=\"comment\">// 实现了两个interface</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"有关接口继承\"><a class=\"markdownIt-Anchor\" href=\"#有关接口继承\"></a> 有关接口继承</h2>\n<p>这玩意看着好复杂…</p>\n<p>一个<code>interface</code>可以继承自另一个<code>interface</code>。<code>interface</code>继承自<code>interface</code>使用<code>extends</code>，它相当于扩展了接口的方法。</p>\n<p>我们还可以定义<code>default</code>方法，</p>\n<p>这个相当于抽象类中有具体实现的那些方法。</p>\n<p>这样继承这个接口的所有子类也可以直接用这个方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">default</span> String <span class=\"title\">asdf</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">implements</span> <span class=\"title\">A</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        asdf();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"一些杂项\"><a class=\"markdownIt-Anchor\" href=\"#一些杂项\"></a> 一些杂项</h1>\n<h2 id=\"静态字段\"><a class=\"markdownIt-Anchor\" href=\"#静态字段\"></a> 静态字段</h2>\n<p><strong>静态字段啥的跟cpp类里边的差不多，静态方法是可以直接用方法名调用，类似正常的函数，但是他显然不能访问实例的非静态字段</strong></p>\n<p>使用<code>static</code>修饰，懂得都懂（</p>\n<h2 id=\"包\"><a class=\"markdownIt-Anchor\" href=\"#包\"></a> 包</h2>\n<p><s>类似命名空间</s></p>\n<blockquote>\n<p>Java定义了一种名字空间，称之为包：<code>package</code>。一个类总是属于某个包，类名（比如<code>Person</code>）只是一个简写，真正的完整类名是<code>包名.类名</code>。</p>\n</blockquote>\n<p>位于同一个包的类，可以访问包作用域的字段和方法。不用<code>public</code>、<code>protected</code>、<code>private</code>修饰的字段和方法就是包作用域。</p>\n<h2 id=\"import\"><a class=\"markdownIt-Anchor\" href=\"#import\"></a> import</h2>\n<p>使用<code>import</code>语句，导入包中的类或者子包</p>\n<p>在写<code>import</code>的时候，可以使用<code>*</code>，表示把这个包下面的所有<code>class</code>都导入进来（但不包括子包的<code>class</code>）</p>\n<p>还有一种<code>import static</code>的语法，它可以导入可以导入一个类的静态字段和静态方法。</p>\n<h2 id=\"作用域\"><a class=\"markdownIt-Anchor\" href=\"#作用域\"></a> 作用域</h2>\n<p>感觉不用写。</p>\n<p>一个是java支持嵌套类，内部的类也可以访问``private`</p>\n<h2 id=\"内部类\"><a class=\"markdownIt-Anchor\" href=\"#内部类\"></a> 内部类</h2>\n<p>嵌套类，可以声明可以匿名</p>\n<p>在方法内部定义一个匿名类，这玩意其实就是一个东西继承自某个父类，然后重写一下里边的方法？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Runnable r = new 父类类名() &#123;</span><br><span class=\"line\">    // 实现必要的抽象方法...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"classpath和jar\"><a class=\"markdownIt-Anchor\" href=\"#classpath和jar\"></a> classpath和jar</h2>\n<p><s>不会</s></p>\n<p>jar包相当于zip包，其实就是把编译好的一堆<code>.class</code>文件打包到一起便于管理</p>\n<h2 id=\"模块\"><a class=\"markdownIt-Anchor\" href=\"#模块\"></a> 模块</h2>\n<p>应该是依赖管理之类的，懒得看了</p>\n<hr />\n<h1 id=\"java的一些核心类\"><a class=\"markdownIt-Anchor\" href=\"#java的一些核心类\"></a> JAVA的一些核心类</h1>\n<blockquote>\n<p>怎么都nm4点了，写完这段歇了（</p>\n</blockquote>\n<h2 id=\"string\"><a class=\"markdownIt-Anchor\" href=\"#string\"></a> String</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = <span class=\"string\">&quot;eee&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>首字母大写（</strong></p>\n<p><code>String</code>不可变</p>\n<p>由于是<strong>引用</strong>类型，我们要用<code>s1.equals(s2)</code>这种来判断是否相同</p>\n<p><code>equalsIgnoreCase()</code>方法忽略大小写比较</p>\n<p>一堆方法啊。。</p>\n<p>直接抄了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否包含子串:</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.contains(<span class=\"string\">&quot;ll&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.indexOf(<span class=\"string\">&quot;l&quot;</span>); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.lastIndexOf(<span class=\"string\">&quot;l&quot;</span>); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.startsWith(<span class=\"string\">&quot;He&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.endsWith(<span class=\"string\">&quot;lo&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.substring(<span class=\"number\">2</span>); <span class=\"comment\">// &quot;llo&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.substring(<span class=\"number\">2</span>, <span class=\"number\">4</span>); <span class=\"comment\">//&quot;ll&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用trim()方法可以移除字符串首尾空白字符。空白字符包括空格，\\t，\\r，\\n：</span></span><br><span class=\"line\"><span class=\"string\">&quot;  \\tHello\\r\\n &quot;</span>.trim(); <span class=\"comment\">// &quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span>.isEmpty(); <span class=\"comment\">// true，因为字符串长度为0</span></span><br><span class=\"line\"><span class=\"string\">&quot;  &quot;</span>.isEmpty(); <span class=\"comment\">// false，因为字符串长度不为0</span></span><br><span class=\"line\"><span class=\"string\">&quot;  \\n&quot;</span>.isBlank(); <span class=\"comment\">// true，因为只包含空白字符</span></span><br><span class=\"line\"><span class=\"string\">&quot; Hello &quot;</span>.isBlank(); <span class=\"comment\">// false，因为包含非空白字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">String s = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">s.replace(<span class=\"string\">&#x27;l&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>); <span class=\"comment\">// &quot;hewwo&quot;，所有字符&#x27;l&#x27;被替换为&#x27;w&#x27;</span></span><br><span class=\"line\">s.replace(<span class=\"string\">&quot;ll&quot;</span>, <span class=\"string\">&quot;~~&quot;</span>); <span class=\"comment\">// &quot;he~~o&quot;，所有子串&quot;ll&quot;被替换为&quot;~~&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">replace还支持正则，没学过</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">String[] arr = &#123;<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>, <span class=\"string\">&quot;C&quot;</span>&#125;;</span><br><span class=\"line\">String s = String.join(<span class=\"string\">&quot;***&quot;</span>, arr); <span class=\"comment\">// &quot;A***B***C&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">String.valueOf(<span class=\"number\">123</span>); <span class=\"comment\">// &quot;123&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"number\">45.67</span>); <span class=\"comment\">// &quot;45.67&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"keyword\">true</span>); <span class=\"comment\">// &quot;true&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"keyword\">new</span> Object()); <span class=\"comment\">// 类似java.lang.Object@636be97c</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">char</span>[] cs = <span class=\"string\">&quot;Hello&quot;</span>.toCharArray(); <span class=\"comment\">// String -&gt; char[]</span></span><br><span class=\"line\">String s = <span class=\"keyword\">new</span> String(cs); <span class=\"comment\">// char[] -&gt; String</span></span><br></pre></td></tr></table></figure>\n<p>还要byte字符串编码啥的，这玩意我感觉需要就火速百度就完了。</p>\n<h2 id=\"stringbuilder\"><a class=\"markdownIt-Anchor\" href=\"#stringbuilder\"></a> StringBuilder</h2>\n<p>String可以直接用+拼接，但是效率不高。</p>\n<p>如果要一直添加字符的话可以用这个玩意</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">1024</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">    sb.append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">    sb.append(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">String s = sb.toString();</span><br></pre></td></tr></table></figure>\n<p>支持链式操作，就是说可以一直<code>.append().append()...</code>之类的</p>\n<p>还有个<code>insert</code>方法，要给插入的index和内容</p>\n<p>不过链式操作只要函数结束之后返回对象引用就行了吧（</p>\n<p><s>谁叫这玩意啥都是引用</s></p>\n<h2 id=\"包装类型\"><a class=\"markdownIt-Anchor\" href=\"#包装类型\"></a> 包装类型</h2>\n<p>意思就是类似<code>int</code>这种基本类型用类进行了包装，可以使用引用和一些奇奇怪怪的方法。</p>\n<p>进行一个抄</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">基本类型</th>\n<th style=\"text-align:left\">对应的引用类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">java.lang.Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">java.lang.Byte</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">short</td>\n<td style=\"text-align:left\">java.lang.Short</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">java.lang.Integer</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">java.lang.Long</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">java.lang.Float</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">java.lang.Double</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">char</td>\n<td style=\"text-align:left\">java.lang.Character</td>\n</tr>\n</tbody>\n</table>\n<p>int的转换示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">100</span>;</span><br><span class=\"line\">Integer n = Integer.valueOf(i);</span><br><span class=\"line\"><span class=\"keyword\">int</span> x = n.intValue();</span><br><span class=\"line\">你甚至可以这么写</span><br><span class=\"line\">Integer n = <span class=\"number\">100</span>; <span class=\"comment\">// 编译器自动使用Integer.valueOf(int)</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> x = n; <span class=\"comment\">// 编译器自动使用Integer.intValue()</span></span><br></pre></td></tr></table></figure>\n<p>很显然这个<code>Integer.valueOf(i)</code>是静态方法，而且这玩意实现有优化，比<code>new Integer(i)</code>效率更高，因为他返回给引用的可能是以前就已经存在的实例</p>\n<p>当然，这些B东西都是不可更改的。。</p>\n<p>静态方法<code>parseInt()</code>可以把字符串解析成一个整数</p>\n<h2 id=\"枚举类\"><a class=\"markdownIt-Anchor\" href=\"#枚举类\"></a> 枚举类</h2>\n<p>例如我要定义周一到周日这7天，而且我不想让这7天以外的符号和他进行操作，就可以用<code>enum</code>关键字声明</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Weekday</span> </span>&#123;</span><br><span class=\"line\">    SUN, MON, TUE, WED, THU, FRI, SAT;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">本质来说感觉是这样，别问为啥例子变了，我也不知道</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> <span class=\"keyword\">extends</span> <span class=\"title\">Enum</span> </span>&#123; <span class=\"comment\">// 继承自Enum，标记为final class</span></span><br><span class=\"line\">    <span class=\"comment\">// 每个实例均为全局唯一:</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color RED = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color GREEN = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color BLUE = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"comment\">// private构造方法，确保外部无法调用new操作符:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Color</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我个人感觉这些其实就是抽象符号，而且拥有<code>static final</code>的属性</p>\n<p>这样就不会有类型外的值和非枚举类内的值相互比较了</p>\n<p>因为有<code>static</code>的属性，我们显然可以用<code>==</code>进行比较</p>\n<p>有方法<code>name()</code>返回常量名</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = Weekday.SUN.name(); <span class=\"comment\">// &quot;SUN&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>ordinal()</code>返回定义的常量的顺序，从0开始计数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = Weekday.MON.ordinal(); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n<p>既然这玩意本质是类，我们也可以在里边改写构造方法，给它加上一些值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Weekday</span> </span>&#123;</span><br><span class=\"line\">    MON(<span class=\"number\">1</span>), TUE(<span class=\"number\">2</span>), WED(<span class=\"number\">3</span>), THU(<span class=\"number\">4</span>), FRI(<span class=\"number\">5</span>), SAT(<span class=\"number\">6</span>), SUN(<span class=\"number\">0</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> dayValue;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Weekday</span><span class=\"params\">(<span class=\"keyword\">int</span> dayValue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dayValue = dayValue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们可以访问引用的<code>daValue</code>值获得信息。。</p>\n<h2 id=\"记录类\"><a class=\"markdownIt-Anchor\" href=\"#记录类\"></a> 记录类</h2>\n<p>用来记录数据的不变类，写的更方便</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> record <span class=\"title\">A</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以改写构造方法加上判断</p>\n<h2 id=\"biginteger\"><a class=\"markdownIt-Anchor\" href=\"#biginteger\"></a> BigInteger</h2>\n<p>高精度，用它给你的方法就完了。</p>\n<p>实例化的时候要用字符串</p>\n<h2 id=\"bigdecimal\"><a class=\"markdownIt-Anchor\" href=\"#bigdecimal\"></a> BigDecimal</h2>\n<p>和上边那个差不多呃</p>\n<blockquote>\n<p>通过<code>BigDecimal</code>的<code>stripTrailingZeros()</code>方法，可以将一个<code>BigDecimal</code>格式化为一个相等的，但去掉了末尾0的<code>BigDecimal</code></p>\n</blockquote>\n<h2 id=\"工具类\"><a class=\"markdownIt-Anchor\" href=\"#工具类\"></a> 工具类</h2>\n<ul>\n<li>Math：数学计算</li>\n<li>Random：生成伪随机数</li>\n<li>SecureRandom：生成安全的随机数</li>\n</ul>\n<p>呃这个感觉没啥好说的</p>\n<h3 id=\"math\"><a class=\"markdownIt-Anchor\" href=\"#math\"></a> Math</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.abs(-<span class=\"number\">100</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\">Math.abs(-<span class=\"number\">7.8</span>); <span class=\"comment\">// 7.8</span></span><br><span class=\"line\"></span><br><span class=\"line\">Math.max(<span class=\"number\">100</span>, <span class=\"number\">99</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\">Math.min(<span class=\"number\">1.2</span>, <span class=\"number\">2.3</span>); <span class=\"comment\">// 1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">Math.pow(<span class=\"number\">2</span>, <span class=\"number\">10</span>); <span class=\"comment\">// 2的10次方=1024</span></span><br><span class=\"line\">Math.sqrt(<span class=\"number\">2</span>); <span class=\"comment\">// 1.414...</span></span><br><span class=\"line\">Math.exp(<span class=\"number\">2</span>); <span class=\"comment\">// 7.389...</span></span><br><span class=\"line\">Math.log(<span class=\"number\">4</span>); <span class=\"comment\">// 1.386...</span></span><br><span class=\"line\">Math.log10(<span class=\"number\">100</span>); <span class=\"comment\">// 2</span></span><br><span class=\"line\">Math.sin(<span class=\"number\">3.14</span>); <span class=\"comment\">// 0.00159...</span></span><br><span class=\"line\">Math.cos(<span class=\"number\">3.14</span>); <span class=\"comment\">// -0.9999...</span></span><br><span class=\"line\">Math.tan(<span class=\"number\">3.14</span>); <span class=\"comment\">// -0.0015...</span></span><br><span class=\"line\">Math.asin(<span class=\"number\">1.0</span>); <span class=\"comment\">// 1.57079...</span></span><br><span class=\"line\">Math.acos(<span class=\"number\">1.0</span>); <span class=\"comment\">// 0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> pi = Math.PI; <span class=\"comment\">// 3.14159...</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> e = Math.E; <span class=\"comment\">// 2.7182818...</span></span><br><span class=\"line\">Math.sin(Math.PI / <span class=\"number\">6</span>); <span class=\"comment\">// sin(π/6) = 0.5</span></span><br><span class=\"line\"><span class=\"number\">0</span>-<span class=\"number\">1</span></span><br><span class=\"line\">Math.random(); <span class=\"comment\">// 0.53907... 每次都不一样</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"random\"><a class=\"markdownIt-Anchor\" href=\"#random\"></a> Random</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random r = <span class=\"keyword\">new</span> Random(种子);</span><br><span class=\"line\">r.nextInt(); <span class=\"comment\">// 2071575453,每次都不一样</span></span><br><span class=\"line\">r.nextInt(<span class=\"number\">10</span>); <span class=\"comment\">// 5,生成一个[0,10)之间的int</span></span><br><span class=\"line\">r.nextLong(); <span class=\"comment\">// 8811649292570369305,每次都不一样</span></span><br><span class=\"line\">r.nextFloat(); <span class=\"comment\">// 0.54335...生成一个[0,1)之间的float</span></span><br><span class=\"line\">r.nextDouble(); <span class=\"comment\">// 0.3716...生成一个[0,1)之间的double</span></span><br><span class=\"line\">r.nextBytes();</span><br></pre></td></tr></table></figure>\n<h3 id=\"securerandom\"><a class=\"markdownIt-Anchor\" href=\"#securerandom\"></a> SecureRandom</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecureRandom sr = <span class=\"keyword\">new</span> SecureRandom();</span><br></pre></td></tr></table></figure>\n<p>然后疯狂的用就完了</p>\n<hr />\n<p>DONE！！！！！</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"引言\"><a class=\"markdownIt-Anchor\" href=\"#引言\"></a> 引言</h1>\n<p>为了应付大作业，特地速成一哈JVAV</p>\n<p>省略了一堆东西</p>\n<p>估计过几天会继续写后篇，到时候再看吧。</p>\n<p>内容包括</p>\n<ul>\n<li>语法快速入门（这玩意和cpp大部分很像所以没咋写）</li>\n<li>面向对象基础</li>\n<li>杂项</li>\n<li>一些核心类</li>\n<li>？</li>\n</ul>","more":"<hr />\n<h1 id=\"声明\"><a class=\"markdownIt-Anchor\" href=\"#声明\"></a> 声明</h1>\n<h2 id=\"和cpp不同的部分\"><a class=\"markdownIt-Anchor\" href=\"#和cpp不同的部分\"></a> 和cpp不同的部分</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];\t<span class=\"comment\">//数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];\t\t<span class=\"comment\">//自动类型推导</span></span><br></pre></td></tr></table></figure>\n<p>ps.</p>\n<p><strong>任何数组都是引用类型！</strong></p>\n<p><strong>string也是！</strong></p>\n<p><strong>实例化的对象也是！</strong></p>\n<p>这时候要判断是不是相等要用</p>\n<p><code>a.equals(b)</code>的方法</p>\n<p>这个时候赋值是引用类型参数绑定</p>\n<p>感觉有点像指针。。还有那个python的原理</p>\n<hr />\n<h1 id=\"方法\"><a class=\"markdownIt-Anchor\" href=\"#方法\"></a> 方法</h1>\n<h2 id=\"可变参数\"><a class=\"markdownIt-Anchor\" href=\"#可变参数\"></a> 可变参数</h2>\n<p>类似函数传入数组，用<code>类型...</code>定义</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Group</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] names;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNames</span><span class=\"params\">(String... names)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.names = names;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>传入可以直接传入多个string</p>\n<h2 id=\"构造方法\"><a class=\"markdownIt-Anchor\" href=\"#构造方法\"></a> 构造方法</h2>\n<p>类构造时调用的方法\t<s>构造函数</s></p>\n<p>可以重载</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Group</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Group&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实例化\"><a class=\"markdownIt-Anchor\" href=\"#实例化\"></a> 实例化</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> A();</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"类的一些东西\"><a class=\"markdownIt-Anchor\" href=\"#类的一些东西\"></a> 类的一些东西</h1>\n<h2 id=\"继承\"><a class=\"markdownIt-Anchor\" href=\"#继承\"></a> 继承</h2>\n<p>java是单继承的，用<code>extends</code>关键字</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>经典<code>protected</code>类型，令子类可以访问父类的内容</p>\n<p><strong>很显然，子类不应该定义和父类重名的字段，private也不行</strong></p>\n<h2 id=\"super\"><a class=\"markdownIt-Anchor\" href=\"#super\"></a> super</h2>\n<p><code>super</code>代表了父类，<code>super();</code>即父类的构造方法</p>\n<p>实例化类的时候，会默认调用一个无参的<code>super();</code></p>\n<p>如果此时父类没有无参构造方法会报错</p>\n<p>解决方法是手动在类构造函数上加一句父类对应的<code>super(xxxx);</code></p>\n<p><strong>子类不会继承任何父类的构造方法</strong></p>\n<h2 id=\"阻止继承\"><a class=\"markdownIt-Anchor\" href=\"#阻止继承\"></a> 阻止继承</h2>\n<p>感觉暂时用不上</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> sealed <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> <span class=\"title\">permits</span> <span class=\"title\">B</span>, <span class=\"title\">C</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>用<code>sealed</code>和<code>permits</code>可以让只有指定的类才能继承该类</p>\n<h2 id=\"上下转型\"><a class=\"markdownIt-Anchor\" href=\"#上下转型\"></a> 上/下转型</h2>\n<p><strong>继承树object&gt;a&gt;b</strong></p>\n<p>向上：</p>\n<p>直接用引用变量指向子类实例就行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> B();</span><br></pre></td></tr></table></figure>\n<p>向下：</p>\n<p>父类类型强转到子类类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A a = <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">B b = <span class=\"keyword\">new</span> B();</span><br><span class=\"line\">b = (B)a;</span><br></pre></td></tr></table></figure>\n<p><code>instanceof</code>为操作符，判断一个东西是不是指定类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object obj = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">    String s = (String) obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//或者可以直接一起转型</span></span><br><span class=\"line\">Object obj = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String s) &#123;<span class=\"comment\">// 可以直接使用变量s            </span></span><br><span class=\"line\">\tSystem.out.println(s.toUpperCase());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种转型有时候我们在方法中传递形参为父类，又想调用子类的方法时，在确定了传入实参为子类后可以进行一个强转。</p>\n<h1 id=\"多态\"><a class=\"markdownIt-Anchor\" href=\"#多态\"></a> 多态</h1>\n<h2 id=\"override\"><a class=\"markdownIt-Anchor\" href=\"#override\"></a> override</h2>\n<p>首先说明方法签名：</p>\n<ul>\n<li>方法名</li>\n<li>参数列表</li>\n</ul>\n<p>如果子类的一个方法方法签名和父类的完全一致，则子类会覆写父类的方法</p>\n<p>使用<code>@Override</code>修饰，编译器还会帮助检查是否为覆写而非重载</p>\n<p><code>@Override</code>并非必须</p>\n<p><strong>java调用方法时根据的是对象真正的类型而不是引用的类型进行调用</strong></p>\n<h2 id=\"多态-2\"><a class=\"markdownIt-Anchor\" href=\"#多态-2\"></a> 多态</h2>\n<blockquote>\n<p>多态是指，针对某个类型的方法调用，其真正执行的方法取决于运行时期实际类型的方法</p>\n</blockquote>\n<p>如果调用父类被覆写了的方法</p>\n<p>可以使用<code>super.方法名()</code>来调用</p>\n<p><code>final</code> 感觉类似const</p>\n<p>final修饰的类无法继承，final修饰的方法不会被覆写，final修饰的变量初始化之后无法更改</p>\n<h2 id=\"抽象类\"><a class=\"markdownIt-Anchor\" href=\"#抽象类\"></a> 抽象类</h2>\n<p>类似cpp里边的虚函数，其实就是父类单纯提供方法签名而不实现任何功能，即抽象方法的时候用的。</p>\n<p>这样就能构成多态。</p>\n<p>使用<code>abstract</code>修饰就完了，定义了抽象方法的类也要一样地修饰，这就是抽象类</p>\n<p><s>和cpp一样</s>抽象类无法实例化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有这些东西的主要思想其实就是呃（抄的）</p>\n<ul>\n<li>上层代码只定义规范（例如：<code>abstract class Person</code>）；</li>\n<li>不需要子类就可以实现业务逻辑（正常编译）；</li>\n<li>具体的业务逻辑由不同的子类实现，调用者并不关心。</li>\n</ul>\n<hr />\n<h1 id=\"接口\"><a class=\"markdownIt-Anchor\" href=\"#接口\"></a> 接口</h1>\n<h2 id=\"接口本质是更抽象的抽象类\"><a class=\"markdownIt-Anchor\" href=\"#接口本质是更抽象的抽象类\"></a> 接口本质是更抽象的抽象类</h2>\n<p>如果一个抽象类没有字段，所有方法全部都是抽象方法，就可以用接口改写。</p>\n<p>使用<code>interface</code>声明，这里边的东西直接默认是<code>public abstract</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">asdf</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么我们该如何使用这玩意呢</p>\n<p>使用<code>implements</code>实现,</p>\n<p>而且一个类可以实现多个接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Person</span>, <span class=\"title\">Hello</span> </span>&#123; <span class=\"comment\">// 实现了两个interface</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"有关接口继承\"><a class=\"markdownIt-Anchor\" href=\"#有关接口继承\"></a> 有关接口继承</h2>\n<p>这玩意看着好复杂…</p>\n<p>一个<code>interface</code>可以继承自另一个<code>interface</code>。<code>interface</code>继承自<code>interface</code>使用<code>extends</code>，它相当于扩展了接口的方法。</p>\n<p>我们还可以定义<code>default</code>方法，</p>\n<p>这个相当于抽象类中有具体实现的那些方法。</p>\n<p>这样继承这个接口的所有子类也可以直接用这个方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">default</span> String <span class=\"title\">asdf</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">implements</span> <span class=\"title\">A</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        asdf();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h1 id=\"一些杂项\"><a class=\"markdownIt-Anchor\" href=\"#一些杂项\"></a> 一些杂项</h1>\n<h2 id=\"静态字段\"><a class=\"markdownIt-Anchor\" href=\"#静态字段\"></a> 静态字段</h2>\n<p><strong>静态字段啥的跟cpp类里边的差不多，静态方法是可以直接用方法名调用，类似正常的函数，但是他显然不能访问实例的非静态字段</strong></p>\n<p>使用<code>static</code>修饰，懂得都懂（</p>\n<h2 id=\"包\"><a class=\"markdownIt-Anchor\" href=\"#包\"></a> 包</h2>\n<p><s>类似命名空间</s></p>\n<blockquote>\n<p>Java定义了一种名字空间，称之为包：<code>package</code>。一个类总是属于某个包，类名（比如<code>Person</code>）只是一个简写，真正的完整类名是<code>包名.类名</code>。</p>\n</blockquote>\n<p>位于同一个包的类，可以访问包作用域的字段和方法。不用<code>public</code>、<code>protected</code>、<code>private</code>修饰的字段和方法就是包作用域。</p>\n<h2 id=\"import\"><a class=\"markdownIt-Anchor\" href=\"#import\"></a> import</h2>\n<p>使用<code>import</code>语句，导入包中的类或者子包</p>\n<p>在写<code>import</code>的时候，可以使用<code>*</code>，表示把这个包下面的所有<code>class</code>都导入进来（但不包括子包的<code>class</code>）</p>\n<p>还有一种<code>import static</code>的语法，它可以导入可以导入一个类的静态字段和静态方法。</p>\n<h2 id=\"作用域\"><a class=\"markdownIt-Anchor\" href=\"#作用域\"></a> 作用域</h2>\n<p>感觉不用写。</p>\n<p>一个是java支持嵌套类，内部的类也可以访问``private`</p>\n<h2 id=\"内部类\"><a class=\"markdownIt-Anchor\" href=\"#内部类\"></a> 内部类</h2>\n<p>嵌套类，可以声明可以匿名</p>\n<p>在方法内部定义一个匿名类，这玩意其实就是一个东西继承自某个父类，然后重写一下里边的方法？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Runnable r = new 父类类名() &#123;</span><br><span class=\"line\">    // 实现必要的抽象方法...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"classpath和jar\"><a class=\"markdownIt-Anchor\" href=\"#classpath和jar\"></a> classpath和jar</h2>\n<p><s>不会</s></p>\n<p>jar包相当于zip包，其实就是把编译好的一堆<code>.class</code>文件打包到一起便于管理</p>\n<h2 id=\"模块\"><a class=\"markdownIt-Anchor\" href=\"#模块\"></a> 模块</h2>\n<p>应该是依赖管理之类的，懒得看了</p>\n<hr />\n<h1 id=\"java的一些核心类\"><a class=\"markdownIt-Anchor\" href=\"#java的一些核心类\"></a> JAVA的一些核心类</h1>\n<blockquote>\n<p>怎么都nm4点了，写完这段歇了（</p>\n</blockquote>\n<h2 id=\"string\"><a class=\"markdownIt-Anchor\" href=\"#string\"></a> String</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = <span class=\"string\">&quot;eee&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>首字母大写（</strong></p>\n<p><code>String</code>不可变</p>\n<p>由于是<strong>引用</strong>类型，我们要用<code>s1.equals(s2)</code>这种来判断是否相同</p>\n<p><code>equalsIgnoreCase()</code>方法忽略大小写比较</p>\n<p>一堆方法啊。。</p>\n<p>直接抄了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否包含子串:</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.contains(<span class=\"string\">&quot;ll&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.indexOf(<span class=\"string\">&quot;l&quot;</span>); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.lastIndexOf(<span class=\"string\">&quot;l&quot;</span>); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.startsWith(<span class=\"string\">&quot;He&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.endsWith(<span class=\"string\">&quot;lo&quot;</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.substring(<span class=\"number\">2</span>); <span class=\"comment\">// &quot;llo&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello&quot;</span>.substring(<span class=\"number\">2</span>, <span class=\"number\">4</span>); <span class=\"comment\">//&quot;ll&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用trim()方法可以移除字符串首尾空白字符。空白字符包括空格，\\t，\\r，\\n：</span></span><br><span class=\"line\"><span class=\"string\">&quot;  \\tHello\\r\\n &quot;</span>.trim(); <span class=\"comment\">// &quot;Hello&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span>.isEmpty(); <span class=\"comment\">// true，因为字符串长度为0</span></span><br><span class=\"line\"><span class=\"string\">&quot;  &quot;</span>.isEmpty(); <span class=\"comment\">// false，因为字符串长度不为0</span></span><br><span class=\"line\"><span class=\"string\">&quot;  \\n&quot;</span>.isBlank(); <span class=\"comment\">// true，因为只包含空白字符</span></span><br><span class=\"line\"><span class=\"string\">&quot; Hello &quot;</span>.isBlank(); <span class=\"comment\">// false，因为包含非空白字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">String s = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">s.replace(<span class=\"string\">&#x27;l&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>); <span class=\"comment\">// &quot;hewwo&quot;，所有字符&#x27;l&#x27;被替换为&#x27;w&#x27;</span></span><br><span class=\"line\">s.replace(<span class=\"string\">&quot;ll&quot;</span>, <span class=\"string\">&quot;~~&quot;</span>); <span class=\"comment\">// &quot;he~~o&quot;，所有子串&quot;ll&quot;被替换为&quot;~~&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">replace还支持正则，没学过</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">String[] arr = &#123;<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>, <span class=\"string\">&quot;C&quot;</span>&#125;;</span><br><span class=\"line\">String s = String.join(<span class=\"string\">&quot;***&quot;</span>, arr); <span class=\"comment\">// &quot;A***B***C&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">String.valueOf(<span class=\"number\">123</span>); <span class=\"comment\">// &quot;123&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"number\">45.67</span>); <span class=\"comment\">// &quot;45.67&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"keyword\">true</span>); <span class=\"comment\">// &quot;true&quot;</span></span><br><span class=\"line\">String.valueOf(<span class=\"keyword\">new</span> Object()); <span class=\"comment\">// 类似java.lang.Object@636be97c</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">char</span>[] cs = <span class=\"string\">&quot;Hello&quot;</span>.toCharArray(); <span class=\"comment\">// String -&gt; char[]</span></span><br><span class=\"line\">String s = <span class=\"keyword\">new</span> String(cs); <span class=\"comment\">// char[] -&gt; String</span></span><br></pre></td></tr></table></figure>\n<p>还要byte字符串编码啥的，这玩意我感觉需要就火速百度就完了。</p>\n<h2 id=\"stringbuilder\"><a class=\"markdownIt-Anchor\" href=\"#stringbuilder\"></a> StringBuilder</h2>\n<p>String可以直接用+拼接，但是效率不高。</p>\n<p>如果要一直添加字符的话可以用这个玩意</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">1024</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">    sb.append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">    sb.append(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">String s = sb.toString();</span><br></pre></td></tr></table></figure>\n<p>支持链式操作，就是说可以一直<code>.append().append()...</code>之类的</p>\n<p>还有个<code>insert</code>方法，要给插入的index和内容</p>\n<p>不过链式操作只要函数结束之后返回对象引用就行了吧（</p>\n<p><s>谁叫这玩意啥都是引用</s></p>\n<h2 id=\"包装类型\"><a class=\"markdownIt-Anchor\" href=\"#包装类型\"></a> 包装类型</h2>\n<p>意思就是类似<code>int</code>这种基本类型用类进行了包装，可以使用引用和一些奇奇怪怪的方法。</p>\n<p>进行一个抄</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">基本类型</th>\n<th style=\"text-align:left\">对应的引用类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">java.lang.Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">java.lang.Byte</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">short</td>\n<td style=\"text-align:left\">java.lang.Short</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">java.lang.Integer</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">java.lang.Long</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">java.lang.Float</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">java.lang.Double</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">char</td>\n<td style=\"text-align:left\">java.lang.Character</td>\n</tr>\n</tbody>\n</table>\n<p>int的转换示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">100</span>;</span><br><span class=\"line\">Integer n = Integer.valueOf(i);</span><br><span class=\"line\"><span class=\"keyword\">int</span> x = n.intValue();</span><br><span class=\"line\">你甚至可以这么写</span><br><span class=\"line\">Integer n = <span class=\"number\">100</span>; <span class=\"comment\">// 编译器自动使用Integer.valueOf(int)</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> x = n; <span class=\"comment\">// 编译器自动使用Integer.intValue()</span></span><br></pre></td></tr></table></figure>\n<p>很显然这个<code>Integer.valueOf(i)</code>是静态方法，而且这玩意实现有优化，比<code>new Integer(i)</code>效率更高，因为他返回给引用的可能是以前就已经存在的实例</p>\n<p>当然，这些B东西都是不可更改的。。</p>\n<p>静态方法<code>parseInt()</code>可以把字符串解析成一个整数</p>\n<h2 id=\"枚举类\"><a class=\"markdownIt-Anchor\" href=\"#枚举类\"></a> 枚举类</h2>\n<p>例如我要定义周一到周日这7天，而且我不想让这7天以外的符号和他进行操作，就可以用<code>enum</code>关键字声明</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Weekday</span> </span>&#123;</span><br><span class=\"line\">    SUN, MON, TUE, WED, THU, FRI, SAT;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">本质来说感觉是这样，别问为啥例子变了，我也不知道</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> <span class=\"keyword\">extends</span> <span class=\"title\">Enum</span> </span>&#123; <span class=\"comment\">// 继承自Enum，标记为final class</span></span><br><span class=\"line\">    <span class=\"comment\">// 每个实例均为全局唯一:</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color RED = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color GREEN = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Color BLUE = <span class=\"keyword\">new</span> Color();</span><br><span class=\"line\">    <span class=\"comment\">// private构造方法，确保外部无法调用new操作符:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Color</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我个人感觉这些其实就是抽象符号，而且拥有<code>static final</code>的属性</p>\n<p>这样就不会有类型外的值和非枚举类内的值相互比较了</p>\n<p>因为有<code>static</code>的属性，我们显然可以用<code>==</code>进行比较</p>\n<p>有方法<code>name()</code>返回常量名</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = Weekday.SUN.name(); <span class=\"comment\">// &quot;SUN&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>ordinal()</code>返回定义的常量的顺序，从0开始计数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = Weekday.MON.ordinal(); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n<p>既然这玩意本质是类，我们也可以在里边改写构造方法，给它加上一些值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Weekday</span> </span>&#123;</span><br><span class=\"line\">    MON(<span class=\"number\">1</span>), TUE(<span class=\"number\">2</span>), WED(<span class=\"number\">3</span>), THU(<span class=\"number\">4</span>), FRI(<span class=\"number\">5</span>), SAT(<span class=\"number\">6</span>), SUN(<span class=\"number\">0</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> dayValue;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Weekday</span><span class=\"params\">(<span class=\"keyword\">int</span> dayValue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dayValue = dayValue;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们可以访问引用的<code>daValue</code>值获得信息。。</p>\n<h2 id=\"记录类\"><a class=\"markdownIt-Anchor\" href=\"#记录类\"></a> 记录类</h2>\n<p>用来记录数据的不变类，写的更方便</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> record <span class=\"title\">A</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以改写构造方法加上判断</p>\n<h2 id=\"biginteger\"><a class=\"markdownIt-Anchor\" href=\"#biginteger\"></a> BigInteger</h2>\n<p>高精度，用它给你的方法就完了。</p>\n<p>实例化的时候要用字符串</p>\n<h2 id=\"bigdecimal\"><a class=\"markdownIt-Anchor\" href=\"#bigdecimal\"></a> BigDecimal</h2>\n<p>和上边那个差不多呃</p>\n<blockquote>\n<p>通过<code>BigDecimal</code>的<code>stripTrailingZeros()</code>方法，可以将一个<code>BigDecimal</code>格式化为一个相等的，但去掉了末尾0的<code>BigDecimal</code></p>\n</blockquote>\n<h2 id=\"工具类\"><a class=\"markdownIt-Anchor\" href=\"#工具类\"></a> 工具类</h2>\n<ul>\n<li>Math：数学计算</li>\n<li>Random：生成伪随机数</li>\n<li>SecureRandom：生成安全的随机数</li>\n</ul>\n<p>呃这个感觉没啥好说的</p>\n<h3 id=\"math\"><a class=\"markdownIt-Anchor\" href=\"#math\"></a> Math</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Math.abs(-<span class=\"number\">100</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\">Math.abs(-<span class=\"number\">7.8</span>); <span class=\"comment\">// 7.8</span></span><br><span class=\"line\"></span><br><span class=\"line\">Math.max(<span class=\"number\">100</span>, <span class=\"number\">99</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\">Math.min(<span class=\"number\">1.2</span>, <span class=\"number\">2.3</span>); <span class=\"comment\">// 1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\">Math.pow(<span class=\"number\">2</span>, <span class=\"number\">10</span>); <span class=\"comment\">// 2的10次方=1024</span></span><br><span class=\"line\">Math.sqrt(<span class=\"number\">2</span>); <span class=\"comment\">// 1.414...</span></span><br><span class=\"line\">Math.exp(<span class=\"number\">2</span>); <span class=\"comment\">// 7.389...</span></span><br><span class=\"line\">Math.log(<span class=\"number\">4</span>); <span class=\"comment\">// 1.386...</span></span><br><span class=\"line\">Math.log10(<span class=\"number\">100</span>); <span class=\"comment\">// 2</span></span><br><span class=\"line\">Math.sin(<span class=\"number\">3.14</span>); <span class=\"comment\">// 0.00159...</span></span><br><span class=\"line\">Math.cos(<span class=\"number\">3.14</span>); <span class=\"comment\">// -0.9999...</span></span><br><span class=\"line\">Math.tan(<span class=\"number\">3.14</span>); <span class=\"comment\">// -0.0015...</span></span><br><span class=\"line\">Math.asin(<span class=\"number\">1.0</span>); <span class=\"comment\">// 1.57079...</span></span><br><span class=\"line\">Math.acos(<span class=\"number\">1.0</span>); <span class=\"comment\">// 0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> pi = Math.PI; <span class=\"comment\">// 3.14159...</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> e = Math.E; <span class=\"comment\">// 2.7182818...</span></span><br><span class=\"line\">Math.sin(Math.PI / <span class=\"number\">6</span>); <span class=\"comment\">// sin(π/6) = 0.5</span></span><br><span class=\"line\"><span class=\"number\">0</span>-<span class=\"number\">1</span></span><br><span class=\"line\">Math.random(); <span class=\"comment\">// 0.53907... 每次都不一样</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"random\"><a class=\"markdownIt-Anchor\" href=\"#random\"></a> Random</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Random r = <span class=\"keyword\">new</span> Random(种子);</span><br><span class=\"line\">r.nextInt(); <span class=\"comment\">// 2071575453,每次都不一样</span></span><br><span class=\"line\">r.nextInt(<span class=\"number\">10</span>); <span class=\"comment\">// 5,生成一个[0,10)之间的int</span></span><br><span class=\"line\">r.nextLong(); <span class=\"comment\">// 8811649292570369305,每次都不一样</span></span><br><span class=\"line\">r.nextFloat(); <span class=\"comment\">// 0.54335...生成一个[0,1)之间的float</span></span><br><span class=\"line\">r.nextDouble(); <span class=\"comment\">// 0.3716...生成一个[0,1)之间的double</span></span><br><span class=\"line\">r.nextBytes();</span><br></pre></td></tr></table></figure>\n<h3 id=\"securerandom\"><a class=\"markdownIt-Anchor\" href=\"#securerandom\"></a> SecureRandom</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecureRandom sr = <span class=\"keyword\">new</span> SecureRandom();</span><br></pre></td></tr></table></figure>\n<p>然后疯狂的用就完了</p>\n<hr />\n<p>DONE！！！！！</p>"},{"title":"CQL-保守Q学习","date":"2023-07-25T00:44:45.000Z","_content":"> 记录一下读论文的情况喵\n# 引入\n\n**[参数]** $(\\mathcal{S,A},T,r,\\gamma)$\n\n动作、状态空间，$T(\\mathbf{s'|s,a})$转移，$r(\\mathbf{s,a})$回报，$\\pi_\\beta(\\mathbf{a|s})$数据集行为策略，$\\mathcal{D}$数据集，$d^{\\pi_\\beta}(\\mathbf{s})$折扣边缘状态分布\n\n$\\mathcal{D}$从$d^{\\pi_\\beta}(\\mathbf{s})\\pi_\\beta(\\mathbf{a|s})$中抽样\n\n一个基本的迭代方式如下\n\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a},\\mathbf{s'} \\sim \\mathcal{D}}\\left[\\left(r(\\mathbf{s}, \\mathbf{a})+\\gamma{\\mathbb{E}}_{\\mathbf{a}'\\sim\\hat\\pi^k(\\mathbf{a'|s'})} [\\hat{Q}^{k}(\\mathbf{s'}, \\mathbf{a'})]-Q(\\mathbf{s,a}))\\right)^2 \\right]\\\\\n$$\n\n$$\n\\hat \\pi^{k+1}\\leftarrow \\arg \\max _{\\pi} \\mathbb{E}_{\\mathbf{s}\\sim \\mathcal{D},\\mathbf{a}\\sim\\pi^k(\\mathbf(a|s))}[\\hat Q^{k+1}(\\mathbf{s,a})]\n$$\n\n**[问题]** 对状态-动作对采样不充分导致sample error\n\n<!-- more -->\n\n# Bellman算子\n\n我们知道，状态空间与动作空间均为集合，假设状态空间$\\mathcal{S}$为$\\{s_1,s_2,\\cdots,s_n,\\cdots\\}$,动作空间$\\mathcal{A}$为$\\{a_1,a_2,\\cdots,a_m,\\cdots \\}$，同时二者可以表示为一系列向量\n\n\n\n**\\[定义]** 值函数$\\mathbf v_\\pi:\\mathcal S \\rightarrow \\mathbb R$，策略$\\pi$下，从状态s开始到结束的回报期望\n\n- 最优值函数$\\mathbf v_*:\\mathcal S \\rightarrow \\mathbb R$，$\\mathbf v_*(s)=\\max_\\pi\\mathbf v_\\pi(s)$\n\n**[定义]** $\\mathcal R^a_s$：状态s做动作a得到的奖励的期望，$\\mathcal P^a_{s,s'}$状态转移概率\n\n- $\\mathbf R_\\pi(s)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal R^a_s$\n- $\\mathbf P_\\pi(s,s')=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal P ^a_{s,s'}$\n- 同样可以用向量和矩阵考虑\n\n**[Bellman Policy Operator]** $\\mathbf B_\\pi,$ $\\mathbf B_\\pi=\\mathbf R_\\pi + \\gamma\\mathbf P_\\pi\\cdot\\mathbf v$\n\n- 为线性算子，存在不动点$\\mathbf{v_\\pi},s.t.\\mathbf{B_\\pi v_\\pi=v_\\pi}$\n\n**[Bellman Optimality Operator]** $\\mathbf B_*,$ $\\mathbf {B_*v}(s)=\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s'\\in\\mathcal S}\\mathcal P^a_{s,s'}\\cdot\\mathbf v(s')\\}$\n\n- 同样存在不动点\n\n**[贪心策略算子]** $\\mathbf G,$ $\\mathbf {G}(\\mathbf v(s))=\\arg\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s'\\in\\mathcal S}\\mathcal P^a_{s,s'}\\cdot\\mathbf v(s')\\}$\n\n**[性质]** $\\mathbf B_\\pi，\\mathbf B_*$均具有唯一不动点(巴拿赫不动点定理)，且最终收敛至不动点\n\n**[值迭代]** $\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_\\pi} \\mathbf{v=v_\\pi}$\n\n\n**[策略迭代]** 迭代过程为$\\pi_{k+1}=\\mathbf G(\\mathbf v_{\\pi_k})$\n\n> 原理：由$\\mathbf{B_*v_{\\pi_k}}=\\mathbf B_{\\mathbf G(\\pi_k)}\\mathbf v_{\\pi_k}=\\mathbf B_{\\pi_{k+1}}\\mathbf v_{\\pi_k} $，有$\\mathbf{B_*v_{\\pi_k}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$\n>\n> 所以$\\mathbf{B^N_{\\pi_{k+1}}v_{\\pi_k}}=\\mathbf v_{\\pi_{k+1}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$，说明这是一个不断优化的过程\n\n由于$\\mathbf B_*$有唯一不动点$\\mathbf v_*,s.t.\\mathbf {B_*v_*=v_*}$，且单增\n\n因此$\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_*} \\mathbf{v=v_*}$，可以考虑直接迭代\n\n\n\n# 保守Q学习-CQL\n\n## Policy Evaluation\n\n为了防止高估价值，在原MSE式子的基础上让他最小化Q值来学习保守的下限的Q函数，相当于添加一个惩罚项来让Q函数没那么大\n\n具体来说，我们考虑一个特定的动作-状态分布$\\mu(\\mathbf{s,a})$，最小化该分布下的Q函数。由于普通Q函数的训练过程中不会查询未出现过状态下的Q函数值，只查询未出现过动作下的值，令$\\mu$匹配数据集，有\n\n$$\n\\mu{(\\mathbf{s,a})}=d^{\\pi_\\beta}(\\mathbf{s})\\mu(\\mathbf{a|s})\n$$\n\n考虑权衡因子$\\alpha$,我们得到policy evaluation\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \n$$\n\n通过再添加一项，我们能大大收紧这个下界：\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{red}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]})\\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \\\\\n$$\n\n~~原理看不懂，貌似是考虑了采样的集中性质~~\n\n此时在$\\mu=\\pi$时，该式给出了策略$\\pi$下的预期值的限制\n\n**[结论]** 式子给出了一个真实Q函数的下限，而且数据越多，保证下界的$\\alpha$值减小\n\n## CQL\n\n考虑优化策略，由于式2要求$\\mu=\\pi$，我们可以考虑每次迭代$\\hat\\pi^k$后迭代式2得到Q值，然而这样计算开销过大\n\n因此考虑使用$\\mu$近似那个能最大化当前Q函数迭代的策略\n\n因此对式2修正为\n$$\n\\min _{Q} \\max_{\\mu}\\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{black}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim\\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a} ) ] } ) \\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B} }^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] +\\mathcal{R}(\\mu)\n$$\n$$\n\n$$\n\n其中$\\mathcal{R}(\\mu)$为正则项，防止过拟合\n\n考虑使用KL散度作为正则项，计先验分布$\\rho(\\mathbf{a|s})$，则有$\\mathcal R(\\mu)=-D_{KL}(\\mu,\\rho)$\n\n两个想法是把这个先验分布设置成均匀分布或者$\\hat\\pi^{k-1}$的分布\n\n**[正则化]** 由于先要找到$\\mu$令式子最大，$\\mathcal{R}(\\mu)$能减少分布的方差，防止过拟合\n","source":"_posts/04学习/cql.md","raw":"---\ntitle: CQL-保守Q学习\ndate: 2023-07-25 08:44:45\ntags: RL\ncategories:\n- DRL\n---\n> 记录一下读论文的情况喵\n# 引入\n\n**[参数]** $(\\mathcal{S,A},T,r,\\gamma)$\n\n动作、状态空间，$T(\\mathbf{s'|s,a})$转移，$r(\\mathbf{s,a})$回报，$\\pi_\\beta(\\mathbf{a|s})$数据集行为策略，$\\mathcal{D}$数据集，$d^{\\pi_\\beta}(\\mathbf{s})$折扣边缘状态分布\n\n$\\mathcal{D}$从$d^{\\pi_\\beta}(\\mathbf{s})\\pi_\\beta(\\mathbf{a|s})$中抽样\n\n一个基本的迭代方式如下\n\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a},\\mathbf{s'} \\sim \\mathcal{D}}\\left[\\left(r(\\mathbf{s}, \\mathbf{a})+\\gamma{\\mathbb{E}}_{\\mathbf{a}'\\sim\\hat\\pi^k(\\mathbf{a'|s'})} [\\hat{Q}^{k}(\\mathbf{s'}, \\mathbf{a'})]-Q(\\mathbf{s,a}))\\right)^2 \\right]\\\\\n$$\n\n$$\n\\hat \\pi^{k+1}\\leftarrow \\arg \\max _{\\pi} \\mathbb{E}_{\\mathbf{s}\\sim \\mathcal{D},\\mathbf{a}\\sim\\pi^k(\\mathbf(a|s))}[\\hat Q^{k+1}(\\mathbf{s,a})]\n$$\n\n**[问题]** 对状态-动作对采样不充分导致sample error\n\n<!-- more -->\n\n# Bellman算子\n\n我们知道，状态空间与动作空间均为集合，假设状态空间$\\mathcal{S}$为$\\{s_1,s_2,\\cdots,s_n,\\cdots\\}$,动作空间$\\mathcal{A}$为$\\{a_1,a_2,\\cdots,a_m,\\cdots \\}$，同时二者可以表示为一系列向量\n\n\n\n**\\[定义]** 值函数$\\mathbf v_\\pi:\\mathcal S \\rightarrow \\mathbb R$，策略$\\pi$下，从状态s开始到结束的回报期望\n\n- 最优值函数$\\mathbf v_*:\\mathcal S \\rightarrow \\mathbb R$，$\\mathbf v_*(s)=\\max_\\pi\\mathbf v_\\pi(s)$\n\n**[定义]** $\\mathcal R^a_s$：状态s做动作a得到的奖励的期望，$\\mathcal P^a_{s,s'}$状态转移概率\n\n- $\\mathbf R_\\pi(s)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal R^a_s$\n- $\\mathbf P_\\pi(s,s')=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal P ^a_{s,s'}$\n- 同样可以用向量和矩阵考虑\n\n**[Bellman Policy Operator]** $\\mathbf B_\\pi,$ $\\mathbf B_\\pi=\\mathbf R_\\pi + \\gamma\\mathbf P_\\pi\\cdot\\mathbf v$\n\n- 为线性算子，存在不动点$\\mathbf{v_\\pi},s.t.\\mathbf{B_\\pi v_\\pi=v_\\pi}$\n\n**[Bellman Optimality Operator]** $\\mathbf B_*,$ $\\mathbf {B_*v}(s)=\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s'\\in\\mathcal S}\\mathcal P^a_{s,s'}\\cdot\\mathbf v(s')\\}$\n\n- 同样存在不动点\n\n**[贪心策略算子]** $\\mathbf G,$ $\\mathbf {G}(\\mathbf v(s))=\\arg\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s'\\in\\mathcal S}\\mathcal P^a_{s,s'}\\cdot\\mathbf v(s')\\}$\n\n**[性质]** $\\mathbf B_\\pi，\\mathbf B_*$均具有唯一不动点(巴拿赫不动点定理)，且最终收敛至不动点\n\n**[值迭代]** $\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_\\pi} \\mathbf{v=v_\\pi}$\n\n\n**[策略迭代]** 迭代过程为$\\pi_{k+1}=\\mathbf G(\\mathbf v_{\\pi_k})$\n\n> 原理：由$\\mathbf{B_*v_{\\pi_k}}=\\mathbf B_{\\mathbf G(\\pi_k)}\\mathbf v_{\\pi_k}=\\mathbf B_{\\pi_{k+1}}\\mathbf v_{\\pi_k} $，有$\\mathbf{B_*v_{\\pi_k}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$\n>\n> 所以$\\mathbf{B^N_{\\pi_{k+1}}v_{\\pi_k}}=\\mathbf v_{\\pi_{k+1}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$，说明这是一个不断优化的过程\n\n由于$\\mathbf B_*$有唯一不动点$\\mathbf v_*,s.t.\\mathbf {B_*v_*=v_*}$，且单增\n\n因此$\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_*} \\mathbf{v=v_*}$，可以考虑直接迭代\n\n\n\n# 保守Q学习-CQL\n\n## Policy Evaluation\n\n为了防止高估价值，在原MSE式子的基础上让他最小化Q值来学习保守的下限的Q函数，相当于添加一个惩罚项来让Q函数没那么大\n\n具体来说，我们考虑一个特定的动作-状态分布$\\mu(\\mathbf{s,a})$，最小化该分布下的Q函数。由于普通Q函数的训练过程中不会查询未出现过状态下的Q函数值，只查询未出现过动作下的值，令$\\mu$匹配数据集，有\n\n$$\n\\mu{(\\mathbf{s,a})}=d^{\\pi_\\beta}(\\mathbf{s})\\mu(\\mathbf{a|s})\n$$\n\n考虑权衡因子$\\alpha$,我们得到policy evaluation\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \n$$\n\n通过再添加一项，我们能大大收紧这个下界：\n\n$$\n\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{red}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]})\\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \\\\\n$$\n\n~~原理看不懂，貌似是考虑了采样的集中性质~~\n\n此时在$\\mu=\\pi$时，该式给出了策略$\\pi$下的预期值的限制\n\n**[结论]** 式子给出了一个真实Q函数的下限，而且数据越多，保证下界的$\\alpha$值减小\n\n## CQL\n\n考虑优化策略，由于式2要求$\\mu=\\pi$，我们可以考虑每次迭代$\\hat\\pi^k$后迭代式2得到Q值，然而这样计算开销过大\n\n因此考虑使用$\\mu$近似那个能最大化当前Q函数迭代的策略\n\n因此对式2修正为\n$$\n\\min _{Q} \\max_{\\mu}\\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{black}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim\\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a} ) ] } ) \\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B} }^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] +\\mathcal{R}(\\mu)\n$$\n$$\n\n$$\n\n其中$\\mathcal{R}(\\mu)$为正则项，防止过拟合\n\n考虑使用KL散度作为正则项，计先验分布$\\rho(\\mathbf{a|s})$，则有$\\mathcal R(\\mu)=-D_{KL}(\\mu,\\rho)$\n\n两个想法是把这个先验分布设置成均匀分布或者$\\hat\\pi^{k-1}$的分布\n\n**[正则化]** 由于先要找到$\\mu$令式子最大，$\\mathcal{R}(\\mu)$能减少分布的方差，防止过拟合\n","slug":"04学习/cql","published":1,"updated":"2023-10-21T15:51:27.269Z","_id":"clobly6dc0018zowbg3hqa3se","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>记录一下读论文的情况喵</p>\n</blockquote>\n<h1 id=\"引入\"><a class=\"markdownIt-Anchor\" href=\"#引入\"></a> 引入</h1>\n<p><strong>[参数]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"script\">S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">A</mi></mrow><mo separator=\"true\">,</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>γ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{S,A},T,r,\\gamma)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathcal\">A</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>动作、状态空间，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mrow><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(\\mathbf{s&#x27;|s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>转移，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r(\\mathbf{s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>回报，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>π</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_\\beta(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>数据集行为策略，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span>数据集，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d^{\\pi_\\beta}(\\mathbf{s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>折扣边缘状态分布</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span>从<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo><msub><mi>π</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d^{\\pi_\\beta}(\\mathbf{s})\\pi_\\beta(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>中抽样</p>\n<p>一个基本的迭代方式如下</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>γ</mi><msub><mi mathvariant=\"double-struck\">E</mi><mrow><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∼</mo><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mrow><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"bold\">′</mo></msup><mi mathvariant=\"bold\">∣</mi><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup></mrow><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"bold\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a},\\mathbf{s&#x27;} \\sim \\mathcal{D}}\\left[\\left(r(\\mathbf{s}, \\mathbf{a})+\\gamma{\\mathbb{E}}_{\\mathbf{a}&#x27;\\sim\\hat\\pi^k(\\mathbf{a&#x27;|s&#x27;})} [\\hat{Q}^{k}(\\mathbf{s&#x27;}, \\mathbf{a&#x27;})]-Q(\\mathbf{s,a}))\\right)^2 \\right]\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.49738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7820285714285713em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathbf mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3776199999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi>π</mi></munder><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msup><mi>π</mi><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\hat \\pi^{k+1}\\leftarrow \\arg \\max _{\\pi} \\mathbb{E}_{\\mathbf{s}\\sim \\mathcal{D},\\mathbf{a}\\sim\\pi^k(\\mathbf(a|s))}[\\hat Q^{k+1}(\\mathbf{s,a})]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6467699999999998em;vertical-align:-0.7em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43056em;\"><span style=\"top:-2.1em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.49738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7820285714285713em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\">s</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3776199999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">Q</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><strong>[问题]</strong> 对状态-动作对采样不充分导致sample error</p>\n<span id=\"more\"></span>\n<h1 id=\"bellman算子\"><a class=\"markdownIt-Anchor\" href=\"#bellman算子\"></a> Bellman算子</h1>\n<p>我们知道，状态空间与动作空间均为集合，假设状态空间<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span></span></span></span></span>为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{s_1,s_2,\\cdots,s_n,\\cdots\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\">}</span></span></span></span>,动作空间<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">A</span></span></span></span></span>为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>m</mi></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{a_1,a_2,\\cdots,a_m,\\cdots \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\">}</span></span></span></span>，同时二者可以表示为一系列向量</p>\n<p><strong>[定义]</strong> 值函数<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo>:</mo><mi mathvariant=\"script\">S</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_\\pi:\\mathcal S \\rightarrow \\mathbb R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.59444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>，策略<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>下，从状态s开始到结束的回报期望</p>\n<ul>\n<li>最优值函数<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo>:</mo><mi mathvariant=\"script\">S</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*:\\mathcal S \\rightarrow \\mathbb R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.59444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>π</mi></msub><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*(s)=\\max_\\pi\\mathbf v_\\pi(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<p><strong>[定义]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathcal R^a_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93033em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span>：状态s做动作a得到的奖励的期望，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathcal P^a_{s,s&#x27;}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0944180000000001em;vertical-align:-0.411088em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span></span></span></span>状态转移概率</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">R</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi mathvariant=\"script\">A</mi></mrow></msub><mi>π</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathbf R_\\pi(s)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal R^a_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.07708em;vertical-align:-0.32708000000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.93033em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">P</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi mathvariant=\"script\">A</mi></mrow></msub><mi>π</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathbf P_\\pi(s,s&#x27;)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal P ^a_{s,s&#x27;}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.07708em;vertical-align:-0.32708000000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0944180000000001em;vertical-align:-0.411088em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>同样可以用向量和矩阵考虑</li>\n</ul>\n<p><strong>[Bellman Policy Operator]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mo>=</mo><msub><mi mathvariant=\"bold\">R</mi><mi>π</mi></msub><mo>+</mo><mi>γ</mi><msub><mi mathvariant=\"bold\">P</mi><mi>π</mi></msub><mo>⋅</mo><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi=\\mathbf R_\\pi + \\gamma\\mathbf P_\\pi\\cdot\\mathbf v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></p>\n<ul>\n<li>为线性算子，存在不动点<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo separator=\"true\">,</mo><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v_\\pi},s.t.\\mathbf{B_\\pi v_\\pi=v_\\pi}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p><strong>[Bellman Optimality Operator]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_*,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><mi mathvariant=\"bold\">v</mi></mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>a</mi></msub><mo stretchy=\"false\">{</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup><mo>+</mo><mi>γ</mi><msub><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∈</mo><mi mathvariant=\"script\">S</mi></mrow></msub><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup><mo>⋅</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf {B_*v}(s)=\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s&#x27;\\in\\mathcal S}\\mathcal P^a_{s,s&#x27;}\\cdot\\mathbf v(s&#x27;)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.161088em;vertical-align:-0.411088em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li>同样存在不动点</li>\n</ul>\n<p><strong>[贪心策略算子]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">G</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf G,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathbf\">G</span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">G</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>a</mi></msub><mo stretchy=\"false\">{</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup><mo>+</mo><mi>γ</mi><msub><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∈</mo><mi mathvariant=\"script\">S</mi></mrow></msub><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup><mo>⋅</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf {G}(\\mathbf v(s))=\\arg\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s&#x27;\\in\\mathcal S}\\mathcal P^a_{s,s&#x27;}\\cdot\\mathbf v(s&#x27;)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">G</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.161088em;vertical-align:-0.411088em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><strong>[性质]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mi mathvariant=\"normal\">，</mi><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi，\\mathbf B_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>均具有唯一不动点(巴拿赫不动点定理)，且最终收敛至不动点</p>\n<p><strong>[值迭代]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><msubsup><mi mathvariant=\"bold\">B</mi><mi>π</mi><mi mathvariant=\"bold\">N</mi></msubsup><mrow><mi mathvariant=\"bold\">v</mi><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_\\pi} \\mathbf{v=v_\\pi}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.090277em;vertical-align:-0.247em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><strong>[策略迭代]</strong> 迭代过程为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>π</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi mathvariant=\"bold\">G</mi><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi>k</mi></msub></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_{k+1}=\\mathbf G(\\mathbf v_{\\pi_k})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00586em;vertical-align:-0.25586em;\"></span><span class=\"mord mathbf\">G</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<blockquote>\n<p>原理：由$\\mathbf{B_*v_{\\pi_k}}=\\mathbf B_{\\mathbf G(\\pi_k)}\\mathbf v_{\\pi_k}=\\mathbf B_{\\pi_{k+1}}\\mathbf v_{\\pi_k} <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">，</mi><mi mathvariant=\"normal\">有</mi></mrow><annotation encoding=\"application/x-tex\">，有</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">有</span></span></span></span>\\mathbf{B_*v_{\\pi_k}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$</p>\n<p>所以<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><msubsup><mi mathvariant=\"bold\">B</mi><msub><mi>π</mi><mrow><mi mathvariant=\"bold\">k</mi><mo>+</mo><mn mathvariant=\"bold\">1</mn></mrow></msub><mi mathvariant=\"bold\">N</mi></msubsup><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub></msub><mo>≥</mo><mrow><msub><mi mathvariant=\"bold\">B</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B^N_{\\pi_{k+1}}v_{\\pi_k}}=\\mathbf v_{\\pi_{k+1}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2378019999999998em;vertical-align:-0.3945249999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mathbf mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3945249999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.933495em;vertical-align:-0.29752499999999993em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29752499999999993em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.94197em;vertical-align:-0.25586em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7002999999999999em;vertical-align:-0.25586em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span></span></span></span>，说明这是一个不断优化的过程</p>\n</blockquote>\n<p>由于<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>有唯一不动点<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*,s.t.\\mathbf {B_*v_*=v_*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，且单增</p>\n<p>因此<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><msubsup><mi mathvariant=\"bold\">B</mi><mo>∗</mo><mi mathvariant=\"bold\">N</mi></msubsup><mrow><mi mathvariant=\"bold\">v</mi><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_*} \\mathbf{v=v_*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.090277em;vertical-align:-0.247em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，可以考虑直接迭代</p>\n<h1 id=\"保守q学习-cql\"><a class=\"markdownIt-Anchor\" href=\"#保守q学习-cql\"></a> 保守Q学习-CQL</h1>\n<h2 id=\"policy-evaluation\"><a class=\"markdownIt-Anchor\" href=\"#policy-evaluation\"></a> Policy Evaluation</h2>\n<p>为了防止高估价值，在原MSE式子的基础上让他最小化Q值来学习保守的下限的Q函数，相当于添加一个惩罚项来让Q函数没那么大</p>\n<p>具体来说，我们考虑一个特定的动作-状态分布<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mu(\\mathbf{s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>，最小化该分布下的Q函数。由于普通Q函数的训练过程中不会查询未出现过状态下的Q函数值，只查询未出现过动作下的值，令<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>匹配数据集，有</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mu{(\\mathbf{s,a})}=d^{\\pi_\\beta}(\\mathbf{s})\\mu(\\mathbf{a|s})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>考虑权衡因子<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>,我们得到policy evaluation</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><mi>α</mi><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.630439em;vertical-align:-0.880439em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></span></p>\n<p>通过再添加一项，我们能大大收紧这个下界：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><mi>α</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mstyle mathcolor=\"red\"><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msub><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mstyle><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{red}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]})\\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.548299em;vertical-align:-0.880439em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1332799999999998em;vertical-align:-0.38327999999999984em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"color:red;\"><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbb\" style=\"color:red;\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">s</span></span><span class=\"mrel mtight\" style=\"color:red;\">∼</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;color:red;\">D</span></span><span class=\"mpunct mtight\" style=\"color:red;\">,</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">a</span></span><span class=\"mrel mtight\" style=\"color:red;\">∼</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord accent mtight\" style=\"color:red;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;color:red;\">π</span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\" style=\"color:red;\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\" style=\"color:red;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;color:red;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\" style=\"color:red;\">(</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">a</span></span><span class=\"mrel mtight\" style=\"color:red;\">∣</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">s</span></span><span class=\"mclose mtight\" style=\"color:red;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38327999999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:red;\">[</span><span class=\"mord mathdefault\" style=\"color:red;\">Q</span><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbf\" style=\"color:red;\">s</span></span><span class=\"mpunct\" style=\"color:red;\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbf\" style=\"color:red;\">a</span></span><span class=\"mclose\" style=\"color:red;\">)</span><span class=\"mclose\" style=\"color:red;\">]</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p><s>原理看不懂，貌似是考虑了采样的集中性质</s></p>\n<p>此时在<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\mu=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>时，该式给出了策略<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>下的预期值的限制</p>\n<p><strong>[结论]</strong> 式子给出了一个真实Q函数的下限，而且数据越多，保证下界的<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>值减小</p>\n<h2 id=\"cql\"><a class=\"markdownIt-Anchor\" href=\"#cql\"></a> CQL</h2>\n<p>考虑优化策略，由于式2要求<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\mu=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>，我们可以考虑每次迭代<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\hat\\pi^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span>后迭代式2得到Q值，然而这样计算开销过大</p>\n<p>因此考虑使用<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>近似那个能最大化当前Q函数迭代的策略</p>\n<p>因此对式2修正为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi>μ</mi></munder><mi>α</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mstyle mathcolor=\"black\"><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msub><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mstyle><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mo>+</mo><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min _{Q} \\max_{\\mu}\\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{black}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim\\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a} ) ] } ) \\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B} }^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] +\\mathcal{R}(\\mu)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.548299em;vertical-align:-0.880439em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4305599999999999em;\"><span style=\"top:-2.1em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">μ</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8361080000000001em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1332799999999998em;vertical-align:-0.38327999999999984em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"color:black;\"><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbb\" style=\"color:black;\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:black;\"><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">s</span></span><span class=\"mrel mtight\" style=\"color:black;\">∼</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;color:black;\">D</span></span><span class=\"mpunct mtight\" style=\"color:black;\">,</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">a</span></span><span class=\"mrel mtight\" style=\"color:black;\">∼</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord accent mtight\" style=\"color:black;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;color:black;\">π</span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\" style=\"color:black;\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\" style=\"color:black;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;color:black;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\" style=\"color:black;\">(</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">a</span></span><span class=\"mrel mtight\" style=\"color:black;\">∣</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">s</span></span><span class=\"mclose mtight\" style=\"color:black;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38327999999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:black;\">[</span><span class=\"mord mathdefault\" style=\"color:black;\">Q</span><span class=\"mopen\" style=\"color:black;\">(</span><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbf\" style=\"color:black;\">s</span></span><span class=\"mpunct\" style=\"color:black;\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbf\" style=\"color:black;\">a</span></span><span class=\"mclose\" style=\"color:black;\">)</span><span class=\"mclose\" style=\"color:black;\">]</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow></mrow><annotation encoding=\"application/x-tex\">\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{R}(\\mu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span>为正则项，防止过拟合</p>\n<p>考虑使用KL散度作为正则项，计先验分布<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rho(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>，则有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>μ</mi><mo separator=\"true\">,</mo><mi>ρ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal R(\\mu)=-D_{KL}(\\mu,\\rho)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\">R</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathdefault mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>两个想法是把这个先验分布设置成均匀分布或者<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\hat\\pi^{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>的分布</p>\n<p><strong>[正则化]</strong> 由于先要找到<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>令式子最大，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{R}(\\mu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span>能减少分布的方差，防止过拟合</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>记录一下读论文的情况喵</p>\n</blockquote>\n<h1 id=\"引入\"><a class=\"markdownIt-Anchor\" href=\"#引入\"></a> 引入</h1>\n<p><strong>[参数]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"script\">S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">A</mi></mrow><mo separator=\"true\">,</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>r</mi><mo separator=\"true\">,</mo><mi>γ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{S,A},T,r,\\gamma)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathcal\">A</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>动作、状态空间，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mrow><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(\\mathbf{s&#x27;|s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>转移，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">r(\\mathbf{s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>回报，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>π</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_\\beta(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>数据集行为策略，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span>数据集，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d^{\\pi_\\beta}(\\mathbf{s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>折扣边缘状态分布</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">D</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{D}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span>从<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo><msub><mi>π</mi><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d^{\\pi_\\beta}(\\mathbf{s})\\pi_\\beta(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>中抽样</p>\n<p>一个基本的迭代方式如下</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>γ</mi><msub><mi mathvariant=\"double-struck\">E</mi><mrow><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∼</mo><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mrow><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"bold\">′</mo></msup><mi mathvariant=\"bold\">∣</mi><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup></mrow><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"bold\">s</mi><mo mathvariant=\"bold\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi mathvariant=\"bold\">a</mi><mo mathvariant=\"bold\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a},\\mathbf{s&#x27;} \\sim \\mathcal{D}}\\left[\\left(r(\\mathbf{s}, \\mathbf{a})+\\gamma{\\mathbb{E}}_{\\mathbf{a}&#x27;\\sim\\hat\\pi^k(\\mathbf{a&#x27;|s&#x27;})} [\\hat{Q}^{k}(\\mathbf{s&#x27;}, \\mathbf{a&#x27;})]-Q(\\mathbf{s,a}))\\right)^2 \\right]\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.49738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7820285714285713em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathbf mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3776199999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi>π</mi></munder><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msup><mi>π</mi><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\hat \\pi^{k+1}\\leftarrow \\arg \\max _{\\pi} \\mathbb{E}_{\\mathbf{s}\\sim \\mathcal{D},\\mathbf{a}\\sim\\pi^k(\\mathbf(a|s))}[\\hat Q^{k+1}(\\mathbf{s,a})]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6467699999999998em;vertical-align:-0.7em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43056em;\"><span style=\"top:-2.1em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34479999999999994em;\"><span style=\"top:-2.49738em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7820285714285713em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\">s</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3776199999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">Q</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><strong>[问题]</strong> 对状态-动作对采样不充分导致sample error</p>","more":"<h1 id=\"bellman算子\"><a class=\"markdownIt-Anchor\" href=\"#bellman算子\"></a> Bellman算子</h1>\n<p>我们知道，状态空间与动作空间均为集合，假设状态空间<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span></span></span></span></span>为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{s_1,s_2,\\cdots,s_n,\\cdots\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\">}</span></span></span></span>,动作空间<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">A</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">A</span></span></span></span></span>为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>m</mi></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{a_1,a_2,\\cdots,a_m,\\cdots \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose\">}</span></span></span></span>，同时二者可以表示为一系列向量</p>\n<p><strong>[定义]</strong> 值函数<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo>:</mo><mi mathvariant=\"script\">S</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_\\pi:\\mathcal S \\rightarrow \\mathbb R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.59444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>，策略<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>下，从状态s开始到结束的回报期望</p>\n<ul>\n<li>最优值函数<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo>:</mo><mi mathvariant=\"script\">S</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*:\\mathcal S \\rightarrow \\mathbb R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.59444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.075em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>π</mi></msub><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*(s)=\\max_\\pi\\mathbf v_\\pi(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<p><strong>[定义]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathcal R^a_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93033em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span>：状态s做动作a得到的奖励的期望，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathcal P^a_{s,s&#x27;}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0944180000000001em;vertical-align:-0.411088em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span></span></span></span>状态转移概率</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">R</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi mathvariant=\"script\">A</mi></mrow></msub><mi>π</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathbf R_\\pi(s)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal R^a_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.07708em;vertical-align:-0.32708000000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.93033em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">P</mi><mi>π</mi></msub><mo stretchy=\"false\">(</mo><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>a</mi><mo>∈</mo><mi mathvariant=\"script\">A</mi></mrow></msub><mi>π</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\mathbf P_\\pi(s,s&#x27;)=\\sum_{a\\in\\mathcal A}\\pi(a|s)\\cdot\\mathcal P ^a_{s,s&#x27;}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.07708em;vertical-align:-0.32708000000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0944180000000001em;vertical-align:-0.411088em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>同样可以用向量和矩阵考虑</li>\n</ul>\n<p><strong>[Bellman Policy Operator]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mo>=</mo><msub><mi mathvariant=\"bold\">R</mi><mi>π</mi></msub><mo>+</mo><mi>γ</mi><msub><mi mathvariant=\"bold\">P</mi><mi>π</mi></msub><mo>⋅</mo><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi=\\mathbf R_\\pi + \\gamma\\mathbf P_\\pi\\cdot\\mathbf v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord\"><span class=\"mord mathbf\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></p>\n<ul>\n<li>为线性算子，存在不动点<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo separator=\"true\">,</mo><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v_\\pi},s.t.\\mathbf{B_\\pi v_\\pi=v_\\pi}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p><strong>[Bellman Optimality Operator]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_*,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><mi mathvariant=\"bold\">v</mi></mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>a</mi></msub><mo stretchy=\"false\">{</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup><mo>+</mo><mi>γ</mi><msub><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∈</mo><mi mathvariant=\"script\">S</mi></mrow></msub><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup><mo>⋅</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf {B_*v}(s)=\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s&#x27;\\in\\mathcal S}\\mathcal P^a_{s,s&#x27;}\\cdot\\mathbf v(s&#x27;)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.161088em;vertical-align:-0.411088em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></p>\n<ul>\n<li>同样存在不动点</li>\n</ul>\n<p><strong>[贪心策略算子]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">G</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf G,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathbf\">G</span><span class=\"mpunct\">,</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">G</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mi>a</mi></msub><mo stretchy=\"false\">{</mo><msubsup><mi mathvariant=\"script\">R</mi><mi>s</mi><mi>a</mi></msubsup><mo>+</mo><mi>γ</mi><msub><mo>∑</mo><mrow><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo>∈</mo><mi mathvariant=\"script\">S</mi></mrow></msub><msubsup><mi mathvariant=\"script\">P</mi><mrow><mi>s</mi><mo separator=\"true\">,</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup></mrow><mi>a</mi></msubsup><mo>⋅</mo><mi mathvariant=\"bold\">v</mi><mo stretchy=\"false\">(</mo><msup><mi>s</mi><mo mathvariant=\"normal\">′</mo></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf {G}(\\mathbf v(s))=\\arg\\max _a\\{\\mathcal R^a_s+\\gamma\\sum_{s&#x27;\\in\\mathcal S}\\mathcal P^a_{s,s&#x27;}\\cdot\\mathbf v(s&#x27;)\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">G</span></span><span class=\"mopen\">(</span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">s</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">max</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathcal\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.161088em;vertical-align:-0.411088em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mrel mtight\">∈</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.075em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4250200000000004em;margin-left:-0.08222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828285714285715em;\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.411088em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><strong>[性质]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mi>π</mi></msub><mi mathvariant=\"normal\">，</mi><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_\\pi，\\mathbf B_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>均具有唯一不动点(巴拿赫不动点定理)，且最终收敛至不动点</p>\n<p><strong>[值迭代]</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><msubsup><mi mathvariant=\"bold\">B</mi><mi>π</mi><mi mathvariant=\"bold\">N</mi></msubsup><mrow><mi mathvariant=\"bold\">v</mi><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mi>π</mi></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_\\pi} \\mathbf{v=v_\\pi}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.090277em;vertical-align:-0.247em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><strong>[策略迭代]</strong> 迭代过程为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>π</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi mathvariant=\"bold\">G</mi><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi>k</mi></msub></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_{k+1}=\\mathbf G(\\mathbf v_{\\pi_k})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00586em;vertical-align:-0.25586em;\"></span><span class=\"mord mathbf\">G</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<blockquote>\n<p>原理：由$\\mathbf{B_*v_{\\pi_k}}=\\mathbf B_{\\mathbf G(\\pi_k)}\\mathbf v_{\\pi_k}=\\mathbf B_{\\pi_{k+1}}\\mathbf v_{\\pi_k} <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">，</mi><mi mathvariant=\"normal\">有</mi></mrow><annotation encoding=\"application/x-tex\">，有</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">有</span></span></span></span>\\mathbf{B_*v_{\\pi_k}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}$</p>\n<p>所以<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><msubsup><mi mathvariant=\"bold\">B</mi><msub><mi>π</mi><mrow><mi mathvariant=\"bold\">k</mi><mo>+</mo><mn mathvariant=\"bold\">1</mn></mrow></msub><mi mathvariant=\"bold\">N</mi></msubsup><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub></msub><mo>≥</mo><mrow><msub><mi mathvariant=\"bold\">B</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><msub><mi>π</mi><mi mathvariant=\"bold\">k</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{B^N_{\\pi_{k+1}}v_{\\pi_k}}=\\mathbf v_{\\pi_{k+1}}\\ge \\mathbf{B_{\\pi_k}v_{\\pi_k}}= \\mathbf{v_{\\pi_k}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2378019999999998em;vertical-align:-0.3945249999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mathbf mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3945249999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.933495em;vertical-align:-0.29752499999999993em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29752499999999993em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.94197em;vertical-align:-0.25586em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7002999999999999em;vertical-align:-0.25586em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139199999999997em;\"><span style=\"top:-2.55em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathbf mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25586em;\"><span></span></span></span></span></span></span></span></span></span></span>，说明这是一个不断优化的过程</p>\n</blockquote>\n<p>由于<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf B_*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83611em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>有唯一不动点<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo separator=\"true\">,</mo><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mrow><msub><mi mathvariant=\"bold\">B</mi><mo>∗</mo></msub><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf v_*,s.t.\\mathbf {B_*v_*=v_*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805499999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">s</span><span class=\"mord\">.</span><span class=\"mord mathdefault\">t</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，且单增</p>\n<p>因此<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><msubsup><mi mathvariant=\"bold\">B</mi><mo>∗</mo><mi mathvariant=\"bold\">N</mi></msubsup><mrow><mi mathvariant=\"bold\">v</mi><mo>=</mo><msub><mi mathvariant=\"bold\">v</mi><mo>∗</mo></msub></mrow></mrow><annotation encoding=\"application/x-tex\">\\lim_{n\\rightarrow\\infty}\\mathbf{B^N_*} \\mathbf{v=v_*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.090277em;vertical-align:-0.247em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8432769999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.01597em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，可以考虑直接迭代</p>\n<h1 id=\"保守q学习-cql\"><a class=\"markdownIt-Anchor\" href=\"#保守q学习-cql\"></a> 保守Q学习-CQL</h1>\n<h2 id=\"policy-evaluation\"><a class=\"markdownIt-Anchor\" href=\"#policy-evaluation\"></a> Policy Evaluation</h2>\n<p>为了防止高估价值，在原MSE式子的基础上让他最小化Q值来学习保守的下限的Q函数，相当于添加一个惩罚项来让Q函数没那么大</p>\n<p>具体来说，我们考虑一个特定的动作-状态分布<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mu(\\mathbf{s,a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span></span></span>，最小化该分布下的Q函数。由于普通Q函数的训练过程中不会查询未出现过状态下的Q函数值，只查询未出现过动作下的值，令<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>匹配数据集，有</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><msup><mi>d</mi><msub><mi>π</mi><mi>β</mi></msub></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mu{(\\mathbf{s,a})}=d^{\\pi_\\beta}(\\mathbf{s})\\mu(\\mathbf{a|s})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>考虑权衡因子<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>,我们得到policy evaluation</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><mi>α</mi><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.630439em;vertical-align:-0.880439em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></span></p>\n<p>通过再添加一项，我们能大大收紧这个下界：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>←</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><mi>α</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mstyle mathcolor=\"red\"><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msub><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mstyle><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">\\hat{Q}^{k+1} \\leftarrow \\arg \\min _{Q} \\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{red}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]})\\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B}}^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] \\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1412099999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.548299em;vertical-align:-0.880439em;\"></span><span class=\"mop\">ar<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1332799999999998em;vertical-align:-0.38327999999999984em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"color:red;\"><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbb\" style=\"color:red;\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">s</span></span><span class=\"mrel mtight\" style=\"color:red;\">∼</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;color:red;\">D</span></span><span class=\"mpunct mtight\" style=\"color:red;\">,</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">a</span></span><span class=\"mrel mtight\" style=\"color:red;\">∼</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord accent mtight\" style=\"color:red;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;color:red;\">π</span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\" style=\"color:red;\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\" style=\"color:red;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;color:red;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\" style=\"color:red;\">(</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">a</span></span><span class=\"mrel mtight\" style=\"color:red;\">∣</span><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathbf mtight\" style=\"color:red;\">s</span></span><span class=\"mclose mtight\" style=\"color:red;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38327999999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:red;\">[</span><span class=\"mord mathdefault\" style=\"color:red;\">Q</span><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbf\" style=\"color:red;\">s</span></span><span class=\"mpunct\" style=\"color:red;\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathbf\" style=\"color:red;\">a</span></span><span class=\"mclose\" style=\"color:red;\">)</span><span class=\"mclose\" style=\"color:red;\">]</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p><s>原理看不懂，貌似是考虑了采样的集中性质</s></p>\n<p>此时在<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\mu=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>时，该式给出了策略<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>下的预期值的限制</p>\n<p><strong>[结论]</strong> 式子给出了一个真实Q函数的下限，而且数据越多，保证下界的<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>值减小</p>\n<h2 id=\"cql\"><a class=\"markdownIt-Anchor\" href=\"#cql\"></a> CQL</h2>\n<p>考虑优化策略，由于式2要求<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi><mo>=</mo><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\mu=\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span>，我们可以考虑每次迭代<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\hat\\pi^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span>后迭代式2得到Q值，然而这样计算开销过大</p>\n<p>因此考虑使用<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>近似那个能最大化当前Q函数迭代的策略</p>\n<p>因此对式2修正为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><mi>Q</mi></munder><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi>μ</mi></munder><mi>α</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>−</mo><mstyle mathcolor=\"black\"><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><msub><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mi>β</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">a</mi><mo>∣</mo><mi mathvariant=\"bold\">s</mi><mo stretchy=\"false\">)</mo></mrow></msub><mo stretchy=\"false\">[</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mstyle><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msub><mi mathvariant=\"double-struck\">E</mi><mrow><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo>∼</mo><mi mathvariant=\"script\">D</mi></mrow></msub><mrow><mo fence=\"true\">[</mo><msup><mrow><mo fence=\"true\">(</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mover accent=\"true\"><mi mathvariant=\"script\">B</mi><mo>^</mo></mover><mi>π</mi></msup><msup><mover accent=\"true\"><mi>Q</mi><mo>^</mo></mover><mi>k</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">s</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">a</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">]</mo></mrow><mo>+</mo><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min _{Q} \\max_{\\mu}\\alpha \\cdot(\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim \\mu(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a})]-{\\color{black}\\mathbb{E}_{\\mathbf{s} \\sim \\mathcal{D}, \\mathbf{a} \\sim\\hat{\\pi}_\\beta(\\mathbf{a} \\mid \\mathbf{s})}[Q(\\mathbf{s}, \\mathbf{a} ) ] } ) \\\\+\\frac{1}{2} \\mathbb{E}_{\\mathbf{s}, \\mathbf{a} \\sim \\mathcal{D}}\\left[\\left(Q(\\mathbf{s}, \\mathbf{a})-\\hat{\\mathcal{B} }^{\\pi} \\hat{Q}^{k}(\\mathbf{s}, \\mathbf{a})\\right)^{2}\\right] +\\mathcal{R}(\\mu)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.548299em;vertical-align:-0.880439em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.66786em;\"><span style=\"top:-2.0556690000000004em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">Q</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">min</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.880439em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4305599999999999em;\"><span style=\"top:-2.1em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">μ</span></span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8361080000000001em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mathdefault mtight\">μ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1332799999999998em;vertical-align:-0.38327999999999984em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"color:black;\"><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbb\" style=\"color:black;\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:black;\"><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">s</span></span><span class=\"mrel mtight\" style=\"color:black;\">∼</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;color:black;\">D</span></span><span class=\"mpunct mtight\" style=\"color:black;\">,</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">a</span></span><span class=\"mrel mtight\" style=\"color:black;\">∼</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord accent mtight\" style=\"color:black;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;color:black;\">π</span></span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mtight\" style=\"color:black;\">^</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\" style=\"color:black;\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;color:black;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29011428571428566em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\" style=\"color:black;\">(</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">a</span></span><span class=\"mrel mtight\" style=\"color:black;\">∣</span><span class=\"mord mtight\" style=\"color:black;\"><span class=\"mord mathbf mtight\" style=\"color:black;\">s</span></span><span class=\"mclose mtight\" style=\"color:black;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38327999999999984em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:black;\">[</span><span class=\"mord mathdefault\" style=\"color:black;\">Q</span><span class=\"mopen\" style=\"color:black;\">(</span><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbf\" style=\"color:black;\">s</span></span><span class=\"mpunct\" style=\"color:black;\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\" style=\"color:black;\"><span class=\"mord mathbf\" style=\"color:black;\">a</span></span><span class=\"mclose\" style=\"color:black;\">)</span><span class=\"mclose\" style=\"color:black;\">]</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">s</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">a</span></span><span class=\"mrel mtight\">∼</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.03041em;\">B</span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">Q</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">s</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">a</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3540079999999999em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow></mrow><annotation encoding=\"application/x-tex\">\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{R}(\\mu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span>为正则项，防止过拟合</p>\n<p>考虑使用KL散度作为正则项，计先验分布<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ρ</mi><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"bold\">a</mi><mi mathvariant=\"bold\">∣</mi><mi mathvariant=\"bold\">s</mi></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rho(\\mathbf{a|s})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">a</span><span class=\"mord mathbf\">∣</span><span class=\"mord mathbf\">s</span></span><span class=\"mclose\">)</span></span></span></span>，则有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>μ</mi><mo separator=\"true\">,</mo><mi>ρ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal R(\\mu)=-D_{KL}(\\mu,\\rho)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\">R</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathdefault mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">ρ</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>两个想法是把这个先验分布设置成均匀分布或者<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mover accent=\"true\"><mi>π</mi><mo>^</mo></mover><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\hat\\pi^{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\">^</span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>的分布</p>\n<p><strong>[正则化]</strong> 由于先要找到<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>令式子最大，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>μ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{R}(\\mu)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">R</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">μ</span><span class=\"mclose\">)</span></span></span></span>能减少分布的方差，防止过拟合</p>"},{"title":"价值学习","date":"2023-03-22T12:03:12.000Z","_content":"\n> 还是得把学的东西记下来，呃不然过段时间就忘了\n\n\n\n# 价值学习\n\n## DQN\n\n> - 动作价值函数Qπ是按照策略π下，环境s做出a动作后的收益期望。\n> - 最优动作函数Q⋆是所有策略中取最优的收益期望。这个东西显然可以给**动作打分**。\n> - 折扣回报率γ是为了让策略更早获得更大的回报设置的参数，每次都让回报乘一个γ的t次方\n>\n\n<!-- more -->\n\n如何学习这个Q⋆呢，我们使用一个深度网络来模拟，记作Q(s，a；w)，w就是神经网络中的参数，我们随机初始化w，然后学习w，最后让Q(s，a；w)尽量接近真正的Q⋆(s，a)即可。\n\nDQN输出的是**离散**的价值空间，也就是每个a上边的Q值。\n\n我们可以使用TD算法来学习w，我们先计算当前情况Q(s，a；w)预测的价值，随后执行动作a，环境到达s1，获得回报r1，这时我们比较Q(s，a；w)和r1+γ*Q(s1，a1；w）即可，a1为s1状态下让预测值最大的行动。\n\n这样就有了Loss，我们可以梯度下降更新w了。即\n\n$$w ← w − α · δ · ∇Q$$\n\nLoss函数一般是$1/2δ^2$\n\n这玩意是off-policy的，可以乱搞策略，但是一般的是 ϵ-greedy，(1-ϵ)概率用让Q(s，a；w)最大的a，ϵ概率随机挑一个a跑。而且可以应用经验回放，只需要记录以前的(s,a,r,s1)就可以拿这个数据来多次训练网络。\n\n## Q-Learning 和 SARSA\n\n>  一个学Q⋆一个学Qπ\n\n普通的Q学习已经不常用，SARSA通过TD训练Qπ，随后通过某种跟该算法**无关**的东西更新策略π，SARSA是on-policy的不能利用经验回放，如果状态空间是无限的我们也可以在SARSA上套个神经网络，跟DQN差不多了。\n\n## 杂项\n\n> 多步TD\n\nTD时多进行几次动作然后进行TD即可。\n\n> 蒙特卡洛\n\n一次进行完游戏，计算总回报ut，然后鼓励价值网络接近ut。好处是无偏性，坏处是方差大收敛很慢。\n\n> 自举\n\nTD算法属于自举，好处是方差小，收敛快，坏处是估算有偏。\n\n# 价值学习技术\n\n## 优先经验回放\n\n- 通常在经验回放数组中有足够的四元组时才开始使用经验回放更新DQN\n- 经验回放的优点是可以打破序列的相关性，因为随机抽到的四元组都是独立的\n- 经验回放可以用更少的样本获得同样的表现\n\n优先经验回放是这种方法的优化，即给某些回放数据更高的权重，令其更容易被抽中。\n\n如何判断权重呢，我们可以想象，如果某个数据下的DQN的预测和真正的Q⋆距离较远，是否可以认为该数据应该更收到关注呢。\n\n常用的分配权重方法有两种：\n\n$$p_j\\propto|\\delta_j|+\\epsilon$$\n\n$$p_j\\propto\\frac{1}{rank(j)}$$\n\n其中$\\epsilon$是一个很小的数，防止有些东西抽不到，rank(j)是排序后的序号\n\n然而权重不同时，我们也应该设置梯度下降不同的学习率来抵消非均匀抽样造成的误差\n\n$$\\alpha_j=\\frac{\\alpha}{(b\\cdot p_j)^\\beta}$$\n\n其中$\\beta$是超参数，b是经验回放样本总数。\n\n\n\n## Q学习高估问题\n\n### 目标网络与双Q学习\n\nQ学习会高估真实价值。原因是\n\n- 自举导致偏差传播\n- 最大化问题导致高估(噪声均值为0，然而取最大值会导致高估)\n\n高估是非均匀的，因此会造成偏差。\n\n我们可以使用**目标网络**降低自举的危害，即使用一个结构相同但是参数不同的目标网络Q(s,a;w1)来估算TD目标，梯度下降更新原网络,然后用一个加权平均更新目标网络。\n\n要降低最大化偏差，我们可以使用一种**Double Q-learning**，该方法在目标网络上更进一步。流程如下\n\n设目标网络为$\\omega_{now}^-$\n\n- 计算DQN正向传播$\\hat{q}=Q(s_j,a_j;\\omega_{now})$\n\n- 找到a令$a^*=argmaxQ(s_{j+1},a;\\omega_{now})$\n\n- 计算$\\hat{q}_{j+1}=Q(s_j,a^*;\\omega_{now}^-)$\n\n- 计算TD误差\n- 梯度下降更新DQN网络\n- 加权平均更新目标网络\n\n### 对决网络\n\n> - 最优状态价值函数是对Q⋆的所有动作和回报取期望V⋆(s)\n> - 定义最优优势函数D⋆(s,a)=Q⋆(s,a)-V⋆(s)\n> - 又有以下定理D⋆(s,a)=Q⋆(s,a)-V⋆(s)-maxD⋆(s,a1)，其中a1为令D⋆(s,a)最大的a\n\n这意味着我们如果能把D⋆和V⋆搞出来就可以获得输出的Q\n\n而且这个东西的训练和DQN完全相同，所用优化方法也能应用在这上面。\n\n### 噪声网络\n\n> 这玩意可以应用与几乎所有的深度强化学习方法中，而且能显著提高DQN的表现\n\n基本原理为把$\\omega改为\\mu(均值)+\\sigma(标准差)\\circ\\epsilon(随机噪声)$，噪声符合N(0,1)分布，该符号表示逐项乘积，即$\\omega_i=\\mu_i+\\sigma_i*\\epsilon_i$，这个意思是就是神经网络的参数从一个给定均值和标准差的正态分布中抽取。\n\n训练时加入噪声可以鼓励网络进行更多的探索，而训练完成后决策可以把方差设为0，这时网络就变为了标准的DQN网络。\n\n最终训练时可以把本部分提到的所有技巧全部用上。","source":"_posts/04学习/价值学习.md","raw":"---\ntitle: 价值学习\ndate: 2023-03-22 20:03:12\ntags: RL\ncategories:\n- DRL\n---\n\n> 还是得把学的东西记下来，呃不然过段时间就忘了\n\n\n\n# 价值学习\n\n## DQN\n\n> - 动作价值函数Qπ是按照策略π下，环境s做出a动作后的收益期望。\n> - 最优动作函数Q⋆是所有策略中取最优的收益期望。这个东西显然可以给**动作打分**。\n> - 折扣回报率γ是为了让策略更早获得更大的回报设置的参数，每次都让回报乘一个γ的t次方\n>\n\n<!-- more -->\n\n如何学习这个Q⋆呢，我们使用一个深度网络来模拟，记作Q(s，a；w)，w就是神经网络中的参数，我们随机初始化w，然后学习w，最后让Q(s，a；w)尽量接近真正的Q⋆(s，a)即可。\n\nDQN输出的是**离散**的价值空间，也就是每个a上边的Q值。\n\n我们可以使用TD算法来学习w，我们先计算当前情况Q(s，a；w)预测的价值，随后执行动作a，环境到达s1，获得回报r1，这时我们比较Q(s，a；w)和r1+γ*Q(s1，a1；w）即可，a1为s1状态下让预测值最大的行动。\n\n这样就有了Loss，我们可以梯度下降更新w了。即\n\n$$w ← w − α · δ · ∇Q$$\n\nLoss函数一般是$1/2δ^2$\n\n这玩意是off-policy的，可以乱搞策略，但是一般的是 ϵ-greedy，(1-ϵ)概率用让Q(s，a；w)最大的a，ϵ概率随机挑一个a跑。而且可以应用经验回放，只需要记录以前的(s,a,r,s1)就可以拿这个数据来多次训练网络。\n\n## Q-Learning 和 SARSA\n\n>  一个学Q⋆一个学Qπ\n\n普通的Q学习已经不常用，SARSA通过TD训练Qπ，随后通过某种跟该算法**无关**的东西更新策略π，SARSA是on-policy的不能利用经验回放，如果状态空间是无限的我们也可以在SARSA上套个神经网络，跟DQN差不多了。\n\n## 杂项\n\n> 多步TD\n\nTD时多进行几次动作然后进行TD即可。\n\n> 蒙特卡洛\n\n一次进行完游戏，计算总回报ut，然后鼓励价值网络接近ut。好处是无偏性，坏处是方差大收敛很慢。\n\n> 自举\n\nTD算法属于自举，好处是方差小，收敛快，坏处是估算有偏。\n\n# 价值学习技术\n\n## 优先经验回放\n\n- 通常在经验回放数组中有足够的四元组时才开始使用经验回放更新DQN\n- 经验回放的优点是可以打破序列的相关性，因为随机抽到的四元组都是独立的\n- 经验回放可以用更少的样本获得同样的表现\n\n优先经验回放是这种方法的优化，即给某些回放数据更高的权重，令其更容易被抽中。\n\n如何判断权重呢，我们可以想象，如果某个数据下的DQN的预测和真正的Q⋆距离较远，是否可以认为该数据应该更收到关注呢。\n\n常用的分配权重方法有两种：\n\n$$p_j\\propto|\\delta_j|+\\epsilon$$\n\n$$p_j\\propto\\frac{1}{rank(j)}$$\n\n其中$\\epsilon$是一个很小的数，防止有些东西抽不到，rank(j)是排序后的序号\n\n然而权重不同时，我们也应该设置梯度下降不同的学习率来抵消非均匀抽样造成的误差\n\n$$\\alpha_j=\\frac{\\alpha}{(b\\cdot p_j)^\\beta}$$\n\n其中$\\beta$是超参数，b是经验回放样本总数。\n\n\n\n## Q学习高估问题\n\n### 目标网络与双Q学习\n\nQ学习会高估真实价值。原因是\n\n- 自举导致偏差传播\n- 最大化问题导致高估(噪声均值为0，然而取最大值会导致高估)\n\n高估是非均匀的，因此会造成偏差。\n\n我们可以使用**目标网络**降低自举的危害，即使用一个结构相同但是参数不同的目标网络Q(s,a;w1)来估算TD目标，梯度下降更新原网络,然后用一个加权平均更新目标网络。\n\n要降低最大化偏差，我们可以使用一种**Double Q-learning**，该方法在目标网络上更进一步。流程如下\n\n设目标网络为$\\omega_{now}^-$\n\n- 计算DQN正向传播$\\hat{q}=Q(s_j,a_j;\\omega_{now})$\n\n- 找到a令$a^*=argmaxQ(s_{j+1},a;\\omega_{now})$\n\n- 计算$\\hat{q}_{j+1}=Q(s_j,a^*;\\omega_{now}^-)$\n\n- 计算TD误差\n- 梯度下降更新DQN网络\n- 加权平均更新目标网络\n\n### 对决网络\n\n> - 最优状态价值函数是对Q⋆的所有动作和回报取期望V⋆(s)\n> - 定义最优优势函数D⋆(s,a)=Q⋆(s,a)-V⋆(s)\n> - 又有以下定理D⋆(s,a)=Q⋆(s,a)-V⋆(s)-maxD⋆(s,a1)，其中a1为令D⋆(s,a)最大的a\n\n这意味着我们如果能把D⋆和V⋆搞出来就可以获得输出的Q\n\n而且这个东西的训练和DQN完全相同，所用优化方法也能应用在这上面。\n\n### 噪声网络\n\n> 这玩意可以应用与几乎所有的深度强化学习方法中，而且能显著提高DQN的表现\n\n基本原理为把$\\omega改为\\mu(均值)+\\sigma(标准差)\\circ\\epsilon(随机噪声)$，噪声符合N(0,1)分布，该符号表示逐项乘积，即$\\omega_i=\\mu_i+\\sigma_i*\\epsilon_i$，这个意思是就是神经网络的参数从一个给定均值和标准差的正态分布中抽取。\n\n训练时加入噪声可以鼓励网络进行更多的探索，而训练完成后决策可以把方差设为0，这时网络就变为了标准的DQN网络。\n\n最终训练时可以把本部分提到的所有技巧全部用上。","slug":"04学习/价值学习","published":1,"updated":"2023-10-21T15:51:35.463Z","_id":"clobly6de001czowb47fw3ost","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>还是得把学的东西记下来，呃不然过段时间就忘了</p>\n</blockquote>\n<h1 id=\"价值学习\"><a class=\"markdownIt-Anchor\" href=\"#价值学习\"></a> 价值学习</h1>\n<h2 id=\"dqn\"><a class=\"markdownIt-Anchor\" href=\"#dqn\"></a> DQN</h2>\n<blockquote>\n<ul>\n<li>动作价值函数Qπ是按照策略π下，环境s做出a动作后的收益期望。</li>\n<li>最优动作函数Q⋆是所有策略中取最优的收益期望。这个东西显然可以给<strong>动作打分</strong>。</li>\n<li>折扣回报率γ是为了让策略更早获得更大的回报设置的参数，每次都让回报乘一个γ的t次方</li>\n</ul>\n</blockquote>\n<span id=\"more\"></span>\n<p>如何学习这个Q⋆呢，我们使用一个深度网络来模拟，记作Q(s，a；w)，w就是神经网络中的参数，我们随机初始化w，然后学习w，最后让Q(s，a；w)尽量接近真正的Q⋆(s，a)即可。</p>\n<p>DQN输出的是<strong>离散</strong>的价值空间，也就是每个a上边的Q值。</p>\n<p>我们可以使用TD算法来学习w，我们先计算当前情况Q(s，a；w)预测的价值，随后执行动作a，环境到达s1，获得回报r1，这时我们比较Q(s，a；w)和r1+γ*Q(s1，a1；w）即可，a1为s1状态下让预测值最大的行动。</p>\n<p>这样就有了Loss，我们可以梯度下降更新w了。即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi><mo>←</mo><mi>w</mi><mi mathvariant=\"normal\">−</mi><mi>α</mi><mo separator=\"true\">⋅</mo><mi>δ</mi><mo separator=\"true\">⋅</mo><mi mathvariant=\"normal\">∇</mi><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">w ← w − α · δ · ∇Q\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∇</span><span class=\"mord mathdefault\">Q</span></span></span></span></span></p>\n<p>Loss函数一般是<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn><msup><mi>δ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">1/2δ^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>这玩意是off-policy的，可以乱搞策略，但是一般的是 ϵ-greedy，(1-ϵ)概率用让Q(s，a；w)最大的a，ϵ概率随机挑一个a跑。而且可以应用经验回放，只需要记录以前的(s,a,r,s1)就可以拿这个数据来多次训练网络。</p>\n<h2 id=\"q-learning-和-sarsa\"><a class=\"markdownIt-Anchor\" href=\"#q-learning-和-sarsa\"></a> Q-Learning 和 SARSA</h2>\n<blockquote>\n<p>一个学Q⋆一个学Qπ</p>\n</blockquote>\n<p>普通的Q学习已经不常用，SARSA通过TD训练Qπ，随后通过某种跟该算法<strong>无关</strong>的东西更新策略π，SARSA是on-policy的不能利用经验回放，如果状态空间是无限的我们也可以在SARSA上套个神经网络，跟DQN差不多了。</p>\n<h2 id=\"杂项\"><a class=\"markdownIt-Anchor\" href=\"#杂项\"></a> 杂项</h2>\n<blockquote>\n<p>多步TD</p>\n</blockquote>\n<p>TD时多进行几次动作然后进行TD即可。</p>\n<blockquote>\n<p>蒙特卡洛</p>\n</blockquote>\n<p>一次进行完游戏，计算总回报ut，然后鼓励价值网络接近ut。好处是无偏性，坏处是方差大收敛很慢。</p>\n<blockquote>\n<p>自举</p>\n</blockquote>\n<p>TD算法属于自举，好处是方差小，收敛快，坏处是估算有偏。</p>\n<h1 id=\"价值学习技术\"><a class=\"markdownIt-Anchor\" href=\"#价值学习技术\"></a> 价值学习技术</h1>\n<h2 id=\"优先经验回放\"><a class=\"markdownIt-Anchor\" href=\"#优先经验回放\"></a> 优先经验回放</h2>\n<ul>\n<li>通常在经验回放数组中有足够的四元组时才开始使用经验回放更新DQN</li>\n<li>经验回放的优点是可以打破序列的相关性，因为随机抽到的四元组都是独立的</li>\n<li>经验回放可以用更少的样本获得同样的表现</li>\n</ul>\n<p>优先经验回放是这种方法的优化，即给某些回放数据更高的权重，令其更容易被抽中。</p>\n<p>如何判断权重呢，我们可以想象，如果某个数据下的DQN的预测和真正的Q⋆距离较远，是否可以认为该数据应该更收到关注呢。</p>\n<p>常用的分配权重方法有两种：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub><mo>∝</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>δ</mi><mi>j</mi></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">p_j\\propto|\\delta_j|+\\epsilon\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∝</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub><mo>∝</mo><mfrac><mn>1</mn><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">p_j\\propto\\frac{1}{rank(j)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∝</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>是一个很小的数，防止有些东西抽不到，rank(j)是排序后的序号</p>\n<p>然而权重不同时，我们也应该设置梯度下降不同的学习率来抵消非均匀抽样造成的误差</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>α</mi><mi>j</mi></msub><mo>=</mo><mfrac><mi>α</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo>⋅</mo><msub><mi>p</mi><mi>j</mi></msub><msup><mo stretchy=\"false\">)</mo><mi>β</mi></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\alpha_j=\\frac{\\alpha}{(b\\cdot p_j)^\\beta}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.079668em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7751079999999999em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span></span></span></span>是超参数，b是经验回放样本总数。</p>\n<h2 id=\"q学习高估问题\"><a class=\"markdownIt-Anchor\" href=\"#q学习高估问题\"></a> Q学习高估问题</h2>\n<h3 id=\"目标网络与双q学习\"><a class=\"markdownIt-Anchor\" href=\"#目标网络与双q学习\"></a> 目标网络与双Q学习</h3>\n<p>Q学习会高估真实价值。原因是</p>\n<ul>\n<li>自举导致偏差传播</li>\n<li>最大化问题导致高估(噪声均值为0，然而取最大值会导致高估)</li>\n</ul>\n<p>高估是非均匀的，因此会造成偏差。</p>\n<p>我们可以使用<strong>目标网络</strong>降低自举的危害，即使用一个结构相同但是参数不同的目标网络Q(s,a;w1)来估算TD目标，梯度下降更新原网络,然后用一个加权平均更新目标网络。</p>\n<p>要降低最大化偏差，我们可以使用一种<strong>Double Q-learning</strong>，该方法在目标网络上更进一步。流程如下</p>\n<p>设目标网络为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow><mo>−</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">\\omega_{now}^-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0183309999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>计算DQN正向传播<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>q</mi><mo>^</mo></mover><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo separator=\"true\">;</mo><msub><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{q}=Q(s_j,a_j;\\omega_{now})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>找到a令<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>a</mi><mo>∗</mo></msup><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><mi>a</mi><mo separator=\"true\">;</mo><msub><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a^*=argmaxQ(s_{j+1},a;\\omega_{now})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>计算<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mover accent=\"true\"><mi>q</mi><mo>^</mo></mover><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msup><mi>a</mi><mo>∗</mo></msup><mo separator=\"true\">;</mo><msubsup><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow><mo>−</mo></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{q}_{j+1}=Q(s_j,a^*;\\omega_{now}^-)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.057439em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>计算TD误差</p>\n</li>\n<li>\n<p>梯度下降更新DQN网络</p>\n</li>\n<li>\n<p>加权平均更新目标网络</p>\n</li>\n</ul>\n<h3 id=\"对决网络\"><a class=\"markdownIt-Anchor\" href=\"#对决网络\"></a> 对决网络</h3>\n<blockquote>\n<ul>\n<li>最优状态价值函数是对Q⋆的所有动作和回报取期望V⋆(s)</li>\n<li>定义最优优势函数D⋆(s,a)=Q⋆(s,a)-V⋆(s)</li>\n<li>又有以下定理D⋆(s,a)=Q⋆(s,a)-V⋆(s)-maxD⋆(s,a1)，其中a1为令D⋆(s,a)最大的a</li>\n</ul>\n</blockquote>\n<p>这意味着我们如果能把D⋆和V⋆搞出来就可以获得输出的Q</p>\n<p>而且这个东西的训练和DQN完全相同，所用优化方法也能应用在这上面。</p>\n<h3 id=\"噪声网络\"><a class=\"markdownIt-Anchor\" href=\"#噪声网络\"></a> 噪声网络</h3>\n<blockquote>\n<p>这玩意可以应用与几乎所有的深度强化学习方法中，而且能显著提高DQN的表现</p>\n</blockquote>\n<p>基本原理为把<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ω</mi><mi mathvariant=\"normal\">改</mi><mi mathvariant=\"normal\">为</mi><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">均</mi><mi mathvariant=\"normal\">值</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">标</mi><mi mathvariant=\"normal\">准</mi><mi mathvariant=\"normal\">差</mi><mo stretchy=\"false\">)</mo><mo>∘</mo><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">随</mi><mi mathvariant=\"normal\">机</mi><mi mathvariant=\"normal\">噪</mi><mi mathvariant=\"normal\">声</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\omega改为\\mu(均值)+\\sigma(标准差)\\circ\\epsilon(随机噪声)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord cjk_fallback\">改</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">均</span><span class=\"mord cjk_fallback\">值</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">标</span><span class=\"mord cjk_fallback\">准</span><span class=\"mord cjk_fallback\">差</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">随</span><span class=\"mord cjk_fallback\">机</span><span class=\"mord cjk_fallback\">噪</span><span class=\"mord cjk_fallback\">声</span><span class=\"mclose\">)</span></span></span></span>，噪声符合N(0,1)分布，该符号表示逐项乘积，即<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mi>i</mi></msub><mo>=</mo><msub><mi>μ</mi><mi>i</mi></msub><mo>+</mo><msub><mi>σ</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>ϵ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_i=\\mu_i+\\sigma_i*\\epsilon_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，这个意思是就是神经网络的参数从一个给定均值和标准差的正态分布中抽取。</p>\n<p>训练时加入噪声可以鼓励网络进行更多的探索，而训练完成后决策可以把方差设为0，这时网络就变为了标准的DQN网络。</p>\n<p>最终训练时可以把本部分提到的所有技巧全部用上。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>还是得把学的东西记下来，呃不然过段时间就忘了</p>\n</blockquote>\n<h1 id=\"价值学习\"><a class=\"markdownIt-Anchor\" href=\"#价值学习\"></a> 价值学习</h1>\n<h2 id=\"dqn\"><a class=\"markdownIt-Anchor\" href=\"#dqn\"></a> DQN</h2>\n<blockquote>\n<ul>\n<li>动作价值函数Qπ是按照策略π下，环境s做出a动作后的收益期望。</li>\n<li>最优动作函数Q⋆是所有策略中取最优的收益期望。这个东西显然可以给<strong>动作打分</strong>。</li>\n<li>折扣回报率γ是为了让策略更早获得更大的回报设置的参数，每次都让回报乘一个γ的t次方</li>\n</ul>\n</blockquote>","more":"<p>如何学习这个Q⋆呢，我们使用一个深度网络来模拟，记作Q(s，a；w)，w就是神经网络中的参数，我们随机初始化w，然后学习w，最后让Q(s，a；w)尽量接近真正的Q⋆(s，a)即可。</p>\n<p>DQN输出的是<strong>离散</strong>的价值空间，也就是每个a上边的Q值。</p>\n<p>我们可以使用TD算法来学习w，我们先计算当前情况Q(s，a；w)预测的价值，随后执行动作a，环境到达s1，获得回报r1，这时我们比较Q(s，a；w)和r1+γ*Q(s1，a1；w）即可，a1为s1状态下让预测值最大的行动。</p>\n<p>这样就有了Loss，我们可以梯度下降更新w了。即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>w</mi><mo>←</mo><mi>w</mi><mi mathvariant=\"normal\">−</mi><mi>α</mi><mo separator=\"true\">⋅</mo><mi>δ</mi><mo separator=\"true\">⋅</mo><mi mathvariant=\"normal\">∇</mi><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">w ← w − α · δ · ∇Q\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∇</span><span class=\"mord mathdefault\">Q</span></span></span></span></span></p>\n<p>Loss函数一般是<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn><msup><mi>δ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">1/2δ^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>这玩意是off-policy的，可以乱搞策略，但是一般的是 ϵ-greedy，(1-ϵ)概率用让Q(s，a；w)最大的a，ϵ概率随机挑一个a跑。而且可以应用经验回放，只需要记录以前的(s,a,r,s1)就可以拿这个数据来多次训练网络。</p>\n<h2 id=\"q-learning-和-sarsa\"><a class=\"markdownIt-Anchor\" href=\"#q-learning-和-sarsa\"></a> Q-Learning 和 SARSA</h2>\n<blockquote>\n<p>一个学Q⋆一个学Qπ</p>\n</blockquote>\n<p>普通的Q学习已经不常用，SARSA通过TD训练Qπ，随后通过某种跟该算法<strong>无关</strong>的东西更新策略π，SARSA是on-policy的不能利用经验回放，如果状态空间是无限的我们也可以在SARSA上套个神经网络，跟DQN差不多了。</p>\n<h2 id=\"杂项\"><a class=\"markdownIt-Anchor\" href=\"#杂项\"></a> 杂项</h2>\n<blockquote>\n<p>多步TD</p>\n</blockquote>\n<p>TD时多进行几次动作然后进行TD即可。</p>\n<blockquote>\n<p>蒙特卡洛</p>\n</blockquote>\n<p>一次进行完游戏，计算总回报ut，然后鼓励价值网络接近ut。好处是无偏性，坏处是方差大收敛很慢。</p>\n<blockquote>\n<p>自举</p>\n</blockquote>\n<p>TD算法属于自举，好处是方差小，收敛快，坏处是估算有偏。</p>\n<h1 id=\"价值学习技术\"><a class=\"markdownIt-Anchor\" href=\"#价值学习技术\"></a> 价值学习技术</h1>\n<h2 id=\"优先经验回放\"><a class=\"markdownIt-Anchor\" href=\"#优先经验回放\"></a> 优先经验回放</h2>\n<ul>\n<li>通常在经验回放数组中有足够的四元组时才开始使用经验回放更新DQN</li>\n<li>经验回放的优点是可以打破序列的相关性，因为随机抽到的四元组都是独立的</li>\n<li>经验回放可以用更少的样本获得同样的表现</li>\n</ul>\n<p>优先经验回放是这种方法的优化，即给某些回放数据更高的权重，令其更容易被抽中。</p>\n<p>如何判断权重呢，我们可以想象，如果某个数据下的DQN的预测和真正的Q⋆距离较远，是否可以认为该数据应该更收到关注呢。</p>\n<p>常用的分配权重方法有两种：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub><mo>∝</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>δ</mi><mi>j</mi></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">p_j\\propto|\\delta_j|+\\epsilon\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∝</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>p</mi><mi>j</mi></msub><mo>∝</mo><mfrac><mn>1</mn><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">p_j\\propto\\frac{1}{rank(j)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∝</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>是一个很小的数，防止有些东西抽不到，rank(j)是排序后的序号</p>\n<p>然而权重不同时，我们也应该设置梯度下降不同的学习率来抵消非均匀抽样造成的误差</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>α</mi><mi>j</mi></msub><mo>=</mo><mfrac><mi>α</mi><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo>⋅</mo><msub><mi>p</mi><mi>j</mi></msub><msup><mo stretchy=\"false\">)</mo><mi>β</mi></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\alpha_j=\\frac{\\alpha}{(b\\cdot p_j)^\\beta}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.079668em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7751079999999999em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span></span></span></span>是超参数，b是经验回放样本总数。</p>\n<h2 id=\"q学习高估问题\"><a class=\"markdownIt-Anchor\" href=\"#q学习高估问题\"></a> Q学习高估问题</h2>\n<h3 id=\"目标网络与双q学习\"><a class=\"markdownIt-Anchor\" href=\"#目标网络与双q学习\"></a> 目标网络与双Q学习</h3>\n<p>Q学习会高估真实价值。原因是</p>\n<ul>\n<li>自举导致偏差传播</li>\n<li>最大化问题导致高估(噪声均值为0，然而取最大值会导致高估)</li>\n</ul>\n<p>高估是非均匀的，因此会造成偏差。</p>\n<p>我们可以使用<strong>目标网络</strong>降低自举的危害，即使用一个结构相同但是参数不同的目标网络Q(s,a;w1)来估算TD目标，梯度下降更新原网络,然后用一个加权平均更新目标网络。</p>\n<p>要降低最大化偏差，我们可以使用一种<strong>Double Q-learning</strong>，该方法在目标网络上更进一步。流程如下</p>\n<p>设目标网络为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msubsup><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow><mo>−</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">\\omega_{now}^-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0183309999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>计算DQN正向传播<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>q</mi><mo>^</mo></mover><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo separator=\"true\">;</mo><msub><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{q}=Q(s_j,a_j;\\omega_{now})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>找到a令<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>a</mi><mo>∗</mo></msup><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><mi>a</mi><mo separator=\"true\">;</mo><msub><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a^*=argmaxQ(s_{j+1},a;\\omega_{now})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>计算<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mover accent=\"true\"><mi>q</mi><mo>^</mo></mover><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msup><mi>a</mi><mo>∗</mo></msup><mo separator=\"true\">;</mo><msubsup><mi>ω</mi><mrow><mi>n</mi><mi>o</mi><mi>w</mi></mrow><mo>−</mo></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{q}_{j+1}=Q(s_j,a^*;\\omega_{now}^-)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\">^</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.057439em;vertical-align:-0.286108em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>计算TD误差</p>\n</li>\n<li>\n<p>梯度下降更新DQN网络</p>\n</li>\n<li>\n<p>加权平均更新目标网络</p>\n</li>\n</ul>\n<h3 id=\"对决网络\"><a class=\"markdownIt-Anchor\" href=\"#对决网络\"></a> 对决网络</h3>\n<blockquote>\n<ul>\n<li>最优状态价值函数是对Q⋆的所有动作和回报取期望V⋆(s)</li>\n<li>定义最优优势函数D⋆(s,a)=Q⋆(s,a)-V⋆(s)</li>\n<li>又有以下定理D⋆(s,a)=Q⋆(s,a)-V⋆(s)-maxD⋆(s,a1)，其中a1为令D⋆(s,a)最大的a</li>\n</ul>\n</blockquote>\n<p>这意味着我们如果能把D⋆和V⋆搞出来就可以获得输出的Q</p>\n<p>而且这个东西的训练和DQN完全相同，所用优化方法也能应用在这上面。</p>\n<h3 id=\"噪声网络\"><a class=\"markdownIt-Anchor\" href=\"#噪声网络\"></a> 噪声网络</h3>\n<blockquote>\n<p>这玩意可以应用与几乎所有的深度强化学习方法中，而且能显著提高DQN的表现</p>\n</blockquote>\n<p>基本原理为把<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ω</mi><mi mathvariant=\"normal\">改</mi><mi mathvariant=\"normal\">为</mi><mi>μ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">均</mi><mi mathvariant=\"normal\">值</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">标</mi><mi mathvariant=\"normal\">准</mi><mi mathvariant=\"normal\">差</mi><mo stretchy=\"false\">)</mo><mo>∘</mo><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">随</mi><mi mathvariant=\"normal\">机</mi><mi mathvariant=\"normal\">噪</mi><mi mathvariant=\"normal\">声</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\omega改为\\mu(均值)+\\sigma(标准差)\\circ\\epsilon(随机噪声)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord cjk_fallback\">改</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">均</span><span class=\"mord cjk_fallback\">值</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">标</span><span class=\"mord cjk_fallback\">准</span><span class=\"mord cjk_fallback\">差</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">ϵ</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">随</span><span class=\"mord cjk_fallback\">机</span><span class=\"mord cjk_fallback\">噪</span><span class=\"mord cjk_fallback\">声</span><span class=\"mclose\">)</span></span></span></span>，噪声符合N(0,1)分布，该符号表示逐项乘积，即<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ω</mi><mi>i</mi></msub><mo>=</mo><msub><mi>μ</mi><mi>i</mi></msub><mo>+</mo><msub><mi>σ</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>ϵ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_i=\\mu_i+\\sigma_i*\\epsilon_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，这个意思是就是神经网络的参数从一个给定均值和标准差的正态分布中抽取。</p>\n<p>训练时加入噪声可以鼓励网络进行更多的探索，而训练完成后决策可以把方差设为0，这时网络就变为了标准的DQN网络。</p>\n<p>最终训练时可以把本部分提到的所有技巧全部用上。</p>"},{"title":"信息论","date":"2021-10-30T16:00:00.000Z","_content":"\n\n\n呃呃呃\n\n> 这玩意就是信息论课的内容了 以后更估计也就在这篇里面更了 大概\n\n<!-- more -->\n\n---\n\n以下内容更新于2021-10-31\n\n---\n\n# 信息度量\n\n## 离散信息度量\n\n> 首先肯定是经典的各种符号约定,顺遍让我复习一哈LateX语法...\n\n- 随机事件：$x$\n- 随机变量：$X$\n- $x=a_i的概率$：$P_x(a_i)$\n- 联合概率：$P_{xy}(a_i,b_j)$\n\n\n\n### 自信息\n\n事件集合X中$x=a_i$的自信息\n\n> $I_x(a_i)=-logP_x(a_i)$\n>\n> $I(x)=-logp(x)$\n\n\n\n**底数可变**\n\n- $log_2x$：比特\n- $lnx$：奈特\n- $log_{10}x$：哈特\n\n\n\n**自信息的含义即**\n\n>事件发生前的不确定性\n\n>事件发生后事件包含的信息量\n\n\n\n**联合自信息**\n\n即一些事件看作一个联合事件后计算自信息，概率为联合概率\n\n> $I_{XY}(a_i,b_j)=-logP_{XY}(a_i,b_j)$\n>\n> $I(xy)=-logp(xy)$\n>\n> $xy$视为一联合事件\n\n\n\n**条件自信息**\n\n即给定一些事件后，发生其他事件的自信息\n\n> $I_{x|y}(a_i,b_j)=-logP_{X|Y}(a_i,b_j)$\n>\n> $I(x|y)=-logp(x|y)$\n>\n> 因此有：\n>\n> $I(xy)=I(x)+I(y|x)=I(y)+I(x|y)$\n\n\n\n**综上**\n\n- 自信息量表示一个/多个事件发生带给我们信息量的大小\n- 表示了确定一个/多个事件是否发生，所需要的信息量的大小\n- $log_2$情况下表示了表示出事件信息量所需要的二进制位的个数\n\n---\n\n### 互信息\n\n- 反映了两个事件之间的统计关联程度\n- 通信系统中，意义是输出端接受到某信息y后获得关于输入端某信息x的信息量\n\n> $I_{x;y}(a_i;b_j)=log\\frac{P_{X/Y}(a_i|b_j)}{P_X(a_i)}$\n>\n> $I(x;y)=I(x)-I(x|y)$\t//$x$本身的不确定性减去由$y$确定的$x$的不确定性\n>\n> $I(x;y)=I(y;x)$\n\n---\n\n\n\n### 信息熵\n\n**离散信源X的熵定义位自信息的平均值，记为H(X)**\n\n> $H(X)=E[I(x)]$\n>\n> 单位：比特/符号\n\n表现一个信源的平均不确定性/平均信息量、$H(x)$大的随机性大、输出后解除信息不确定行需要的信息量。\n\n\n\n**条件熵**\n\n**联合集$XY$上，条件自信息$I(y|x)$均值**\n\n> $H(Y|X)=E[I(y|x)]=\\sum_{x}{p(x)H(Y|X=x)}$\n\n\n\n**联合熵**\n\n**联合集$XY$上，条件自信息$I(xy)$均值**\n\n> $H(XY)=E[U(xy)]=-\\sum_x\\sum_yp(xy)logp(xy)$\n\n\n\n**相对熵——信息散度**\n\n> 没懂。\n\n> 不等式：$1-\\frac{1}{x}\\leq lnx \\leq x-1$\n\n**熵的不增原理——条件熵不大于信息熵**\n\n> $H(Y|X)\\leq H(Y)$\n\n---\n\n### 信息熵基本性质\n\n- 对称性\n- 非负性\n- 确定性：集合中任意事件概率为1时，熵为0\n- 扩展性：小概率事件对熵影响很小可以忽略\n- 可加性：$H(XY)=H(X)+H(Y|X)$\n\n> 熵的链原则：$H(X_1X_2..X_N)=H(X_1)+H(X_2|X_1)+...H(X_N|X_1..X_{N-1})$\n\n- 极值性：集合中事件等概率发生时熵达到最大\n\n---\n\n### 平均互信息\n\n> $集合Y与事件x=a_i间的互信息$\n>\n> $I(x;Y)=\\sum_xp(x)I(x;Y)$\n>\n> $=\\sum_{x,y}p(x)p(y|x)log\\frac{p(y|x)}{p(y)}$\n\n因此\n\n$集合X、Y间平均互信息$\n\n>  $I(X;Y)=\\sum_xp(x)I(x;Y)$\n\n- 含义\n\n    - 知道集合$Y$后，平均Y中一个事件消除掉的关于集合$X$中一个事件的不确定性\n\n    - 集合$Y$中一个事件平均能提供出的关于集合$X$中一事件的信息量\n\n    - 两个集合关系密切程度\n\n- 平均互信息与熵\n    - $I(X;Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)=H(X)+H(Y)-H(XY)$\n\n- 性质\n    - 非负性\n    - 互易性\n    - 凸函数性： 为$p(x)$上凸函数\n\n","source":"_posts/04学习/信息论.md","raw":"---\ntitle: 信息论\ntag: 信息论\ncategory: 课内\ndate: 2021-10-31\n---\n\n\n\n呃呃呃\n\n> 这玩意就是信息论课的内容了 以后更估计也就在这篇里面更了 大概\n\n<!-- more -->\n\n---\n\n以下内容更新于2021-10-31\n\n---\n\n# 信息度量\n\n## 离散信息度量\n\n> 首先肯定是经典的各种符号约定,顺遍让我复习一哈LateX语法...\n\n- 随机事件：$x$\n- 随机变量：$X$\n- $x=a_i的概率$：$P_x(a_i)$\n- 联合概率：$P_{xy}(a_i,b_j)$\n\n\n\n### 自信息\n\n事件集合X中$x=a_i$的自信息\n\n> $I_x(a_i)=-logP_x(a_i)$\n>\n> $I(x)=-logp(x)$\n\n\n\n**底数可变**\n\n- $log_2x$：比特\n- $lnx$：奈特\n- $log_{10}x$：哈特\n\n\n\n**自信息的含义即**\n\n>事件发生前的不确定性\n\n>事件发生后事件包含的信息量\n\n\n\n**联合自信息**\n\n即一些事件看作一个联合事件后计算自信息，概率为联合概率\n\n> $I_{XY}(a_i,b_j)=-logP_{XY}(a_i,b_j)$\n>\n> $I(xy)=-logp(xy)$\n>\n> $xy$视为一联合事件\n\n\n\n**条件自信息**\n\n即给定一些事件后，发生其他事件的自信息\n\n> $I_{x|y}(a_i,b_j)=-logP_{X|Y}(a_i,b_j)$\n>\n> $I(x|y)=-logp(x|y)$\n>\n> 因此有：\n>\n> $I(xy)=I(x)+I(y|x)=I(y)+I(x|y)$\n\n\n\n**综上**\n\n- 自信息量表示一个/多个事件发生带给我们信息量的大小\n- 表示了确定一个/多个事件是否发生，所需要的信息量的大小\n- $log_2$情况下表示了表示出事件信息量所需要的二进制位的个数\n\n---\n\n### 互信息\n\n- 反映了两个事件之间的统计关联程度\n- 通信系统中，意义是输出端接受到某信息y后获得关于输入端某信息x的信息量\n\n> $I_{x;y}(a_i;b_j)=log\\frac{P_{X/Y}(a_i|b_j)}{P_X(a_i)}$\n>\n> $I(x;y)=I(x)-I(x|y)$\t//$x$本身的不确定性减去由$y$确定的$x$的不确定性\n>\n> $I(x;y)=I(y;x)$\n\n---\n\n\n\n### 信息熵\n\n**离散信源X的熵定义位自信息的平均值，记为H(X)**\n\n> $H(X)=E[I(x)]$\n>\n> 单位：比特/符号\n\n表现一个信源的平均不确定性/平均信息量、$H(x)$大的随机性大、输出后解除信息不确定行需要的信息量。\n\n\n\n**条件熵**\n\n**联合集$XY$上，条件自信息$I(y|x)$均值**\n\n> $H(Y|X)=E[I(y|x)]=\\sum_{x}{p(x)H(Y|X=x)}$\n\n\n\n**联合熵**\n\n**联合集$XY$上，条件自信息$I(xy)$均值**\n\n> $H(XY)=E[U(xy)]=-\\sum_x\\sum_yp(xy)logp(xy)$\n\n\n\n**相对熵——信息散度**\n\n> 没懂。\n\n> 不等式：$1-\\frac{1}{x}\\leq lnx \\leq x-1$\n\n**熵的不增原理——条件熵不大于信息熵**\n\n> $H(Y|X)\\leq H(Y)$\n\n---\n\n### 信息熵基本性质\n\n- 对称性\n- 非负性\n- 确定性：集合中任意事件概率为1时，熵为0\n- 扩展性：小概率事件对熵影响很小可以忽略\n- 可加性：$H(XY)=H(X)+H(Y|X)$\n\n> 熵的链原则：$H(X_1X_2..X_N)=H(X_1)+H(X_2|X_1)+...H(X_N|X_1..X_{N-1})$\n\n- 极值性：集合中事件等概率发生时熵达到最大\n\n---\n\n### 平均互信息\n\n> $集合Y与事件x=a_i间的互信息$\n>\n> $I(x;Y)=\\sum_xp(x)I(x;Y)$\n>\n> $=\\sum_{x,y}p(x)p(y|x)log\\frac{p(y|x)}{p(y)}$\n\n因此\n\n$集合X、Y间平均互信息$\n\n>  $I(X;Y)=\\sum_xp(x)I(x;Y)$\n\n- 含义\n\n    - 知道集合$Y$后，平均Y中一个事件消除掉的关于集合$X$中一个事件的不确定性\n\n    - 集合$Y$中一个事件平均能提供出的关于集合$X$中一事件的信息量\n\n    - 两个集合关系密切程度\n\n- 平均互信息与熵\n    - $I(X;Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)=H(X)+H(Y)-H(XY)$\n\n- 性质\n    - 非负性\n    - 互易性\n    - 凸函数性： 为$p(x)$上凸函数\n\n","slug":"04学习/信息论","published":1,"updated":"2021-11-03T04:35:51.115Z","_id":"clobly6dg001gzowb7zi7anqb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>呃呃呃</p>\n<blockquote>\n<p>这玩意就是信息论课的内容了 以后更估计也就在这篇里面更了 大概</p>\n</blockquote>\n<span id=\"more\"></span>\n<hr />\n<p>以下内容更新于2021-10-31</p>\n<hr />\n<h1 id=\"信息度量\"><a class=\"markdownIt-Anchor\" href=\"#信息度量\"></a> 信息度量</h1>\n<h2 id=\"离散信息度量\"><a class=\"markdownIt-Anchor\" href=\"#离散信息度量\"></a> 离散信息度量</h2>\n<blockquote>\n<p>首先肯定是经典的各种符号约定,顺遍让我复习一哈LateX语法…</p>\n</blockquote>\n<ul>\n<li>随机事件：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n<li>随机变量：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">概</mi><mi mathvariant=\"normal\">率</mi></mrow><annotation encoding=\"application/x-tex\">x=a_i的概率</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">概</span><span class=\"mord cjk_fallback\">率</span></span></span></span>：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>P</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_x(a_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>联合概率：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{xy}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h3 id=\"自信息\"><a class=\"markdownIt-Anchor\" href=\"#自信息\"></a> 自信息</h3>\n<p>事件集合X中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的自信息</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_x(a_i)=-logP_x(a_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x)=-logp(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>底数可变</strong></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">log_2x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span>：比特</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">lnx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">x</span></span></span></span>：奈特</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>10</mn></msub><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">log_{10}x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span>：哈特</li>\n</ul>\n<p><strong>自信息的含义即</strong></p>\n<blockquote>\n<p>事件发生前的不确定性</p>\n</blockquote>\n<blockquote>\n<p>事件发生后事件包含的信息量</p>\n</blockquote>\n<p><strong>联合自信息</strong></p>\n<p>即一些事件看作一个联合事件后计算自信息，概率为联合概率</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_{XY}(a_i,b_j)=-logP_{XY}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)=-logp(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">xy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>视为一联合事件</p>\n</blockquote>\n<p><strong>条件自信息</strong></p>\n<p>即给定一些事件后，发生其他事件的自信息</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mrow><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_{x|y}(a_i,b_j)=-logP_{X|Y}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x|y)=-logp(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>因此有：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)=I(x)+I(y|x)=I(y)+I(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>综上</strong></p>\n<ul>\n<li>自信息量表示一个/多个事件发生带给我们信息量的大小</li>\n<li>表示了确定一个/多个事件是否发生，所需要的信息量的大小</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">log_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>情况下表示了表示出事件信息量所需要的二进制位的个数</li>\n</ul>\n<hr />\n<h3 id=\"互信息\"><a class=\"markdownIt-Anchor\" href=\"#互信息\"></a> 互信息</h3>\n<ul>\n<li>反映了两个事件之间的统计关联程度</li>\n<li>通信系统中，意义是输出端接受到某信息y后获得关于输入端某信息x的信息量</li>\n</ul>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">;</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mrow><msub><mi>P</mi><mrow><mi>X</mi><mi mathvariant=\"normal\">/</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>P</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">I_{x;y}(a_i;b_j)=log\\frac{P_{X/Y}(a_i|b_j)}{P_X(a_i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.61364em;vertical-align:-0.52em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.09364em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5686400000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5357142857142856em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mtight\">/</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3694857142857143em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;y)=I(x)-I(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>\t//<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>本身的不确定性减去由<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>确定的<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>的不确定性</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">;</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;y)=I(y;x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<hr />\n<h3 id=\"信息熵\"><a class=\"markdownIt-Anchor\" href=\"#信息熵\"></a> 信息熵</h3>\n<p><strong>离散信源X的熵定义位自信息的平均值，记为H(X)</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">H(X)=E[I(x)]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></p>\n<p>单位：比特/符号</p>\n</blockquote>\n<p>表现一个信源的平均不确定性/平均信息量、<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>大的随机性大、输出后解除信息不确定行需要的信息量。</p>\n<p><strong>条件熵</strong></p>\n<p><strong>联合集<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">XY</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>上，条件自信息<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(y|x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>均值</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">H(Y|X)=E[I(y|x)]=\\sum_{x}{p(x)H(Y|X=x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</blockquote>\n<p><strong>联合熵</strong></p>\n<p><strong>联合集<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">XY</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>上，条件自信息<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>均值</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>U</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>x</mi></msub><msub><mo>∑</mo><mi>y</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(XY)=E[U(xy)]=-\\sum_x\\sum_yp(xy)logp(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>相对熵——信息散度</strong></p>\n<blockquote>\n<p>没懂。</p>\n</blockquote>\n<blockquote>\n<p>不等式：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>x</mi></mfrac><mo>≤</mo><mi>l</mi><mi>n</mi><mi>x</mi><mo>≤</mo><mi>x</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1-\\frac{1}{x}\\leq lnx \\leq x-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n</blockquote>\n<p><strong>熵的不增原理——条件熵不大于信息熵</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(Y|X)\\leq H(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<hr />\n<h3 id=\"信息熵基本性质\"><a class=\"markdownIt-Anchor\" href=\"#信息熵基本性质\"></a> 信息熵基本性质</h3>\n<ul>\n<li>对称性</li>\n<li>非负性</li>\n<li>确定性：集合中任意事件概率为1时，熵为0</li>\n<li>扩展性：小概率事件对熵影响很小可以忽略</li>\n<li>可加性：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(XY)=H(X)+H(Y|X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<blockquote>\n<p>熵的链原则：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>X</mi><mi>N</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>N</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>1</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>X</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X_1X_2..X_N)=H(X_1)+H(X_2|X_1)+...H(X_N|X_1..X_{N-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<ul>\n<li>极值性：集合中事件等概率发生时熵达到最大</li>\n</ul>\n<hr />\n<h3 id=\"平均互信息\"><a class=\"markdownIt-Anchor\" href=\"#平均互信息\"></a> 平均互信息</h3>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">集</mi><mi mathvariant=\"normal\">合</mi><mi>Y</mi><mi mathvariant=\"normal\">与</mi><mi mathvariant=\"normal\">事</mi><mi mathvariant=\"normal\">件</mi><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">间</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">互</mi><mi mathvariant=\"normal\">信</mi><mi mathvariant=\"normal\">息</mi></mrow><annotation encoding=\"application/x-tex\">集合Y与事件x=a_i间的互信息</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">集</span><span class=\"mord cjk_fallback\">合</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">与</span><span class=\"mord cjk_fallback\">事</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">互</span><span class=\"mord cjk_fallback\">信</span><span class=\"mord cjk_fallback\">息</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;Y)=\\sum_xp(x)I(x;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">=\\sum_{x,y}p(x)p(y|x)log\\frac{p(y|x)}{p(y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n</blockquote>\n<p>因此</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">集</mi><mi mathvariant=\"normal\">合</mi><mi>X</mi><mi mathvariant=\"normal\">、</mi><mi>Y</mi><mi mathvariant=\"normal\">间</mi><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">均</mi><mi mathvariant=\"normal\">互</mi><mi mathvariant=\"normal\">信</mi><mi mathvariant=\"normal\">息</mi></mrow><annotation encoding=\"application/x-tex\">集合X、Y间平均互信息</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">集</span><span class=\"mord cjk_fallback\">合</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">均</span><span class=\"mord cjk_fallback\">互</span><span class=\"mord cjk_fallback\">信</span><span class=\"mord cjk_fallback\">息</span></span></span></span></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)=\\sum_xp(x)I(x;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<ul>\n<li>\n<p>含义</p>\n<ul>\n<li>\n<p>知道集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>后，平均Y中一个事件消除掉的关于集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>中一个事件的不确定性</p>\n</li>\n<li>\n<p>集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>中一个事件平均能提供出的关于集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>中一事件的信息量</p>\n</li>\n<li>\n<p>两个集合关系密切程度</p>\n</li>\n</ul>\n</li>\n<li>\n<p>平均互信息与熵</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)=H(X)+H(Y)-H(XY)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>性质</p>\n<ul>\n<li>非负性</li>\n<li>互易性</li>\n<li>凸函数性： 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>上凸函数</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>呃呃呃</p>\n<blockquote>\n<p>这玩意就是信息论课的内容了 以后更估计也就在这篇里面更了 大概</p>\n</blockquote>","more":"<hr />\n<p>以下内容更新于2021-10-31</p>\n<hr />\n<h1 id=\"信息度量\"><a class=\"markdownIt-Anchor\" href=\"#信息度量\"></a> 信息度量</h1>\n<h2 id=\"离散信息度量\"><a class=\"markdownIt-Anchor\" href=\"#离散信息度量\"></a> 离散信息度量</h2>\n<blockquote>\n<p>首先肯定是经典的各种符号约定,顺遍让我复习一哈LateX语法…</p>\n</blockquote>\n<ul>\n<li>随机事件：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n<li>随机变量：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">概</mi><mi mathvariant=\"normal\">率</mi></mrow><annotation encoding=\"application/x-tex\">x=a_i的概率</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">概</span><span class=\"mord cjk_fallback\">率</span></span></span></span>：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>P</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_x(a_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>联合概率：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P_{xy}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h3 id=\"自信息\"><a class=\"markdownIt-Anchor\" href=\"#自信息\"></a> 自信息</h3>\n<p>事件集合X中<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的自信息</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_x(a_i)=-logP_x(a_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x)=-logp(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>底数可变</strong></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">log_2x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span>：比特</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">lnx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">x</span></span></span></span>：奈特</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>10</mn></msub><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">log_{10}x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span>：哈特</li>\n</ul>\n<p><strong>自信息的含义即</strong></p>\n<blockquote>\n<p>事件发生前的不确定性</p>\n</blockquote>\n<blockquote>\n<p>事件发生后事件包含的信息量</p>\n</blockquote>\n<p><strong>联合自信息</strong></p>\n<p>即一些事件看作一个联合事件后计算自信息，概率为联合概率</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_{XY}(a_i,b_j)=-logP_{XY}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)=-logp(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">xy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>视为一联合事件</p>\n</blockquote>\n<p><strong>条件自信息</strong></p>\n<p>即给定一些事件后，发生其他事件的自信息</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>P</mi><mrow><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I_{x|y}(a_i,b_j)=-logP_{X|Y}(a_i,b_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x|y)=-logp(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>因此有：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)=I(x)+I(y|x)=I(y)+I(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>综上</strong></p>\n<ul>\n<li>自信息量表示一个/多个事件发生带给我们信息量的大小</li>\n<li>表示了确定一个/多个事件是否发生，所需要的信息量的大小</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">log_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>情况下表示了表示出事件信息量所需要的二进制位的个数</li>\n</ul>\n<hr />\n<h3 id=\"互信息\"><a class=\"markdownIt-Anchor\" href=\"#互信息\"></a> 互信息</h3>\n<ul>\n<li>反映了两个事件之间的统计关联程度</li>\n<li>通信系统中，意义是输出端接受到某信息y后获得关于输入端某信息x的信息量</li>\n</ul>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>I</mi><mrow><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">;</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mrow><msub><mi>P</mi><mrow><mi>X</mi><mi mathvariant=\"normal\">/</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>P</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">I_{x;y}(a_i;b_j)=log\\frac{P_{X/Y}(a_i|b_j)}{P_X(a_i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.61364em;vertical-align:-0.52em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.09364em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.5686400000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5357142857142856em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mtight\">/</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3694857142857143em;\"><span></span></span></span></span></span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;y)=I(x)-I(x|y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>\t//<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>本身的不确定性减去由<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>确定的<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>的不确定性</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">;</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;y)=I(y;x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<hr />\n<h3 id=\"信息熵\"><a class=\"markdownIt-Anchor\" href=\"#信息熵\"></a> 信息熵</h3>\n<p><strong>离散信源X的熵定义位自信息的平均值，记为H(X)</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">H(X)=E[I(x)]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span></p>\n<p>单位：比特/符号</p>\n</blockquote>\n<p>表现一个信源的平均不确定性/平均信息量、<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>大的随机性大、输出后解除信息不确定行需要的信息量。</p>\n<p><strong>条件熵</strong></p>\n<p><strong>联合集<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">XY</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>上，条件自信息<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(y|x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>均值</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">H(Y|X)=E[I(y|x)]=\\sum_{x}{p(x)H(Y|X=x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</blockquote>\n<p><strong>联合熵</strong></p>\n<p><strong>联合集<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">XY</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>上，条件自信息<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>均值</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>E</mi><mo stretchy=\"false\">[</mo><mi>U</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mi>x</mi></msub><msub><mo>∑</mo><mi>y</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(XY)=E[U(xy)]=-\\sum_x\\sum_yp(xy)logp(xy)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p><strong>相对熵——信息散度</strong></p>\n<blockquote>\n<p>没懂。</p>\n</blockquote>\n<blockquote>\n<p>不等式：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>x</mi></mfrac><mo>≤</mo><mi>l</mi><mi>n</mi><mi>x</mi><mo>≤</mo><mi>x</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1-\\frac{1}{x}\\leq lnx \\leq x-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n</blockquote>\n<p><strong>熵的不增原理——条件熵不大于信息熵</strong></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(Y|X)\\leq H(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<hr />\n<h3 id=\"信息熵基本性质\"><a class=\"markdownIt-Anchor\" href=\"#信息熵基本性质\"></a> 信息熵基本性质</h3>\n<ul>\n<li>对称性</li>\n<li>非负性</li>\n<li>确定性：集合中任意事件概率为1时，熵为0</li>\n<li>扩展性：小概率事件对熵影响很小可以忽略</li>\n<li>可加性：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(XY)=H(X)+H(Y|X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<blockquote>\n<p>熵的链原则：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>X</mi><mi>N</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>N</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>1</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>X</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X_1X_2..X_N)=H(X_1)+H(X_2|X_1)+...H(X_N|X_1..X_{N-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<ul>\n<li>极值性：集合中事件等概率发生时熵达到最大</li>\n</ul>\n<hr />\n<h3 id=\"平均互信息\"><a class=\"markdownIt-Anchor\" href=\"#平均互信息\"></a> 平均互信息</h3>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">集</mi><mi mathvariant=\"normal\">合</mi><mi>Y</mi><mi mathvariant=\"normal\">与</mi><mi mathvariant=\"normal\">事</mi><mi mathvariant=\"normal\">件</mi><mi>x</mi><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant=\"normal\">间</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">互</mi><mi mathvariant=\"normal\">信</mi><mi mathvariant=\"normal\">息</mi></mrow><annotation encoding=\"application/x-tex\">集合Y与事件x=a_i间的互信息</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">集</span><span class=\"mord cjk_fallback\">合</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">与</span><span class=\"mord cjk_fallback\">事</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">互</span><span class=\"mord cjk_fallback\">信</span><span class=\"mord cjk_fallback\">息</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x;Y)=\\sum_xp(x)I(x;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">=\\sum_{x,y}p(x)p(y|x)log\\frac{p(y|x)}{p(y)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">p</span><span class=\"mopen mtight\">(</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mtight\">∣</span><span class=\"mord mathdefault mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n</blockquote>\n<p>因此</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">集</mi><mi mathvariant=\"normal\">合</mi><mi>X</mi><mi mathvariant=\"normal\">、</mi><mi>Y</mi><mi mathvariant=\"normal\">间</mi><mi mathvariant=\"normal\">平</mi><mi mathvariant=\"normal\">均</mi><mi mathvariant=\"normal\">互</mi><mi mathvariant=\"normal\">信</mi><mi mathvariant=\"normal\">息</mi></mrow><annotation encoding=\"application/x-tex\">集合X、Y间平均互信息</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">集</span><span class=\"mord cjk_fallback\">合</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">平</span><span class=\"mord cjk_fallback\">均</span><span class=\"mord cjk_fallback\">互</span><span class=\"mord cjk_fallback\">信</span><span class=\"mord cjk_fallback\">息</span></span></span></span></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mi>x</mi></msub><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)=\\sum_xp(x)I(x;Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.0016819999999999613em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<ul>\n<li>\n<p>含义</p>\n<ul>\n<li>\n<p>知道集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>后，平均Y中一个事件消除掉的关于集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>中一个事件的不确定性</p>\n</li>\n<li>\n<p>集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>中一个事件平均能提供出的关于集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>中一事件的信息量</p>\n</li>\n<li>\n<p>两个集合关系密切程度</p>\n</li>\n</ul>\n</li>\n<li>\n<p>平均互信息与熵</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)=H(X)+H(Y)-H(XY)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>性质</p>\n<ul>\n<li>非负性</li>\n<li>互易性</li>\n<li>凸函数性： 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>上凸函数</li>\n</ul>\n</li>\n</ul>"},{"title":"通信原理","date":"2021-10-30T16:00:00.000Z","_content":"\n目前啥都没有","source":"_posts/04学习/通信原理.md","raw":"---\ntitle: 通信原理\ntag: 通信原理\ncategory: 课内\ndate: 2021-10-31\n---\n\n目前啥都没有","slug":"04学习/通信原理","published":1,"updated":"2021-11-03T04:35:55.156Z","_id":"clobly6dh001jzowb0zm3h8no","comments":1,"layout":"post","photos":[],"link":"","content":"<p>目前啥都没有</p>\n","site":{"data":{}},"excerpt":"","more":"<p>目前啥都没有</p>\n"},{"title":"速通形式语言与自动机","date":"2022-05-28T16:00:00.000Z","_content":"\n\n> 整蛊咯整蛊咯\n\n# 基础知识\n\n没啥p用\n\n## 集合\n\n**集合的基数**：有限集(不同元素个数)，无限集(等势，双射函数？)\n\n可数集/不可数集：和自然数一一对应\n\n## 逻辑\n\n没什么好说的\n\n## 图\n\n图的定义：三元组$(V,E,\\psi)$,点集、边集、边到两个端点集合的函数\n\n子图、真子图、生成子图：生成子图有全部点集\n\n略\n\n## 证明技术\n\n整蛊\n\n<!-- more -->\n\n----\n\n# 语言及文法\n\n终于开始学了\n\n## 语言的定义与运算\n\n字符集合：字母表，T（实际上是有限的）\n\n定义：$\\epsilon$空字符串\n\n定义：$T^*$是所有字符串加空串的集合，$T^+$是所有字符串的集合\n\n定义：语言L是$T^*$的子集，就是一些字符串的集合\n\n定义：语言的乘积$L_1*L_2$是两者中的字符串连接构成的集合\n\n定义：L的0次幂是空字符串\n\n定义：$L^*$闭包，$L^+$正闭包，闭包0-n次幂的并，正闭包1-n次幂的并\n\n## 文法\n\n文法G：四元组G=(N,T,P,S)\n\n- N 非终结符有限集\n- T 终结符有限集\n- P 生成式，“可被替代”的含义\n- S 起始符\n\n约定：\n\n| 字母表中排在前面的小写字母a，b，c         | 终结符                                           |\n| ----------------------------------------- | :----------------------------------------------- |\n| **字母表中排在前面的大写字母A，B，C**     | **非终结符**                                     |\n| **字母表中排在后面的大写字母X，Y，Z**     | **文法符号**（既可以是终结符，也可以是非终结符） |\n| **字母表中排在后面的小写字母u，v，……，z** | **终结符号串**                                   |\n| **小写的希腊字母α，β，γ**                 | **文法符号串**                                   |\n\n推导与句型：latex箭头忘了是啥，反正就是通过生成式把字符串代换导出。句型是N和T的闭包内容，句子是T的闭包内容。\n\n## 文法分类\n\n### 定义\n\n1型：上下文有关\t$\\alpha\\rightarrow\\beta,|\\alpha|<=|\\beta|$\n\n2型：上下文无关\t$A\\rightarrow\\alpha$\n\n3型：正则\t$A\\rightarrow\\omega B$，$A\\rightarrow B\\omega$右线性左线性\n\n0型：0\n\n### 2型文法各种表示法\n\nBNF表示法：把左端相同的生成式合并，用|分隔，箭头用::=替代\n\n语法图：\n\nA->A1A2A3\n\n\n```mermaid\ngraph LR\nA(A1) --> B(A2) --> C(A3)\n```\n\nA->abA\n\n```mermaid\ngraph LR\nA(A1) --> B((a)) --> C((b)) -->\n-out(out)\nC-->A\n```\n\n----\n\n# 有限自动机和右线性文法\n\n## 有限自动机\n\nNFA，DFA：不确定和确定的有限状态自动机\n\n疯狂地转移！\n\n**形式定义**：DFA五元组，$M=(Q,T,\\delta,q_0,F)$\n\n- Q 有限状态集合\n- T 有限输入字母表\n- $\\delta$ 转换函数 状态q，输入a到达状态p 写作$\\delta(q,a)=p$\n- $q_0$ 初始状态\n- F 终止状态集\n\nL(M)：为M接受的语言，其实就是有向图走来走去呗\n\n## NFA\n\nNFA是一堆节点在一个树上跑，看哪个能最终接受，类似dfs一样。\n\n多种可能性。\n\n## DFA和NFA\n\n存在一个DFA和NFA等效。\n\n子集构造法？\n\n## 带空串转换的NFA\n\n存在无空串转换的NFA和有空串的NFA等效\n\n看不懂证明\n\n## 正则\n\n定义：递归定义如下\n\n- 空字符串和空集都是正则式\n- 字母表中的字母是正则式\n- 如果A，B都是正则式，那(A+B)，(A·B)，(A*)都是正则式\n\n可以给定右线性文法算出正则式\n\n规则R：设x=ax+b，其解x=a*b\n\n解方程(\n\n## 右线性文法和正则集\n\n一个语言是正则集，当且仅当该语言为右线性语言\n\n## 正则表达式和有限自动机\n\n定理：L是正则表达式R表示的语言，则存在一个具有$\\epsilon$转换的有限自动机接受语言L\n\n扩充正则式：\n\n- R是正则式，则$R,R^*$为扩充正则式\n\n- $R^{+k},R^{*k}$->R到R的k次幂的并，以及空集\n- 若$R_1,R_2$为扩充正则式，则$R_1R_2,R_1+R_2$也是\n\n可以通过正则式构建带空串转换的NFA\n\n设R1，R2的两个NFA为M1，M2\n\nR1+R2：并联\n\n```mermaid\ngraph LR\nA(q0) --> B(q1) --M1--> C(qf1) --ε--> qf\nA(q0) --> D(q2) --M2--> E(qf2) --ε--> qf\n```\n\nR1+R2：串联\n```mermaid\ngraph LR\nA(q1) --M1--> C(qf1) --ε--> q2\nq2--M2--> D(qf2)\n```\n\n定理：L被DFA接受，L可以用正则表达式表示\n","source":"_posts/04学习/速通形式语言与自动机.md","raw":"---\ntitle: 速通形式语言与自动机\ntag: 自动机\ncategory: 课外\ndate: 2022-5-29\n---\n\n\n> 整蛊咯整蛊咯\n\n# 基础知识\n\n没啥p用\n\n## 集合\n\n**集合的基数**：有限集(不同元素个数)，无限集(等势，双射函数？)\n\n可数集/不可数集：和自然数一一对应\n\n## 逻辑\n\n没什么好说的\n\n## 图\n\n图的定义：三元组$(V,E,\\psi)$,点集、边集、边到两个端点集合的函数\n\n子图、真子图、生成子图：生成子图有全部点集\n\n略\n\n## 证明技术\n\n整蛊\n\n<!-- more -->\n\n----\n\n# 语言及文法\n\n终于开始学了\n\n## 语言的定义与运算\n\n字符集合：字母表，T（实际上是有限的）\n\n定义：$\\epsilon$空字符串\n\n定义：$T^*$是所有字符串加空串的集合，$T^+$是所有字符串的集合\n\n定义：语言L是$T^*$的子集，就是一些字符串的集合\n\n定义：语言的乘积$L_1*L_2$是两者中的字符串连接构成的集合\n\n定义：L的0次幂是空字符串\n\n定义：$L^*$闭包，$L^+$正闭包，闭包0-n次幂的并，正闭包1-n次幂的并\n\n## 文法\n\n文法G：四元组G=(N,T,P,S)\n\n- N 非终结符有限集\n- T 终结符有限集\n- P 生成式，“可被替代”的含义\n- S 起始符\n\n约定：\n\n| 字母表中排在前面的小写字母a，b，c         | 终结符                                           |\n| ----------------------------------------- | :----------------------------------------------- |\n| **字母表中排在前面的大写字母A，B，C**     | **非终结符**                                     |\n| **字母表中排在后面的大写字母X，Y，Z**     | **文法符号**（既可以是终结符，也可以是非终结符） |\n| **字母表中排在后面的小写字母u，v，……，z** | **终结符号串**                                   |\n| **小写的希腊字母α，β，γ**                 | **文法符号串**                                   |\n\n推导与句型：latex箭头忘了是啥，反正就是通过生成式把字符串代换导出。句型是N和T的闭包内容，句子是T的闭包内容。\n\n## 文法分类\n\n### 定义\n\n1型：上下文有关\t$\\alpha\\rightarrow\\beta,|\\alpha|<=|\\beta|$\n\n2型：上下文无关\t$A\\rightarrow\\alpha$\n\n3型：正则\t$A\\rightarrow\\omega B$，$A\\rightarrow B\\omega$右线性左线性\n\n0型：0\n\n### 2型文法各种表示法\n\nBNF表示法：把左端相同的生成式合并，用|分隔，箭头用::=替代\n\n语法图：\n\nA->A1A2A3\n\n\n```mermaid\ngraph LR\nA(A1) --> B(A2) --> C(A3)\n```\n\nA->abA\n\n```mermaid\ngraph LR\nA(A1) --> B((a)) --> C((b)) -->\n-out(out)\nC-->A\n```\n\n----\n\n# 有限自动机和右线性文法\n\n## 有限自动机\n\nNFA，DFA：不确定和确定的有限状态自动机\n\n疯狂地转移！\n\n**形式定义**：DFA五元组，$M=(Q,T,\\delta,q_0,F)$\n\n- Q 有限状态集合\n- T 有限输入字母表\n- $\\delta$ 转换函数 状态q，输入a到达状态p 写作$\\delta(q,a)=p$\n- $q_0$ 初始状态\n- F 终止状态集\n\nL(M)：为M接受的语言，其实就是有向图走来走去呗\n\n## NFA\n\nNFA是一堆节点在一个树上跑，看哪个能最终接受，类似dfs一样。\n\n多种可能性。\n\n## DFA和NFA\n\n存在一个DFA和NFA等效。\n\n子集构造法？\n\n## 带空串转换的NFA\n\n存在无空串转换的NFA和有空串的NFA等效\n\n看不懂证明\n\n## 正则\n\n定义：递归定义如下\n\n- 空字符串和空集都是正则式\n- 字母表中的字母是正则式\n- 如果A，B都是正则式，那(A+B)，(A·B)，(A*)都是正则式\n\n可以给定右线性文法算出正则式\n\n规则R：设x=ax+b，其解x=a*b\n\n解方程(\n\n## 右线性文法和正则集\n\n一个语言是正则集，当且仅当该语言为右线性语言\n\n## 正则表达式和有限自动机\n\n定理：L是正则表达式R表示的语言，则存在一个具有$\\epsilon$转换的有限自动机接受语言L\n\n扩充正则式：\n\n- R是正则式，则$R,R^*$为扩充正则式\n\n- $R^{+k},R^{*k}$->R到R的k次幂的并，以及空集\n- 若$R_1,R_2$为扩充正则式，则$R_1R_2,R_1+R_2$也是\n\n可以通过正则式构建带空串转换的NFA\n\n设R1，R2的两个NFA为M1，M2\n\nR1+R2：并联\n\n```mermaid\ngraph LR\nA(q0) --> B(q1) --M1--> C(qf1) --ε--> qf\nA(q0) --> D(q2) --M2--> E(qf2) --ε--> qf\n```\n\nR1+R2：串联\n```mermaid\ngraph LR\nA(q1) --M1--> C(qf1) --ε--> q2\nq2--M2--> D(qf2)\n```\n\n定理：L被DFA接受，L可以用正则表达式表示\n","slug":"04学习/速通形式语言与自动机","published":1,"updated":"2022-05-29T02:21:59.660Z","_id":"clobly6di001mzowb6je36ss2","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>整蛊咯整蛊咯</p>\n</blockquote>\n<h1 id=\"基础知识\"><a class=\"markdownIt-Anchor\" href=\"#基础知识\"></a> 基础知识</h1>\n<p>没啥p用</p>\n<h2 id=\"集合\"><a class=\"markdownIt-Anchor\" href=\"#集合\"></a> 集合</h2>\n<p><strong>集合的基数</strong>：有限集(不同元素个数)，无限集(等势，双射函数？)</p>\n<p>可数集/不可数集：和自然数一一对应</p>\n<h2 id=\"逻辑\"><a class=\"markdownIt-Anchor\" href=\"#逻辑\"></a> 逻辑</h2>\n<p>没什么好说的</p>\n<h2 id=\"图\"><a class=\"markdownIt-Anchor\" href=\"#图\"></a> 图</h2>\n<p>图的定义：三元组<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>E</mi><mo separator=\"true\">,</mo><mi>ψ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(V,E,\\psi)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mclose\">)</span></span></span></span>,点集、边集、边到两个端点集合的函数</p>\n<p>子图、真子图、生成子图：生成子图有全部点集</p>\n<p>略</p>\n<h2 id=\"证明技术\"><a class=\"markdownIt-Anchor\" href=\"#证明技术\"></a> 证明技术</h2>\n<p>整蛊</p>\n<span id=\"more\"></span>\n<hr />\n<h1 id=\"语言及文法\"><a class=\"markdownIt-Anchor\" href=\"#语言及文法\"></a> 语言及文法</h1>\n<p>终于开始学了</p>\n<h2 id=\"语言的定义与运算\"><a class=\"markdownIt-Anchor\" href=\"#语言的定义与运算\"></a> 语言的定义与运算</h2>\n<p>字符集合：字母表，T（实际上是有限的）</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>空字符串</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>是所有字符串加空串的集合，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>是所有字符串的集合</p>\n<p>定义：语言L是<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>的子集，就是一些字符串的集合</p>\n<p>定义：语言的乘积<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">L_1*L_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>是两者中的字符串连接构成的集合</p>\n<p>定义：L的0次幂是空字符串</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>L</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">L^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>闭包，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>L</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">L^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>正闭包，闭包0-n次幂的并，正闭包1-n次幂的并</p>\n<h2 id=\"文法\"><a class=\"markdownIt-Anchor\" href=\"#文法\"></a> 文法</h2>\n<p>文法G：四元组G=(N,T,P,S)</p>\n<ul>\n<li>N 非终结符有限集</li>\n<li>T 终结符有限集</li>\n<li>P 生成式，“可被替代”的含义</li>\n<li>S 起始符</li>\n</ul>\n<p>约定：</p>\n<table>\n<thead>\n<tr>\n<th>字母表中排在前面的小写字母a，b，c</th>\n<th style=\"text-align:left\">终结符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>字母表中排在前面的大写字母A，B，C</strong></td>\n<td style=\"text-align:left\"><strong>非终结符</strong></td>\n</tr>\n<tr>\n<td><strong>字母表中排在后面的大写字母X，Y，Z</strong></td>\n<td style=\"text-align:left\"><strong>文法符号</strong>（既可以是终结符，也可以是非终结符）</td>\n</tr>\n<tr>\n<td><strong>字母表中排在后面的小写字母u，v，……，z</strong></td>\n<td style=\"text-align:left\"><strong>终结符号串</strong></td>\n</tr>\n<tr>\n<td><strong>小写的希腊字母α，β，γ</strong></td>\n<td style=\"text-align:left\"><strong>文法符号串</strong></td>\n</tr>\n</tbody>\n</table>\n<p>推导与句型：latex箭头忘了是啥，反正就是通过生成式把字符串代换导出。句型是N和T的闭包内容，句子是T的闭包内容。</p>\n<h2 id=\"文法分类\"><a class=\"markdownIt-Anchor\" href=\"#文法分类\"></a> 文法分类</h2>\n<h3 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\"></a> 定义</h3>\n<p>1型：上下文有关\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∣</mi><mi>α</mi><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>β</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha\\rightarrow\\beta,|\\alpha|&lt;=|\\beta|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord\">∣</span></span></span></span></p>\n<p>2型：上下文无关\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span></p>\n<p>3型：正则\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>ω</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow\\omega B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow B\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>右线性左线性</p>\n<p>0型：0</p>\n<h3 id=\"2型文法各种表示法\"><a class=\"markdownIt-Anchor\" href=\"#2型文法各种表示法\"></a> 2型文法各种表示法</h3>\n<p>BNF表示法：把左端相同的生成式合并，用|分隔，箭头用::=替代</p>\n<p>语法图：</p>\n<p>A-&gt;A1A2A3</p>\n<pre class=\"mermaid\">graph LR\nA(A1) --> B(A2) --> C(A3)</pre>\n<p>A-&gt;abA</p>\n<pre class=\"mermaid\">graph LR\nA(A1) --> B((a)) --> C((b)) -->\n-out(out)\nC-->A</pre>\n<hr />\n<h1 id=\"有限自动机和右线性文法\"><a class=\"markdownIt-Anchor\" href=\"#有限自动机和右线性文法\"></a> 有限自动机和右线性文法</h1>\n<h2 id=\"有限自动机\"><a class=\"markdownIt-Anchor\" href=\"#有限自动机\"></a> 有限自动机</h2>\n<p>NFA，DFA：不确定和确定的有限状态自动机</p>\n<p>疯狂地转移！</p>\n<p><strong>形式定义</strong>：DFA五元组，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>δ</mi><mo separator=\"true\">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M=(Q,T,\\delta,q_0,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>Q 有限状态集合</li>\n<li>T 有限输入字母表</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span></span></span></span> 转换函数 状态q，输入a到达状态p 写作<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>δ</mi><mo stretchy=\"false\">(</mo><mi>q</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\delta(q,a)=p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">q_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 初始状态</li>\n<li>F 终止状态集</li>\n</ul>\n<p>L(M)：为M接受的语言，其实就是有向图走来走去呗</p>\n<h2 id=\"nfa\"><a class=\"markdownIt-Anchor\" href=\"#nfa\"></a> NFA</h2>\n<p>NFA是一堆节点在一个树上跑，看哪个能最终接受，类似dfs一样。</p>\n<p>多种可能性。</p>\n<h2 id=\"dfa和nfa\"><a class=\"markdownIt-Anchor\" href=\"#dfa和nfa\"></a> DFA和NFA</h2>\n<p>存在一个DFA和NFA等效。</p>\n<p>子集构造法？</p>\n<h2 id=\"带空串转换的nfa\"><a class=\"markdownIt-Anchor\" href=\"#带空串转换的nfa\"></a> 带空串转换的NFA</h2>\n<p>存在无空串转换的NFA和有空串的NFA等效</p>\n<p>看不懂证明</p>\n<h2 id=\"正则\"><a class=\"markdownIt-Anchor\" href=\"#正则\"></a> 正则</h2>\n<p>定义：递归定义如下</p>\n<ul>\n<li>空字符串和空集都是正则式</li>\n<li>字母表中的字母是正则式</li>\n<li>如果A，B都是正则式，那(A+B)，(A·B)，(A*)都是正则式</li>\n</ul>\n<p>可以给定右线性文法算出正则式</p>\n<p>规则R：设x=ax+b，其解x=a*b</p>\n<p>解方程(</p>\n<h2 id=\"右线性文法和正则集\"><a class=\"markdownIt-Anchor\" href=\"#右线性文法和正则集\"></a> 右线性文法和正则集</h2>\n<p>一个语言是正则集，当且仅当该语言为右线性语言</p>\n<h2 id=\"正则表达式和有限自动机\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式和有限自动机\"></a> 正则表达式和有限自动机</h2>\n<p>定理：L是正则表达式R表示的语言，则存在一个具有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>转换的有限自动机接受语言L</p>\n<p>扩充正则式：</p>\n<ul>\n<li>\n<p>R是正则式，则<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mo separator=\"true\">,</mo><msup><mi>R</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">R,R^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8831359999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>为扩充正则式</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>R</mi><mrow><mo>+</mo><mi>k</mi></mrow></msup><mo separator=\"true\">,</mo><msup><mi>R</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">R^{+k},R^{*k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span></span>-&gt;R到R的k次幂的并，以及空集</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">R_1,R_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>为扩充正则式，则<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><msub><mi>R</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>1</mn></msub><mo>+</mo><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">R_1R_2,R_1+R_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>也是</p>\n</li>\n</ul>\n<p>可以通过正则式构建带空串转换的NFA</p>\n<p>设R1，R2的两个NFA为M1，M2</p>\n<p>R1+R2：并联</p>\n<pre class=\"mermaid\">graph LR\nA(q0) --> B(q1) --M1--> C(qf1) --ε--> qf\nA(q0) --> D(q2) --M2--> E(qf2) --ε--> qf</pre>\n<p>R1+R2：串联</p>\n<pre class=\"mermaid\">graph LR\nA(q1) --M1--> C(qf1) --ε--> q2\nq2--M2--> D(qf2)</pre>\n<p>定理：L被DFA接受，L可以用正则表达式表示</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>整蛊咯整蛊咯</p>\n</blockquote>\n<h1 id=\"基础知识\"><a class=\"markdownIt-Anchor\" href=\"#基础知识\"></a> 基础知识</h1>\n<p>没啥p用</p>\n<h2 id=\"集合\"><a class=\"markdownIt-Anchor\" href=\"#集合\"></a> 集合</h2>\n<p><strong>集合的基数</strong>：有限集(不同元素个数)，无限集(等势，双射函数？)</p>\n<p>可数集/不可数集：和自然数一一对应</p>\n<h2 id=\"逻辑\"><a class=\"markdownIt-Anchor\" href=\"#逻辑\"></a> 逻辑</h2>\n<p>没什么好说的</p>\n<h2 id=\"图\"><a class=\"markdownIt-Anchor\" href=\"#图\"></a> 图</h2>\n<p>图的定义：三元组<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>E</mi><mo separator=\"true\">,</mo><mi>ψ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(V,E,\\psi)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mclose\">)</span></span></span></span>,点集、边集、边到两个端点集合的函数</p>\n<p>子图、真子图、生成子图：生成子图有全部点集</p>\n<p>略</p>\n<h2 id=\"证明技术\"><a class=\"markdownIt-Anchor\" href=\"#证明技术\"></a> 证明技术</h2>\n<p>整蛊</p>","more":"<hr />\n<h1 id=\"语言及文法\"><a class=\"markdownIt-Anchor\" href=\"#语言及文法\"></a> 语言及文法</h1>\n<p>终于开始学了</p>\n<h2 id=\"语言的定义与运算\"><a class=\"markdownIt-Anchor\" href=\"#语言的定义与运算\"></a> 语言的定义与运算</h2>\n<p>字符集合：字母表，T（实际上是有限的）</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>空字符串</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>是所有字符串加空串的集合，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>是所有字符串的集合</p>\n<p>定义：语言L是<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">T^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>的子集，就是一些字符串的集合</p>\n<p>定义：语言的乘积<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">L_1*L_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>是两者中的字符串连接构成的集合</p>\n<p>定义：L的0次幂是空字符串</p>\n<p>定义：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>L</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">L^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.688696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>闭包，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>L</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">L^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>正闭包，闭包0-n次幂的并，正闭包1-n次幂的并</p>\n<h2 id=\"文法\"><a class=\"markdownIt-Anchor\" href=\"#文法\"></a> 文法</h2>\n<p>文法G：四元组G=(N,T,P,S)</p>\n<ul>\n<li>N 非终结符有限集</li>\n<li>T 终结符有限集</li>\n<li>P 生成式，“可被替代”的含义</li>\n<li>S 起始符</li>\n</ul>\n<p>约定：</p>\n<table>\n<thead>\n<tr>\n<th>字母表中排在前面的小写字母a，b，c</th>\n<th style=\"text-align:left\">终结符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>字母表中排在前面的大写字母A，B，C</strong></td>\n<td style=\"text-align:left\"><strong>非终结符</strong></td>\n</tr>\n<tr>\n<td><strong>字母表中排在后面的大写字母X，Y，Z</strong></td>\n<td style=\"text-align:left\"><strong>文法符号</strong>（既可以是终结符，也可以是非终结符）</td>\n</tr>\n<tr>\n<td><strong>字母表中排在后面的小写字母u，v，……，z</strong></td>\n<td style=\"text-align:left\"><strong>终结符号串</strong></td>\n</tr>\n<tr>\n<td><strong>小写的希腊字母α，β，γ</strong></td>\n<td style=\"text-align:left\"><strong>文法符号串</strong></td>\n</tr>\n</tbody>\n</table>\n<p>推导与句型：latex箭头忘了是啥，反正就是通过生成式把字符串代换导出。句型是N和T的闭包内容，句子是T的闭包内容。</p>\n<h2 id=\"文法分类\"><a class=\"markdownIt-Anchor\" href=\"#文法分类\"></a> 文法分类</h2>\n<h3 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\"></a> 定义</h3>\n<p>1型：上下文有关\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∣</mi><mi>α</mi><mi mathvariant=\"normal\">∣</mi><mo>&lt;</mo><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi>β</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha\\rightarrow\\beta,|\\alpha|&lt;=|\\beta|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord\">∣</span></span></span></span></p>\n<p>2型：上下文无关\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span></p>\n<p>3型：正则\t<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>ω</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow\\omega B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">A\\rightarrow B\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>右线性左线性</p>\n<p>0型：0</p>\n<h3 id=\"2型文法各种表示法\"><a class=\"markdownIt-Anchor\" href=\"#2型文法各种表示法\"></a> 2型文法各种表示法</h3>\n<p>BNF表示法：把左端相同的生成式合并，用|分隔，箭头用::=替代</p>\n<p>语法图：</p>\n<p>A-&gt;A1A2A3</p>\n<pre class=\"mermaid\">graph LR\nA(A1) --> B(A2) --> C(A3)</pre>\n<p>A-&gt;abA</p>\n<pre class=\"mermaid\">graph LR\nA(A1) --> B((a)) --> C((b)) -->\n-out(out)\nC-->A</pre>\n<hr />\n<h1 id=\"有限自动机和右线性文法\"><a class=\"markdownIt-Anchor\" href=\"#有限自动机和右线性文法\"></a> 有限自动机和右线性文法</h1>\n<h2 id=\"有限自动机\"><a class=\"markdownIt-Anchor\" href=\"#有限自动机\"></a> 有限自动机</h2>\n<p>NFA，DFA：不确定和确定的有限状态自动机</p>\n<p>疯狂地转移！</p>\n<p><strong>形式定义</strong>：DFA五元组，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>δ</mi><mo separator=\"true\">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M=(Q,T,\\delta,q_0,F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li>Q 有限状态集合</li>\n<li>T 有限输入字母表</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span></span></span></span> 转换函数 状态q，输入a到达状态p 写作<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>δ</mi><mo stretchy=\"false\">(</mo><mi>q</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\delta(q,a)=p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">q_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 初始状态</li>\n<li>F 终止状态集</li>\n</ul>\n<p>L(M)：为M接受的语言，其实就是有向图走来走去呗</p>\n<h2 id=\"nfa\"><a class=\"markdownIt-Anchor\" href=\"#nfa\"></a> NFA</h2>\n<p>NFA是一堆节点在一个树上跑，看哪个能最终接受，类似dfs一样。</p>\n<p>多种可能性。</p>\n<h2 id=\"dfa和nfa\"><a class=\"markdownIt-Anchor\" href=\"#dfa和nfa\"></a> DFA和NFA</h2>\n<p>存在一个DFA和NFA等效。</p>\n<p>子集构造法？</p>\n<h2 id=\"带空串转换的nfa\"><a class=\"markdownIt-Anchor\" href=\"#带空串转换的nfa\"></a> 带空串转换的NFA</h2>\n<p>存在无空串转换的NFA和有空串的NFA等效</p>\n<p>看不懂证明</p>\n<h2 id=\"正则\"><a class=\"markdownIt-Anchor\" href=\"#正则\"></a> 正则</h2>\n<p>定义：递归定义如下</p>\n<ul>\n<li>空字符串和空集都是正则式</li>\n<li>字母表中的字母是正则式</li>\n<li>如果A，B都是正则式，那(A+B)，(A·B)，(A*)都是正则式</li>\n</ul>\n<p>可以给定右线性文法算出正则式</p>\n<p>规则R：设x=ax+b，其解x=a*b</p>\n<p>解方程(</p>\n<h2 id=\"右线性文法和正则集\"><a class=\"markdownIt-Anchor\" href=\"#右线性文法和正则集\"></a> 右线性文法和正则集</h2>\n<p>一个语言是正则集，当且仅当该语言为右线性语言</p>\n<h2 id=\"正则表达式和有限自动机\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式和有限自动机\"></a> 正则表达式和有限自动机</h2>\n<p>定理：L是正则表达式R表示的语言，则存在一个具有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ϵ</span></span></span></span>转换的有限自动机接受语言L</p>\n<p>扩充正则式：</p>\n<ul>\n<li>\n<p>R是正则式，则<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mo separator=\"true\">,</mo><msup><mi>R</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">R,R^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8831359999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span>为扩充正则式</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>R</mi><mrow><mo>+</mo><mi>k</mi></mrow></msup><mo separator=\"true\">,</mo><msup><mi>R</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">R^{+k},R^{*k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span></span>-&gt;R到R的k次幂的并，以及空集</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">R_1,R_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>为扩充正则式，则<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><msub><mi>R</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>R</mi><mn>1</mn></msub><mo>+</mo><msub><mi>R</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">R_1R_2,R_1+R_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>也是</p>\n</li>\n</ul>\n<p>可以通过正则式构建带空串转换的NFA</p>\n<p>设R1，R2的两个NFA为M1，M2</p>\n<p>R1+R2：并联</p>\n<pre class=\"mermaid\">graph LR\nA(q0) --> B(q1) --M1--> C(qf1) --ε--> qf\nA(q0) --> D(q2) --M2--> E(qf2) --ε--> qf</pre>\n<p>R1+R2：串联</p>\n<pre class=\"mermaid\">graph LR\nA(q1) --M1--> C(qf1) --ε--> q2\nq2--M2--> D(qf2)</pre>\n<p>定理：L被DFA接受，L可以用正则表达式表示</p>"},{"title":"Hello?","date":"2021-10-28T16:00:00.000Z","top":null,"_content":"这里以后也许会有一些胡言乱语...","source":"_posts/胡言乱语们/0X00.md","raw":"---\ntitle: Hello?\ntag: 胡言乱语们\ndate: 2021-10-29\ntop: \ncategory: 胡言乱语\n---\n这里以后也许会有一些胡言乱语...","slug":"胡言乱语们/0X00","published":1,"updated":"2022-01-11T16:52:04.174Z","_id":"clobly6dk001qzowb2hq2hqxp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这里以后也许会有一些胡言乱语…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这里以后也许会有一些胡言乱语…</p>\n"},{"title":"鸽巢原理","toc":true,"date":"2022-01-09T17:10:00.000Z","_content":"\n\n\n# 内容\n\n鸽巢原理及其一些推论，包括但不限于\n\n- 简单形式\n- 中国剩余定理\n- 加强形式\n- Ramesy定理\n- 呃呃\n\n<!-- more -->\n\n---\n\n## 简单形式\n\n> n+1个物品放入n个盒子中，至少存在一个盒子中存在多个物品\n\n可以抽象表示为:\n\n令X，Y为两有限集，令f为一个从X到Y的函数\n\n- 若X的元素大于Y的元素，则f不是一对一的\n- 若X和Y有相同个数的元素，且f是映上的，则f是一对一的\n- 若X和Y有相同个数的元素，且f是一对一的，则f是映上的\n\n然后就可以发展出一些应用了\n\n---\n\n## 推论：中国剩余定理\n\n> 令m和n为互素的正整数，有正整数a、b，且a不大于m-1，b不大于n-1。则存在x，x mod m = a，x mod n = b。\n\n证明：先得出在a，a+m，a+2m，...(n-1)m+a中mod n没有相同的余数。因此n个数中0到n-1每个数都作为余数出现。那对与b也存在对应的p令pm+a mod n = b\n\n----\n\n## Ramsey定理\n\n> 在6个人中，或有三个人他们彼此互相都认识，或有三个人，他们中两两都彼此不认识。\n\n也就是说：\n\n考虑一个6个点的无向完全图，将边染成两种颜色。那么必定存在一个三角形三条边为相同的颜色。\n\n也可以表示为\n\n$$K_6\\rightarrow K_3,K_3$$\n\n更一般的定义如下：\n\nm，n为两个不小于2的整数，那么将存在一个正整数p，令$$K_P \\rightarrow K_m,K_n$$\n\nRamsey数r(m,n)为令等式成立的最小整数p\n\n有定理\n\n`r(2,n)=n`以及`r(m,2)=m`\n\n可以往更高维推广。。。\n","source":"_posts/04学习/鸽巢原理.md","raw":"---\ntitle: 鸽巢原理\ntoc: true\ndate: 2022-01-10 01:10:00\ntags: 数学\ncategories:\n- 组合数学\n---\n\n\n\n# 内容\n\n鸽巢原理及其一些推论，包括但不限于\n\n- 简单形式\n- 中国剩余定理\n- 加强形式\n- Ramesy定理\n- 呃呃\n\n<!-- more -->\n\n---\n\n## 简单形式\n\n> n+1个物品放入n个盒子中，至少存在一个盒子中存在多个物品\n\n可以抽象表示为:\n\n令X，Y为两有限集，令f为一个从X到Y的函数\n\n- 若X的元素大于Y的元素，则f不是一对一的\n- 若X和Y有相同个数的元素，且f是映上的，则f是一对一的\n- 若X和Y有相同个数的元素，且f是一对一的，则f是映上的\n\n然后就可以发展出一些应用了\n\n---\n\n## 推论：中国剩余定理\n\n> 令m和n为互素的正整数，有正整数a、b，且a不大于m-1，b不大于n-1。则存在x，x mod m = a，x mod n = b。\n\n证明：先得出在a，a+m，a+2m，...(n-1)m+a中mod n没有相同的余数。因此n个数中0到n-1每个数都作为余数出现。那对与b也存在对应的p令pm+a mod n = b\n\n----\n\n## Ramsey定理\n\n> 在6个人中，或有三个人他们彼此互相都认识，或有三个人，他们中两两都彼此不认识。\n\n也就是说：\n\n考虑一个6个点的无向完全图，将边染成两种颜色。那么必定存在一个三角形三条边为相同的颜色。\n\n也可以表示为\n\n$$K_6\\rightarrow K_3,K_3$$\n\n更一般的定义如下：\n\nm，n为两个不小于2的整数，那么将存在一个正整数p，令$$K_P \\rightarrow K_m,K_n$$\n\nRamsey数r(m,n)为令等式成立的最小整数p\n\n有定理\n\n`r(2,n)=n`以及`r(m,2)=m`\n\n可以往更高维推广。。。\n","slug":"04学习/鸽巢原理","published":1,"updated":"2023-04-06T17:54:45.515Z","_id":"clobly6dl001szowb2gs53x42","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"内容\"><a class=\"markdownIt-Anchor\" href=\"#内容\"></a> 内容</h1>\n<p>鸽巢原理及其一些推论，包括但不限于</p>\n<ul>\n<li>简单形式</li>\n<li>中国剩余定理</li>\n<li>加强形式</li>\n<li>Ramesy定理</li>\n<li>呃呃</li>\n</ul>\n<span id=\"more\"></span>\n<hr />\n<h2 id=\"简单形式\"><a class=\"markdownIt-Anchor\" href=\"#简单形式\"></a> 简单形式</h2>\n<blockquote>\n<p>n+1个物品放入n个盒子中，至少存在一个盒子中存在多个物品</p>\n</blockquote>\n<p>可以抽象表示为:</p>\n<p>令X，Y为两有限集，令f为一个从X到Y的函数</p>\n<ul>\n<li>若X的元素大于Y的元素，则f不是一对一的</li>\n<li>若X和Y有相同个数的元素，且f是映上的，则f是一对一的</li>\n<li>若X和Y有相同个数的元素，且f是一对一的，则f是映上的</li>\n</ul>\n<p>然后就可以发展出一些应用了</p>\n<hr />\n<h2 id=\"推论中国剩余定理\"><a class=\"markdownIt-Anchor\" href=\"#推论中国剩余定理\"></a> 推论：中国剩余定理</h2>\n<blockquote>\n<p>令m和n为互素的正整数，有正整数a、b，且a不大于m-1，b不大于n-1。则存在x，x mod m = a，x mod n = b。</p>\n</blockquote>\n<p>证明：先得出在a，a+m，a+2m，…(n-1)m+a中mod n没有相同的余数。因此n个数中0到n-1每个数都作为余数出现。那对与b也存在对应的p令pm+a mod n = b</p>\n<hr />\n<h2 id=\"ramsey定理\"><a class=\"markdownIt-Anchor\" href=\"#ramsey定理\"></a> Ramsey定理</h2>\n<blockquote>\n<p>在6个人中，或有三个人他们彼此互相都认识，或有三个人，他们中两两都彼此不认识。</p>\n</blockquote>\n<p>也就是说：</p>\n<p>考虑一个6个点的无向完全图，将边染成两种颜色。那么必定存在一个三角形三条边为相同的颜色。</p>\n<p>也可以表示为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mn>6</mn></msub><mo>→</mo><msub><mi>K</mi><mn>3</mn></msub><mo separator=\"true\">,</mo><msub><mi>K</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">K_6\\rightarrow K_3,K_3\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>更一般的定义如下：</p>\n<p>m，n为两个不小于2的整数，那么将存在一个正整数p，令$$K_P \\rightarrow K_m,K_n$$</p>\n<p>Ramsey数r(m,n)为令等式成立的最小整数p</p>\n<p>有定理</p>\n<p><code>r(2,n)=n</code>以及<code>r(m,2)=m</code></p>\n<p>可以往更高维推广。。。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"内容\"><a class=\"markdownIt-Anchor\" href=\"#内容\"></a> 内容</h1>\n<p>鸽巢原理及其一些推论，包括但不限于</p>\n<ul>\n<li>简单形式</li>\n<li>中国剩余定理</li>\n<li>加强形式</li>\n<li>Ramesy定理</li>\n<li>呃呃</li>\n</ul>","more":"<hr />\n<h2 id=\"简单形式\"><a class=\"markdownIt-Anchor\" href=\"#简单形式\"></a> 简单形式</h2>\n<blockquote>\n<p>n+1个物品放入n个盒子中，至少存在一个盒子中存在多个物品</p>\n</blockquote>\n<p>可以抽象表示为:</p>\n<p>令X，Y为两有限集，令f为一个从X到Y的函数</p>\n<ul>\n<li>若X的元素大于Y的元素，则f不是一对一的</li>\n<li>若X和Y有相同个数的元素，且f是映上的，则f是一对一的</li>\n<li>若X和Y有相同个数的元素，且f是一对一的，则f是映上的</li>\n</ul>\n<p>然后就可以发展出一些应用了</p>\n<hr />\n<h2 id=\"推论中国剩余定理\"><a class=\"markdownIt-Anchor\" href=\"#推论中国剩余定理\"></a> 推论：中国剩余定理</h2>\n<blockquote>\n<p>令m和n为互素的正整数，有正整数a、b，且a不大于m-1，b不大于n-1。则存在x，x mod m = a，x mod n = b。</p>\n</blockquote>\n<p>证明：先得出在a，a+m，a+2m，…(n-1)m+a中mod n没有相同的余数。因此n个数中0到n-1每个数都作为余数出现。那对与b也存在对应的p令pm+a mod n = b</p>\n<hr />\n<h2 id=\"ramsey定理\"><a class=\"markdownIt-Anchor\" href=\"#ramsey定理\"></a> Ramsey定理</h2>\n<blockquote>\n<p>在6个人中，或有三个人他们彼此互相都认识，或有三个人，他们中两两都彼此不认识。</p>\n</blockquote>\n<p>也就是说：</p>\n<p>考虑一个6个点的无向完全图，将边染成两种颜色。那么必定存在一个三角形三条边为相同的颜色。</p>\n<p>也可以表示为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>K</mi><mn>6</mn></msub><mo>→</mo><msub><mi>K</mi><mn>3</mn></msub><mo separator=\"true\">,</mo><msub><mi>K</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">K_6\\rightarrow K_3,K_3\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>更一般的定义如下：</p>\n<p>m，n为两个不小于2的整数，那么将存在一个正整数p，令$$K_P \\rightarrow K_m,K_n$$</p>\n<p>Ramsey数r(m,n)为令等式成立的最小整数p</p>\n<p>有定理</p>\n<p><code>r(2,n)=n</code>以及<code>r(m,2)=m</code></p>\n<p>可以往更高维推广。。。</p>"},{"title":"瞎掰","date":"2021-11-02T16:00:00.000Z","_content":"\n\n\n> 稍微回顾一下我这十几年的无聊人生经历，可以发现差不多没有任何意义。\n\n是不是说的有点过头了（\n\n其实没有？\n\n总的来说，是有乐子，但是与故事无缘\n\n- 从来没有自己真正想做什么\n- 从来没有真正努力做过什么\n\n因此，\n\n付出汗与血，历经千难万难，无论结果为何，在将来回想起时，\n\n如同某个明媚夏日、某场淅沥小雨、某道绚丽彩虹、某天傍晚意外地抬起头所看见的红色、橙色、粉色、玫瑰色、湖蓝色、群青色一般\n\n令人莫名心跳加速的所谓美好回忆，\n\n对我来说好像并不存在。\n\n**或许有过？**\n\n然而最后的结局不是成功或者失败，而是被放弃、丢弃、遗忘，以至于不了了之。所谓找到的能够为之奋斗的事物最后不过是随波逐流，或者莫名自信的自我催眠。\n\n无论如何，最后只能看着别人的故事，感受并不存在的回忆。最后再想想，如果我能这样能够如何如何。\n\n**都一样了。**\n\n想着改变却无所作为，渴望故事却不主动争取，向往美好但是固守蜗居。\n\n# 那又如何\n\n老子活得还不是好好的，哈哈。\n\n> 顺便做下实验，传新的md会不会影响旧的评论啊\n","source":"_posts/胡言乱语们/0X01.md","raw":"---\ntitle: 瞎掰\ntag: 胡言乱语们\ndate: 2021-11-03\ncategory: 胡言乱语\n---\n\n\n\n> 稍微回顾一下我这十几年的无聊人生经历，可以发现差不多没有任何意义。\n\n是不是说的有点过头了（\n\n其实没有？\n\n总的来说，是有乐子，但是与故事无缘\n\n- 从来没有自己真正想做什么\n- 从来没有真正努力做过什么\n\n因此，\n\n付出汗与血，历经千难万难，无论结果为何，在将来回想起时，\n\n如同某个明媚夏日、某场淅沥小雨、某道绚丽彩虹、某天傍晚意外地抬起头所看见的红色、橙色、粉色、玫瑰色、湖蓝色、群青色一般\n\n令人莫名心跳加速的所谓美好回忆，\n\n对我来说好像并不存在。\n\n**或许有过？**\n\n然而最后的结局不是成功或者失败，而是被放弃、丢弃、遗忘，以至于不了了之。所谓找到的能够为之奋斗的事物最后不过是随波逐流，或者莫名自信的自我催眠。\n\n无论如何，最后只能看着别人的故事，感受并不存在的回忆。最后再想想，如果我能这样能够如何如何。\n\n**都一样了。**\n\n想着改变却无所作为，渴望故事却不主动争取，向往美好但是固守蜗居。\n\n# 那又如何\n\n老子活得还不是好好的，哈哈。\n\n> 顺便做下实验，传新的md会不会影响旧的评论啊\n","slug":"胡言乱语们/0X01","published":1,"updated":"2022-01-03T13:41:28.552Z","_id":"clobly6dm001wzowb6brebfht","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>稍微回顾一下我这十几年的无聊人生经历，可以发现差不多没有任何意义。</p>\n</blockquote>\n<p>是不是说的有点过头了（</p>\n<p>其实没有？</p>\n<p>总的来说，是有乐子，但是与故事无缘</p>\n<ul>\n<li>从来没有自己真正想做什么</li>\n<li>从来没有真正努力做过什么</li>\n</ul>\n<p>因此，</p>\n<p>付出汗与血，历经千难万难，无论结果为何，在将来回想起时，</p>\n<p>如同某个明媚夏日、某场淅沥小雨、某道绚丽彩虹、某天傍晚意外地抬起头所看见的红色、橙色、粉色、玫瑰色、湖蓝色、群青色一般</p>\n<p>令人莫名心跳加速的所谓美好回忆，</p>\n<p>对我来说好像并不存在。</p>\n<p><strong>或许有过？</strong></p>\n<p>然而最后的结局不是成功或者失败，而是被放弃、丢弃、遗忘，以至于不了了之。所谓找到的能够为之奋斗的事物最后不过是随波逐流，或者莫名自信的自我催眠。</p>\n<p>无论如何，最后只能看着别人的故事，感受并不存在的回忆。最后再想想，如果我能这样能够如何如何。</p>\n<p><strong>都一样了。</strong></p>\n<p>想着改变却无所作为，渴望故事却不主动争取，向往美好但是固守蜗居。</p>\n<h1 id=\"那又如何\"><a class=\"markdownIt-Anchor\" href=\"#那又如何\"></a> 那又如何</h1>\n<p>老子活得还不是好好的，哈哈。</p>\n<blockquote>\n<p>顺便做下实验，传新的md会不会影响旧的评论啊</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>稍微回顾一下我这十几年的无聊人生经历，可以发现差不多没有任何意义。</p>\n</blockquote>\n<p>是不是说的有点过头了（</p>\n<p>其实没有？</p>\n<p>总的来说，是有乐子，但是与故事无缘</p>\n<ul>\n<li>从来没有自己真正想做什么</li>\n<li>从来没有真正努力做过什么</li>\n</ul>\n<p>因此，</p>\n<p>付出汗与血，历经千难万难，无论结果为何，在将来回想起时，</p>\n<p>如同某个明媚夏日、某场淅沥小雨、某道绚丽彩虹、某天傍晚意外地抬起头所看见的红色、橙色、粉色、玫瑰色、湖蓝色、群青色一般</p>\n<p>令人莫名心跳加速的所谓美好回忆，</p>\n<p>对我来说好像并不存在。</p>\n<p><strong>或许有过？</strong></p>\n<p>然而最后的结局不是成功或者失败，而是被放弃、丢弃、遗忘，以至于不了了之。所谓找到的能够为之奋斗的事物最后不过是随波逐流，或者莫名自信的自我催眠。</p>\n<p>无论如何，最后只能看着别人的故事，感受并不存在的回忆。最后再想想，如果我能这样能够如何如何。</p>\n<p><strong>都一样了。</strong></p>\n<p>想着改变却无所作为，渴望故事却不主动争取，向往美好但是固守蜗居。</p>\n<h1 id=\"那又如何\"><a class=\"markdownIt-Anchor\" href=\"#那又如何\"></a> 那又如何</h1>\n<p>老子活得还不是好好的，哈哈。</p>\n<blockquote>\n<p>顺便做下实验，传新的md会不会影响旧的评论啊</p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/01或许是算法/回文树/pam.jpg","post":"clobly6cv000bzowb5jld76r7","slug":"pam.jpg","modified":1,"renderable":1},{"_id":"source/_posts/01或许是算法/回文树/tree.png","post":"clobly6cv000bzowb5jld76r7","slug":"tree.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"clobly6cy000fzowbab84ey1v","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d3000mzowbbxaeb92p"},{"post_id":"clobly6cz000gzowbes3tcqxz","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d5000qzowb4h2aa2dd"},{"post_id":"clobly6cu000azowb33gff6lw","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d7000tzowb139e1h9t"},{"post_id":"clobly6cu000azowb33gff6lw","category_id":"clobly6d0000hzowbbq7gc0w3","_id":"clobly6d8000xzowbfrn8d5a6"},{"post_id":"clobly6cn0003zowbc5klas2o","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6d90011zowbfhswa91p"},{"post_id":"clobly6cn0003zowbc5klas2o","category_id":"clobly6d3000nzowbb9jf11xp","_id":"clobly6db0014zowbedkz5wc7"},{"post_id":"clobly6cv000bzowb5jld76r7","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6dc0017zowbafsg5jzu"},{"post_id":"clobly6cv000bzowb5jld76r7","category_id":"clobly6d3000nzowbb9jf11xp","_id":"clobly6de001azowbhfz8al5m"},{"post_id":"clobly6cp0005zowb15381aoc","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6df001dzowb6a8yc6wr"},{"post_id":"clobly6cp0005zowb15381aoc","category_id":"clobly6d3000nzowbb9jf11xp","_id":"clobly6dg001izowb46wufpsg"},{"post_id":"clobly6d1000kzowbgu534vbb","category_id":"clobly6cq0006zowbcmgq4fcc","_id":"clobly6di001lzowb2fus0g15"},{"post_id":"clobly6d1000kzowbgu534vbb","category_id":"clobly6db0016zowb3r46fkco","_id":"clobly6dk001pzowb2df6047z"},{"post_id":"clobly6d2000lzowb5n8n3cv8","category_id":"clobly6df001ezowb11wqgi15","_id":"clobly6dm001uzowbfhfaeb7y"},{"post_id":"clobly6d4000pzowb9c6o8ppa","category_id":"clobly6df001ezowb11wqgi15","_id":"clobly6do001zzowbfssl6wux"},{"post_id":"clobly6d6000szowb0uo8d8b8","category_id":"clobly6df001ezowb11wqgi15","_id":"clobly6dp0022zowb9hfo1vfy"},{"post_id":"clobly6d7000wzowbcolp5stv","category_id":"clobly6do001yzowbfati1ol8","_id":"clobly6dp0026zowbcsax2slu"},{"post_id":"clobly6d8000zzowbe13y6vmr","category_id":"clobly6dp0023zowbbwxc3l7o","_id":"clobly6dq002azowb3rshbo37"},{"post_id":"clobly6da0013zowbf72sf8q8","category_id":"clobly6dp0027zowb9u9sa5c6","_id":"clobly6dr002ezowb3crgaehg"},{"post_id":"clobly6db0015zowbfjat382a","category_id":"clobly6dq002bzowbgicldfrm","_id":"clobly6ds002jzowb0tbihlma"},{"post_id":"clobly6dc0018zowbg3hqa3se","category_id":"clobly6dp0023zowbbwxc3l7o","_id":"clobly6dt002nzowb31lhhgc6"},{"post_id":"clobly6de001czowb47fw3ost","category_id":"clobly6dp0023zowbbwxc3l7o","_id":"clobly6du002qzowbckqb164v"},{"post_id":"clobly6dg001gzowb7zi7anqb","category_id":"clobly6dt002mzowbe2i3c5hc","_id":"clobly6dw002vzowbezyk52sg"},{"post_id":"clobly6dh001jzowb0zm3h8no","category_id":"clobly6dt002mzowbe2i3c5hc","_id":"clobly6dx002yzowb41u7b3w9"},{"post_id":"clobly6di001mzowb6je36ss2","category_id":"clobly6du002uzowbdvba9uiw","_id":"clobly6dx0032zowb64mn7zm1"},{"post_id":"clobly6dk001qzowb2hq2hqxp","category_id":"clobly6dx002zzowb1atd934k","_id":"clobly6dy0036zowbe12oc9au"},{"post_id":"clobly6dl001szowb2gs53x42","category_id":"clobly6dy0033zowbgr9gg144","_id":"clobly6dz003azowb1n5h121q"},{"post_id":"clobly6dm001wzowb6brebfht","category_id":"clobly6dx002zzowb1atd934k","_id":"clobly6dz003czowbg25r16ws"}],"PostTag":[{"post_id":"clobly6cn0003zowbc5klas2o","tag_id":"clobly6cs0007zowb4u479qyy","_id":"clobly6cy000ezowb2zwn2txa"},{"post_id":"clobly6cp0005zowb15381aoc","tag_id":"clobly6cs0007zowb4u479qyy","_id":"clobly6d1000jzowbbnng3y59"},{"post_id":"clobly6cu000azowb33gff6lw","tag_id":"clobly6d1000izowbgibndgl4","_id":"clobly6d5000rzowbgjyx0mpw"},{"post_id":"clobly6cv000bzowb5jld76r7","tag_id":"clobly6d4000ozowb7ptb32wm","_id":"clobly6d8000yzowb33yedac5"},{"post_id":"clobly6cy000fzowbab84ey1v","tag_id":"clobly6d7000vzowb9ebfea5l","_id":"clobly6de001bzowb92cf1ncz"},{"post_id":"clobly6cy000fzowbab84ey1v","tag_id":"clobly6da0012zowb463j6dbp","_id":"clobly6df001fzowb89zp2vvl"},{"post_id":"clobly6cz000gzowbes3tcqxz","tag_id":"clobly6dd0019zowb0w1ych3y","_id":"clobly6di001kzowb2g2l9ng5"},{"post_id":"clobly6d1000kzowbgu534vbb","tag_id":"clobly6dg001hzowb0h8wa76x","_id":"clobly6dl001rzowb4jizb9vr"},{"post_id":"clobly6d4000pzowb9c6o8ppa","tag_id":"clobly6dj001ozowb9gf15ivs","_id":"clobly6dn001xzowbac1655v2"},{"post_id":"clobly6d6000szowb0uo8d8b8","tag_id":"clobly6dj001ozowb9gf15ivs","_id":"clobly6dp0021zowb9gmxc16g"},{"post_id":"clobly6d7000wzowbcolp5stv","tag_id":"clobly6do0020zowbblnmdupt","_id":"clobly6dp0025zowbdt4m4h08"},{"post_id":"clobly6d8000zzowbe13y6vmr","tag_id":"clobly6dp0024zowbdtm3hcyu","_id":"clobly6dq0029zowb7pz87r19"},{"post_id":"clobly6da0013zowbf72sf8q8","tag_id":"clobly6dq0028zowbhpcsei04","_id":"clobly6dr002dzowbeg69czvy"},{"post_id":"clobly6db0015zowbfjat382a","tag_id":"clobly6dq0028zowbhpcsei04","_id":"clobly6ds002hzowb7iqi3pd0"},{"post_id":"clobly6dc0018zowbg3hqa3se","tag_id":"clobly6dp0024zowbdtm3hcyu","_id":"clobly6dt002lzowbfssqhvnw"},{"post_id":"clobly6de001czowb47fw3ost","tag_id":"clobly6dp0024zowbdtm3hcyu","_id":"clobly6dt002pzowbf8inhr10"},{"post_id":"clobly6dg001gzowb7zi7anqb","tag_id":"clobly6dt002ozowb56qygimx","_id":"clobly6du002tzowbhs0l25nh"},{"post_id":"clobly6dh001jzowb0zm3h8no","tag_id":"clobly6du002szowbd5oc9q87","_id":"clobly6dx002xzowb5l8bgkte"},{"post_id":"clobly6di001mzowb6je36ss2","tag_id":"clobly6dw002wzowb4jq3acew","_id":"clobly6dx0031zowbfv735dli"},{"post_id":"clobly6dk001qzowb2hq2hqxp","tag_id":"clobly6dx0030zowb7i17fyyo","_id":"clobly6dy0035zowbf37p6u4v"},{"post_id":"clobly6dl001szowb2gs53x42","tag_id":"clobly6dy0034zowb8adf63gu","_id":"clobly6dz0039zowb5fhr7uas"},{"post_id":"clobly6dm001wzowb6brebfht","tag_id":"clobly6dx0030zowb7i17fyyo","_id":"clobly6dz003bzowbaxhy6pjt"}],"Tag":[{"name":"SAM","_id":"clobly6cs0007zowb4u479qyy"},{"name":"DP","_id":"clobly6d1000izowbgibndgl4"},{"name":"回文","_id":"clobly6d4000ozowb7ptb32wm"},{"name":"莫队","_id":"clobly6d7000vzowb9ebfea5l"},{"name":"线段树","_id":"clobly6da0012zowb463j6dbp"},{"name":"数据结构","_id":"clobly6dd0019zowb0w1ych3y"},{"name":"数论","_id":"clobly6dg001hzowb0h8wa76x"},{"name":"字符串","_id":"clobly6dj001ozowb9gf15ivs"},{"name":"hexo","_id":"clobly6do0020zowbblnmdupt"},{"name":"RL","_id":"clobly6dp0024zowbdtm3hcyu"},{"name":"语言","_id":"clobly6dq0028zowbhpcsei04"},{"name":"信息论","_id":"clobly6dt002ozowb56qygimx"},{"name":"通信原理","_id":"clobly6du002szowbd5oc9q87"},{"name":"自动机","_id":"clobly6dw002wzowb4jq3acew"},{"name":"胡言乱语们","_id":"clobly6dx0030zowb7i17fyyo"},{"name":"数学","_id":"clobly6dy0034zowb8adf63gu"}]}}